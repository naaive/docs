{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to MyDoc.\ud83d\ude0d For source code visit github .","title":"Welcome to MyDoc.\ud83d\ude0d"},{"location":"index.html#welcome-to-mydoc","text":"For source code visit github .","title":"Welcome to MyDoc.\ud83d\ude0d"},{"location":"collection/hashmap.html","text":"HashMap \u6982\u8ff0 \u6570\u636e\u7ed3\u6784 \u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811 \u7c7b\u56fe QA \u4f55\u65f6\u53d8\u7ea2\u9ed1\u6811 /** * The bin count threshold for using a tree rather than list for a * bin. Bins are converted to trees when adding an element to a * bin with at least this many nodes. The value must be greater * than 2 and should be at least 8 to mesh with assumptions in * tree removal about conversion back to plain bins upon * shrinkage. */ static final int TREEIFY_THRESHOLD = 8; /** * The bin count threshold for untreeifying a (split) bin during a * resize operation. Should be less than TREEIFY_THRESHOLD, and at * most 6 to mesh with shrinkage detection under removal. */ static final int UNTREEIFY_THRESHOLD = 6; \u4f55\u65f6\u6269\u5bb9 \u8d1f\u8f7d\u56e0\u5b50\u7684\u5b9a\u4e49\u516c\u5f0f\uff1a threshold = table.length * loadFactor \u7ed3\u5408\u8d1f\u8f7d\u56e0\u5b50\u7684\u5b9a\u4e49\u516c\u5f0f\u53ef\u77e5\uff0cthreshold\u5c31\u662f\u5728\u6b64Load factor\u548clength(\u6570\u7ec4\u957f\u5ea6)\u5bf9\u5e94\u4e0b\u5141\u8bb8\u7684\u6700\u5927\u5143\u7d20\u6570\u76ee\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u76ee\u5c31\u91cd\u65b0resize(\u6269\u5bb9)\uff0c \u6269\u5bb9\u540e\u7684HashMap\u5bb9\u91cf\u662f\u4e4b\u524d\u5bb9\u91cf\u7684\u4e24\u500d\u3002\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u56e0\u5b500.75\u662f\u5bf9\u7a7a\u95f4\u548c\u65f6\u95f4\u6548\u7387\u7684\u4e00\u4e2a\u5e73\u8861\u9009\u62e9\uff0c\u5efa\u8bae\u5927\u5bb6\u4e0d\u8981\u4fee\u6539\uff0c\u9664\u975e\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c \u5982\u679c\u5185\u5b58\u7a7a\u95f4\u5f88\u591a\u800c\u53c8\u5bf9\u65f6\u95f4\u6548\u7387\u8981\u6c42\u5f88\u9ad8\uff0c\u53ef\u4ee5\u964d\u4f4e\u8d1f\u8f7d\u56e0\u5b50Load factor\u7684\u503c\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u5185\u5b58\u7a7a\u95f4\u7d27\u5f20\u800c\u5bf9\u65f6\u95f4\u6548\u7387\u8981\u6c42\u4e0d\u9ad8\uff0c\u53ef\u4ee5\u589e\u52a0\u8d1f\u8f7d\u56e0\u5b50loadFactor\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5927\u4e8e1\u3002 put\u65b9\u6cd5\u6d41\u7a0b \u4e3a\u4f55table\u7684\u957f\u5ea6length\u4e3a2\u7684n\u6b21\u65b9 \u5e38\u89c4\u7684\u8bbe\u8ba1\u662f\u628a\u6876\u7684\u5927\u5c0f\u8bbe\u8ba1\u4e3a\u7d20\u6570\uff0c\u76f8\u5bf9\u6765\u8bf4\u7d20\u6570\u5bfc\u81f4\u51b2\u7a81\u7684\u6982\u7387\u8981\u5c0f\u4e8e\u5408\u6570\u3002 HashMap\u91c7\u7528\u8fd9\u79cd\u975e\u5e38\u89c4\u8bbe\u8ba1\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5728 \u53d6\u6a21 \u548c \u6269\u5bb9 \u65f6\u505a\u4f18\u5316\u3002 \u53d6\u6a21\uff1a\u4f4d\u8fd0\u7b97\u4ee3\u66ff\u53d6\u6a21\u8fd0\u7b97\u3002 \u6269\u5bb9\uff1a\u4e0b\u6807\u4e0d\u53d8\uff0c\u6216\u8005+oldCapacity \u6269\u5c55\uff1a \u4f7f\u7528\u4f4d\u8fd0\u7b97(&)\u4ee3\u66ff\u53d6\u6a21\u8fd0\u7b97(%) JAVA8\u5bf9HashMap\u6269\u5bb9\u673a\u5236\u7684\u4f18\u5316","title":"Hashmap"},{"location":"collection/hashmap.html#hashmap","text":"","title":"HashMap"},{"location":"collection/hashmap.html#_1","text":"","title":"\u6982\u8ff0"},{"location":"collection/hashmap.html#_2","text":"\u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811","title":"\u6570\u636e\u7ed3\u6784"},{"location":"collection/hashmap.html#_3","text":"","title":"\u7c7b\u56fe"},{"location":"collection/hashmap.html#qa","text":"","title":"QA"},{"location":"collection/hashmap.html#_4","text":"/** * The bin count threshold for using a tree rather than list for a * bin. Bins are converted to trees when adding an element to a * bin with at least this many nodes. The value must be greater * than 2 and should be at least 8 to mesh with assumptions in * tree removal about conversion back to plain bins upon * shrinkage. */ static final int TREEIFY_THRESHOLD = 8; /** * The bin count threshold for untreeifying a (split) bin during a * resize operation. Should be less than TREEIFY_THRESHOLD, and at * most 6 to mesh with shrinkage detection under removal. */ static final int UNTREEIFY_THRESHOLD = 6;","title":"\u4f55\u65f6\u53d8\u7ea2\u9ed1\u6811"},{"location":"collection/hashmap.html#_5","text":"\u8d1f\u8f7d\u56e0\u5b50\u7684\u5b9a\u4e49\u516c\u5f0f\uff1a threshold = table.length * loadFactor \u7ed3\u5408\u8d1f\u8f7d\u56e0\u5b50\u7684\u5b9a\u4e49\u516c\u5f0f\u53ef\u77e5\uff0cthreshold\u5c31\u662f\u5728\u6b64Load factor\u548clength(\u6570\u7ec4\u957f\u5ea6)\u5bf9\u5e94\u4e0b\u5141\u8bb8\u7684\u6700\u5927\u5143\u7d20\u6570\u76ee\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u76ee\u5c31\u91cd\u65b0resize(\u6269\u5bb9)\uff0c \u6269\u5bb9\u540e\u7684HashMap\u5bb9\u91cf\u662f\u4e4b\u524d\u5bb9\u91cf\u7684\u4e24\u500d\u3002\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u56e0\u5b500.75\u662f\u5bf9\u7a7a\u95f4\u548c\u65f6\u95f4\u6548\u7387\u7684\u4e00\u4e2a\u5e73\u8861\u9009\u62e9\uff0c\u5efa\u8bae\u5927\u5bb6\u4e0d\u8981\u4fee\u6539\uff0c\u9664\u975e\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff0c \u5982\u679c\u5185\u5b58\u7a7a\u95f4\u5f88\u591a\u800c\u53c8\u5bf9\u65f6\u95f4\u6548\u7387\u8981\u6c42\u5f88\u9ad8\uff0c\u53ef\u4ee5\u964d\u4f4e\u8d1f\u8f7d\u56e0\u5b50Load factor\u7684\u503c\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u5185\u5b58\u7a7a\u95f4\u7d27\u5f20\u800c\u5bf9\u65f6\u95f4\u6548\u7387\u8981\u6c42\u4e0d\u9ad8\uff0c\u53ef\u4ee5\u589e\u52a0\u8d1f\u8f7d\u56e0\u5b50loadFactor\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5927\u4e8e1\u3002","title":"\u4f55\u65f6\u6269\u5bb9"},{"location":"collection/hashmap.html#put","text":"","title":"put\u65b9\u6cd5\u6d41\u7a0b"},{"location":"collection/hashmap.html#tablelength2n","text":"\u5e38\u89c4\u7684\u8bbe\u8ba1\u662f\u628a\u6876\u7684\u5927\u5c0f\u8bbe\u8ba1\u4e3a\u7d20\u6570\uff0c\u76f8\u5bf9\u6765\u8bf4\u7d20\u6570\u5bfc\u81f4\u51b2\u7a81\u7684\u6982\u7387\u8981\u5c0f\u4e8e\u5408\u6570\u3002 HashMap\u91c7\u7528\u8fd9\u79cd\u975e\u5e38\u89c4\u8bbe\u8ba1\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5728 \u53d6\u6a21 \u548c \u6269\u5bb9 \u65f6\u505a\u4f18\u5316\u3002 \u53d6\u6a21\uff1a\u4f4d\u8fd0\u7b97\u4ee3\u66ff\u53d6\u6a21\u8fd0\u7b97\u3002 \u6269\u5bb9\uff1a\u4e0b\u6807\u4e0d\u53d8\uff0c\u6216\u8005+oldCapacity \u6269\u5c55\uff1a \u4f7f\u7528\u4f4d\u8fd0\u7b97(&)\u4ee3\u66ff\u53d6\u6a21\u8fd0\u7b97(%) JAVA8\u5bf9HashMap\u6269\u5bb9\u673a\u5236\u7684\u4f18\u5316","title":"\u4e3a\u4f55table\u7684\u957f\u5ea6length\u4e3a2\u7684n\u6b21\u65b9"},{"location":"collection/list.html","text":"ArrayList \u6570\u636e\u7ed3\u6784\uff1a\u52a8\u6001\u6570\u7ec4 LinkedList \u6570\u636e\u7ed3\u6784\uff1a\u53cc\u5411\u94fe\u8868 \u7279\u70b9\uff1a\u5b9e\u73b0deque,\u53ef\u4f5c\u4e3a \u6808 \u3001 \u961f\u5217 Vector \u4e0eArrayList\u7c7b\u4f3c\uff0c \u7ebf\u7a0b\u5b89\u5168","title":"List"},{"location":"collection/list.html#arraylist","text":"\u6570\u636e\u7ed3\u6784\uff1a\u52a8\u6001\u6570\u7ec4","title":"ArrayList"},{"location":"collection/list.html#linkedlist","text":"\u6570\u636e\u7ed3\u6784\uff1a\u53cc\u5411\u94fe\u8868 \u7279\u70b9\uff1a\u5b9e\u73b0deque,\u53ef\u4f5c\u4e3a \u6808 \u3001 \u961f\u5217","title":"LinkedList"},{"location":"collection/list.html#vector","text":"\u4e0eArrayList\u7c7b\u4f3c\uff0c \u7ebf\u7a0b\u5b89\u5168","title":"Vector"},{"location":"concurrency/synchronized.html","text":"Synchronized Monitor\u7ed3\u6784\u56fe Java \u5bf9\u8c61\u5934\uff0832\u4f4d\uff09 \u666e\u901a\u5bf9\u8c61 |--------------------------------------------------------------| | Object Header (64 bits) | |------------------------------------|-------------------------| | Mark Word (32 bits) | Klass Word (32 bits) | |------------------------------------|-------------------------| \u6570\u7ec4\u5bf9\u8c61 |---------------------------------------------------------------------------------| | Object Header (96 bits) | |--------------------------------|-----------------------|------------------------| | Mark Word(32bits) | Klass Word(32bits) | array length(32bits) | |--------------------------------|-----------------------|------------------------| Mark Word \u7ed3\u6784 |-------------------------------------------------------|--------------------| | Mark Word (32 bits) | State | |-------------------------------------------------------|--------------------| | hashcode:25 | age:4 | biased_lock:0 | 01 | Normal | |-------------------------------------------------------|--------------------| | thread:23 | epoch:2 | age:4 | biased_lock:1 | 01 | Biased | |-------------------------------------------------------|--------------------| | ptr_to_lock_record:30 | 00 | Lightweight Locked | |-------------------------------------------------------|--------------------| | ptr_to_heavyweight_monitor:30 | 10 | Heavyweight Locked | |-------------------------------------------------------|--------------------| | | 11 | Marked for GC | |-------------------------------------------------------|--------------------| \u8f7b\u91cf\u7ea7\u9501 \u65e0\u7ade\u4e89\u65f6\uff0c\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501 \u521b\u5efalock record\uff1a cas \u4ea4\u6362 lock record address \u4e0e mark word\uff1a \u82e5cas\u5931\u8d25\uff1a \u5982\u679c\u662f\u5176\u5b83\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u4e86\u8be5 Object \u7684\u8f7b\u91cf\u7ea7\u9501\uff0c\u8fd9\u65f6\u8868\u660e\u6709\u7ade\u4e89\uff0c\u8fdb\u5165 \u9501\u81a8\u80c0 \u5982\u679c\u662f\u81ea\u5df1\u6267\u884c\u4e86 synchronized \u9501\u91cd\u5165\uff0c\u90a3\u4e48\u518d\u6dfb\u52a0\u4e00\u6761 Lock Record \u4f5c\u4e3a\u91cd\u5165\u7684\u8ba1\u6570 \u9000\u51fa synchronized \u4ee3\u7801\u5757\uff08\u89e3\u9501\u65f6\uff09\u9501\u8bb0\u5f55\u7684\u503c\u4e0d\u4e3a null\uff0c\u8fd9\u65f6\u4f7f\u7528 cas \u5c06 Mark Word \u7684\u503c\u6062\u590d\u7ed9\u5bf9\u8c61\u5934 \u6210\u529f\uff0c\u5219\u89e3\u9501\u6210\u529f \u5931\u8d25\uff0c\u8f7b\u91cf\u7ea7\u9501\u8fdb\u884c\u4e86\u9501\u81a8\u80c0\u6216\u5df2\u7ecf\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\uff0c\u8fdb\u5165\u91cd\u91cf\u7ea7\u9501\u89e3\u9501\u6d41\u7a0b \u9501\u81a8\u80c0 \u4e3a Object \u5bf9\u8c61\u7533\u8bf7 Monitor \u9501\uff0c\u8ba9Object \u6307\u5411\u91cd\u91cf\u7ea7\u9501\u5730\u5740\uff0c\u7136\u540e\u81ea\u5df1\u8fdb\u5165 Monitor\u7684EntryList \u81ea\u65cb\u4f18\u5316 \u91cd\u91cf\u7ea7\u9501\u7ade\u4e89\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u65cb\u6765\u8fdb\u884c\u4f18\u5316 \u504f\u5411\u9501 \u4f5c\u7528\uff1a\u51cf\u5c11cas\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd \u89e6\u53d1\u6761\u4ef6\uff1a\u7b2c\u4e00\u6b21\u4f7f\u7528 CAS \u5c06\u7ebf\u7a0b ID \u8bbe\u7f6e\u5230\u5bf9\u8c61\u7684Mark Word\u5934 \u6d3b\u8dc3\u6027 \u6b7b\u9501 \u7279\u5f81\uff1a\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u9501\uff0c\u6c38\u4e45\u963b\u585e\u3002 \u89e3\u51b3\uff1a\u6309\u987a\u5e8f\u52a0\u9501\u3001\u9501\u8d85\u65f6\u3001\u5408\u5e76\u9501\uff08\u589e\u5927\u9501\u7c92\u5ea6\uff0c\u964d\u4f4e\u5e76\u884c\u5ea6\uff09 \u6d3b\u9501 \u7279\u5f81\uff1a\u4e92\u76f8\u6539\u53d8\u7ed3\u675f\u6761\u4ef6\uff0c\u6d6a\u8d39cpu\u3002 \u89e3\u51b3\uff1a\u968f\u673a\u7b49\u5f85\u65f6\u95f4\uff08\u7c7b\u4f3craft\u534f\u8bae\uff09 \u9965\u997f \u7279\u5f81\uff1a\u7b49\u4e0d\u5230cpu\u3002 \u89e3\u51b3\uff1a\u4f7f\u7528\u516c\u5e73\u9501","title":"Synchronized"},{"location":"concurrency/synchronized.html#synchronized","text":"","title":"Synchronized"},{"location":"concurrency/synchronized.html#monitor","text":"","title":"Monitor\u7ed3\u6784\u56fe"},{"location":"concurrency/synchronized.html#java-32","text":"\u666e\u901a\u5bf9\u8c61 |--------------------------------------------------------------| | Object Header (64 bits) | |------------------------------------|-------------------------| | Mark Word (32 bits) | Klass Word (32 bits) | |------------------------------------|-------------------------| \u6570\u7ec4\u5bf9\u8c61 |---------------------------------------------------------------------------------| | Object Header (96 bits) | |--------------------------------|-----------------------|------------------------| | Mark Word(32bits) | Klass Word(32bits) | array length(32bits) | |--------------------------------|-----------------------|------------------------| Mark Word \u7ed3\u6784 |-------------------------------------------------------|--------------------| | Mark Word (32 bits) | State | |-------------------------------------------------------|--------------------| | hashcode:25 | age:4 | biased_lock:0 | 01 | Normal | |-------------------------------------------------------|--------------------| | thread:23 | epoch:2 | age:4 | biased_lock:1 | 01 | Biased | |-------------------------------------------------------|--------------------| | ptr_to_lock_record:30 | 00 | Lightweight Locked | |-------------------------------------------------------|--------------------| | ptr_to_heavyweight_monitor:30 | 10 | Heavyweight Locked | |-------------------------------------------------------|--------------------| | | 11 | Marked for GC | |-------------------------------------------------------|--------------------|","title":"Java \u5bf9\u8c61\u5934\uff0832\u4f4d\uff09"},{"location":"concurrency/synchronized.html#_1","text":"\u65e0\u7ade\u4e89\u65f6\uff0c\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501 \u521b\u5efalock record\uff1a cas \u4ea4\u6362 lock record address \u4e0e mark word\uff1a \u82e5cas\u5931\u8d25\uff1a \u5982\u679c\u662f\u5176\u5b83\u7ebf\u7a0b\u5df2\u7ecf\u6301\u6709\u4e86\u8be5 Object \u7684\u8f7b\u91cf\u7ea7\u9501\uff0c\u8fd9\u65f6\u8868\u660e\u6709\u7ade\u4e89\uff0c\u8fdb\u5165 \u9501\u81a8\u80c0 \u5982\u679c\u662f\u81ea\u5df1\u6267\u884c\u4e86 synchronized \u9501\u91cd\u5165\uff0c\u90a3\u4e48\u518d\u6dfb\u52a0\u4e00\u6761 Lock Record \u4f5c\u4e3a\u91cd\u5165\u7684\u8ba1\u6570 \u9000\u51fa synchronized \u4ee3\u7801\u5757\uff08\u89e3\u9501\u65f6\uff09\u9501\u8bb0\u5f55\u7684\u503c\u4e0d\u4e3a null\uff0c\u8fd9\u65f6\u4f7f\u7528 cas \u5c06 Mark Word \u7684\u503c\u6062\u590d\u7ed9\u5bf9\u8c61\u5934 \u6210\u529f\uff0c\u5219\u89e3\u9501\u6210\u529f \u5931\u8d25\uff0c\u8f7b\u91cf\u7ea7\u9501\u8fdb\u884c\u4e86\u9501\u81a8\u80c0\u6216\u5df2\u7ecf\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\uff0c\u8fdb\u5165\u91cd\u91cf\u7ea7\u9501\u89e3\u9501\u6d41\u7a0b","title":"\u8f7b\u91cf\u7ea7\u9501"},{"location":"concurrency/synchronized.html#_2","text":"\u4e3a Object \u5bf9\u8c61\u7533\u8bf7 Monitor \u9501\uff0c\u8ba9Object \u6307\u5411\u91cd\u91cf\u7ea7\u9501\u5730\u5740\uff0c\u7136\u540e\u81ea\u5df1\u8fdb\u5165 Monitor\u7684EntryList","title":"\u9501\u81a8\u80c0"},{"location":"concurrency/synchronized.html#_3","text":"\u91cd\u91cf\u7ea7\u9501\u7ade\u4e89\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u65cb\u6765\u8fdb\u884c\u4f18\u5316","title":"\u81ea\u65cb\u4f18\u5316"},{"location":"concurrency/synchronized.html#_4","text":"\u4f5c\u7528\uff1a\u51cf\u5c11cas\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd \u89e6\u53d1\u6761\u4ef6\uff1a\u7b2c\u4e00\u6b21\u4f7f\u7528 CAS \u5c06\u7ebf\u7a0b ID \u8bbe\u7f6e\u5230\u5bf9\u8c61\u7684Mark Word\u5934","title":"\u504f\u5411\u9501"},{"location":"concurrency/synchronized.html#_5","text":"","title":"\u6d3b\u8dc3\u6027"},{"location":"concurrency/synchronized.html#_6","text":"\u7279\u5f81\uff1a\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u9501\uff0c\u6c38\u4e45\u963b\u585e\u3002 \u89e3\u51b3\uff1a\u6309\u987a\u5e8f\u52a0\u9501\u3001\u9501\u8d85\u65f6\u3001\u5408\u5e76\u9501\uff08\u589e\u5927\u9501\u7c92\u5ea6\uff0c\u964d\u4f4e\u5e76\u884c\u5ea6\uff09","title":"\u6b7b\u9501"},{"location":"concurrency/synchronized.html#_7","text":"\u7279\u5f81\uff1a\u4e92\u76f8\u6539\u53d8\u7ed3\u675f\u6761\u4ef6\uff0c\u6d6a\u8d39cpu\u3002 \u89e3\u51b3\uff1a\u968f\u673a\u7b49\u5f85\u65f6\u95f4\uff08\u7c7b\u4f3craft\u534f\u8bae\uff09","title":"\u6d3b\u9501"},{"location":"concurrency/synchronized.html#_8","text":"\u7279\u5f81\uff1a\u7b49\u4e0d\u5230cpu\u3002 \u89e3\u51b3\uff1a\u4f7f\u7528\u516c\u5e73\u9501","title":"\u9965\u997f"},{"location":"concurrency/volatile.html","text":"Volatile \u53ef\u89c1\u6027 cpu \u8bbf\u95ee\u7f13\u5b58\uff0c\u7f13\u5b58\u4e0e\u5185\u5b58\u5b58\u5728\u4e00\u81f4\u6027\u95ee\u9898\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u901a\u8fc7\u5728\u603b\u7ebf\u52a0 LOCK# \u9501\u7684\u65b9\u5f0f \u901a\u8fc7\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff08MESI \u534f\u8bae\uff09 Java\u63d0\u4f9b\u4e86 volatile \u6765\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002 \u5f53\u4e00\u4e2a\u53d8\u91cf\u88ab volatile \u4fee\u9970\u540e\uff0c\u8868\u793a\u7740\u7ebf\u7a0b\u672c\u5730\u5185\u5b58\u65e0\u6548\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u5171\u4eab\u53d8\u91cf\u540e\u4ed6\u4f1a\u7acb\u5373\u88ab\u66f4\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b \u5f53\u5176\u4ed6\u7ebf\u7a0b\u8bfb\u53d6\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u5b83\u4f1a\u76f4\u63a5\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 synchronize \u548c \u9501 \u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002 \u6709\u5e8f\u6027 \u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u901a\u5e38\u4f1a\u5bf9\u6307\u4ee4\u505a\u91cd\u6392\u5e8f\uff1a \u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u8bed\u53e5\u5bf9\u5e94\u673a\u5668\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\uff08\u6307\u4ee4\u7ea7\u522b\u5e76\u884c\uff0c\u63d0\u9ad8IPC\uff09\u3002 x86\u67b6\u6784\u4e0b\u6c47\u7f16\uff1a Java\u4ee3\u7801: instance = new Singleton();//instance\u662fvolatile\u53d8\u91cf \u6c47\u7f16\u4ee3\u7801: 0x01a3de1d: movb $0x0,0x1104800(%esi);0x01a3de24: lock addl $0x0,(%esp); Lock\u524d\u7f00\u6307\u4ee4\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4e2a \u5185\u5b58\u5c4f\u969c \uff08\u5185\u5b58\u6805\u680f\uff09: \u786e\u4fdd\u6307\u4ee4\u91cd\u6392\u5e8f\u65f6\u4e0d\u4f1a\u628a\u5176\u540e\u9762\u7684\u6307\u4ee4\u6392\u5230\u5185\u5b58\u5c4f\u969c\u4e4b\u524d \u4e5f\u4e0d\u4f1a\u628a\u524d\u9762\u7684\u6307\u4ee4\u6392\u5230\u5185\u5b58\u5c4f\u969c\u7684\u540e\u9762 \u7531\u6b64\u5f15\u51fahappen-before\u539f\u5219\u3002 Happens-before\u539f\u5219 \u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219\uff1a\u5355\u7ebf\u7a0b\u6309\u7167\u4ee3\u7801\u987a\u5e8f\uff0c\u5199\u5728\u524d\u9762\u7684\u64cd\u4f5c\uff0chappens-before \u4e8e\u4e66\u5199\u5728\u540e\u9762\u7684\u64cd\u4f5c volatile \u53d8\u91cf\u89c4\u5219\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\uff0chappens-before \u4e8e \u540e\u9762 \u5bf9\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 \u4f20\u9012\u89c4\u5219 \u9501\u5b9a\u89c4\u5219\uff1a\u4e00\u4e2a unLock \u64cd\u4f5c\uff0chappens-before \u4e8e\u540e\u9762\u5bf9\u540c\u4e00\u4e2a\u9501\u7684 lock \u64cd\u4f5c\u3002 \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219\uff1aThread \u5bf9\u8c61\u7684 start \u65b9\u6cd5\uff0chappens-before \u6b64\u7ebf\u7a0b\u7684\u6bcf\u4e2a\u4e00\u4e2a\u52a8\u4f5c\u3002 \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219\uff1a\u5bf9\u7ebf\u7a0b interrupt \u65b9\u6cd5\u7684\u8c03\u7528\uff0chappens-before\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u7ebf\u7a0b\u7ec8\u7ed3\u89c4\u5219\uff1a\u7ebf\u7a0b\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\uff0c\u90fd happens-before \u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Thread.join() \u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive() \u7684\u8fd4\u56de\u503c\u624b\u6bb5\uff0c\u68c0\u6d4b\u5230\u7ebf\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u6267\u884c\u3002 \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\uff0chappens-before \u5b83\u7684 finalize() \u65b9\u6cd5\u7684\u5f00\u59cb \u524d\u4e09\u6761\u5bf9\u5e94volatile\u53ef\u89c1\u6027\uff0c\u6709\u5e8f\u6027","title":"Volatile"},{"location":"concurrency/volatile.html#volatile","text":"","title":"Volatile"},{"location":"concurrency/volatile.html#_1","text":"cpu \u8bbf\u95ee\u7f13\u5b58\uff0c\u7f13\u5b58\u4e0e\u5185\u5b58\u5b58\u5728\u4e00\u81f4\u6027\u95ee\u9898\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u901a\u8fc7\u5728\u603b\u7ebf\u52a0 LOCK# \u9501\u7684\u65b9\u5f0f \u901a\u8fc7\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff08MESI \u534f\u8bae\uff09 Java\u63d0\u4f9b\u4e86 volatile \u6765\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002 \u5f53\u4e00\u4e2a\u53d8\u91cf\u88ab volatile \u4fee\u9970\u540e\uff0c\u8868\u793a\u7740\u7ebf\u7a0b\u672c\u5730\u5185\u5b58\u65e0\u6548\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u5171\u4eab\u53d8\u91cf\u540e\u4ed6\u4f1a\u7acb\u5373\u88ab\u66f4\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\uff1b \u5f53\u5176\u4ed6\u7ebf\u7a0b\u8bfb\u53d6\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u5b83\u4f1a\u76f4\u63a5\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 synchronize \u548c \u9501 \u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u89c1\u6027\u3002","title":"\u53ef\u89c1\u6027"},{"location":"concurrency/volatile.html#_2","text":"\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u901a\u5e38\u4f1a\u5bf9\u6307\u4ee4\u505a\u91cd\u6392\u5e8f\uff1a \u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u8bed\u53e5\u5bf9\u5e94\u673a\u5668\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\uff08\u6307\u4ee4\u7ea7\u522b\u5e76\u884c\uff0c\u63d0\u9ad8IPC\uff09\u3002 x86\u67b6\u6784\u4e0b\u6c47\u7f16\uff1a Java\u4ee3\u7801: instance = new Singleton();//instance\u662fvolatile\u53d8\u91cf \u6c47\u7f16\u4ee3\u7801: 0x01a3de1d: movb $0x0,0x1104800(%esi);0x01a3de24: lock addl $0x0,(%esp); Lock\u524d\u7f00\u6307\u4ee4\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4e2a \u5185\u5b58\u5c4f\u969c \uff08\u5185\u5b58\u6805\u680f\uff09: \u786e\u4fdd\u6307\u4ee4\u91cd\u6392\u5e8f\u65f6\u4e0d\u4f1a\u628a\u5176\u540e\u9762\u7684\u6307\u4ee4\u6392\u5230\u5185\u5b58\u5c4f\u969c\u4e4b\u524d \u4e5f\u4e0d\u4f1a\u628a\u524d\u9762\u7684\u6307\u4ee4\u6392\u5230\u5185\u5b58\u5c4f\u969c\u7684\u540e\u9762 \u7531\u6b64\u5f15\u51fahappen-before\u539f\u5219\u3002","title":"\u6709\u5e8f\u6027"},{"location":"concurrency/volatile.html#happens-before","text":"\u7a0b\u5e8f\u6b21\u5e8f\u89c4\u5219\uff1a\u5355\u7ebf\u7a0b\u6309\u7167\u4ee3\u7801\u987a\u5e8f\uff0c\u5199\u5728\u524d\u9762\u7684\u64cd\u4f5c\uff0chappens-before \u4e8e\u4e66\u5199\u5728\u540e\u9762\u7684\u64cd\u4f5c volatile \u53d8\u91cf\u89c4\u5219\uff1a\u5bf9\u4e00\u4e2avolatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\uff0chappens-before \u4e8e \u540e\u9762 \u5bf9\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u3002 \u4f20\u9012\u89c4\u5219 \u9501\u5b9a\u89c4\u5219\uff1a\u4e00\u4e2a unLock \u64cd\u4f5c\uff0chappens-before \u4e8e\u540e\u9762\u5bf9\u540c\u4e00\u4e2a\u9501\u7684 lock \u64cd\u4f5c\u3002 \u7ebf\u7a0b\u542f\u52a8\u89c4\u5219\uff1aThread \u5bf9\u8c61\u7684 start \u65b9\u6cd5\uff0chappens-before \u6b64\u7ebf\u7a0b\u7684\u6bcf\u4e2a\u4e00\u4e2a\u52a8\u4f5c\u3002 \u7ebf\u7a0b\u4e2d\u65ad\u89c4\u5219\uff1a\u5bf9\u7ebf\u7a0b interrupt \u65b9\u6cd5\u7684\u8c03\u7528\uff0chappens-before\u88ab\u4e2d\u65ad\u7ebf\u7a0b\u7684\u4ee3\u7801\u68c0\u6d4b\u5230\u4e2d\u65ad\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u7ebf\u7a0b\u7ec8\u7ed3\u89c4\u5219\uff1a\u7ebf\u7a0b\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\uff0c\u90fd happens-before \u7ebf\u7a0b\u7684\u7ec8\u6b62\u68c0\u6d4b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Thread.join() \u65b9\u6cd5\u7ed3\u675f\u3001Thread.isAlive() \u7684\u8fd4\u56de\u503c\u624b\u6bb5\uff0c\u68c0\u6d4b\u5230\u7ebf\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u6267\u884c\u3002 \u5bf9\u8c61\u7ec8\u7ed3\u89c4\u5219\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5b8c\u6210\uff0chappens-before \u5b83\u7684 finalize() \u65b9\u6cd5\u7684\u5f00\u59cb \u524d\u4e09\u6761\u5bf9\u5e94volatile\u53ef\u89c1\u6027\uff0c\u6709\u5e8f\u6027","title":"Happens-before\u539f\u5219"},{"location":"data_structure/array.html","text":"Array \u7279\u70b9 \u7a7a\u95f4\u8fde\u7eed \u968f\u673a\u8bbf\u95ee\uff0c\u6839\u636e\u4e0b\u6807\u8bbf\u95eeO(1) \u589e\u5220O(n) \u7b26\u5408\u5c40\u90e8\u6027\u539f\u7406 ArrayList \u52a8\u6001\u6570\u7ec4 \uff0c\u5c01\u88c5\u4e86 \u589e\u5220 \u7b49\u7ec6\u8282\uff0c\u652f\u6301 \u81ea\u52a8\u6269\u5bb9 \u3002","title":"Array"},{"location":"data_structure/array.html#array","text":"","title":"Array"},{"location":"data_structure/array.html#_1","text":"\u7a7a\u95f4\u8fde\u7eed \u968f\u673a\u8bbf\u95ee\uff0c\u6839\u636e\u4e0b\u6807\u8bbf\u95eeO(1) \u589e\u5220O(n) \u7b26\u5408\u5c40\u90e8\u6027\u539f\u7406","title":"\u7279\u70b9"},{"location":"data_structure/array.html#arraylist","text":"\u52a8\u6001\u6570\u7ec4 \uff0c\u5c01\u88c5\u4e86 \u589e\u5220 \u7b49\u7ec6\u8282\uff0c\u652f\u6301 \u81ea\u52a8\u6269\u5bb9 \u3002","title":"ArrayList"},{"location":"data_structure/basic_ds.html","text":"Basic Datastructures Reverse Linked List class Solution { public ListNode reverseList(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; } } public DoubleNode reverseList(DoubleNode head){ DoubleNode prev=null; while(head!=null){ DoubleNode next=head.next; head.next=prev; head.prev=next; prev=head; head=next; } return prev; } Remove Linked List Elements class Solution { public ListNode removeElements(ListNode head, int val) { if (head == null) { return null; } ListNode curr = head; ListNode prev = null; while (curr != null) { if (curr.val == val) { if (prev != null) { prev.next = curr.next; curr = prev.next; continue; } } prev = curr; curr = curr.next; } while (head != null && head.val == val) { head = head.next; } return head; } } Merge Sort //recursive class Solution { public int[] sortArray(int[] nums) { if (nums == null || nums.length < 2) { return nums; } doSort(nums, 0, nums.length - 1); return nums; } private void doSort(int[] nums, int from, int to) { if (from < to) { int mid = from + ((to - from) >> 1); doSort(nums, from, mid); doSort(nums, mid + 1, to); merge(nums, from, to, mid); } } private void merge(int[] nums, int from, int to, int mid) { int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; i++) { help[i] = nums[a] < nums[b] ? nums[a++] : nums[b++]; } for (; a <= mid; i++) { help[i] = nums[a++]; } for (; b <= to; i++) { help[i] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[from + j] = help[j]; } } public static void main(String[] args) { int[] nums = {3, 2, 1, 1, 4, 2, 4, 5, 6}; new Solution().sortArray2(nums); System.out.println(Arrays.toString(nums)); } } //iteration class Solution { public int[] sortArray(int[] nums) { if (nums == null || nums.length < 2) { return nums; } int len = nums.length; int step = 1; for (; step <= len; ) { for (int from = 0; from < len; from = from + step * 2) { int to = Math.min(from + step * 2 - 1, len - 1); int mid = from + step - 1; if (mid > len - 1) { mid = from + ((to - from) >> 1); } merge(nums, from, to, mid); } step = step << 1; } return nums; } // public int[] sortArray(int[] nums) { // return doSortArray0(nums, 0, nums.length - 1); // } // // private int[] doSortArray0(int[] nums, int from, int to) { // if (from < to) { // int mid = from + ((to - from) >> 1); // doSortArray0(nums, from, mid); // doSortArray0(nums, mid + 1, to); // merge(nums, from, to, mid); // } // return nums; // } private void merge(int[] nums, int from, int to, int mid) { if (from > to) { System.out.println(123); } int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; i++) { help[i] = nums[a] < nums[b] ? nums[a++] : nums[b++]; } for (; a <= mid; i++) { help[i] = nums[a++]; } for (; b <= to; i++) { help[i] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[j + from] = help[j]; } } public static void main(String[] args) { // [5,1,1,2,0,0] int[] nums = {-96, -91, -90, -87, -85, -84, -84, -78, -74, -74, -72, -71, -69, -68, -63, -58, -56, -55, -46, -46, -45, -44, -44, -30, -28, -28, -25, -24, -24, -22, -20, -20, -13, -13, -12, -11, -10, -9, -8, -6, -5, -3, -2, -2, 2, 2, 8, 10, 10, 11, 12, 13, 14, 16, 21, 23, 25, 25, 26, 26, 28, 29, 29, 30, 34, 35, 35, 37, 45, 47, 48, 50, 50, 51, 52, 54, 55, 56, 57, 57, 63, 64, 65, 65, 72, 73, 80, 85, 86, 86, 91, 92, 92, 93, 95, 98, -39, 77}; new Solution().sortArray(nums); System.out.println(Arrays.toString(nums)); } } //\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9 LCOF class Solution { public int reversePairs(int[] nums) { return doSort(nums, 0, nums.length - 1); } private int doSort(int[] nums, int from, int to) { int ans = 0; if (from < to) { int mid = from + ((to - from) >> 1); ans = ans + doSort(nums, from, mid); ans = ans + doSort(nums, mid + 1, to); ans = ans + merge(nums, from, to, mid); } return ans; } private int merge(int[] nums, int from, int to, int mid) { int ans = 0; int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; ) { if (nums[a] > nums[b]) { ans = ans + (to - b + 1); help[i++] = nums[a++]; } else { // if (nums[a] != nums[b]) { // } help[i++] = nums[b++]; } } for (; a <= mid; ) { help[i++] = nums[a++]; } for (; b <= to; ) { help[i++] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[j + from] = help[j]; } return ans; } public int reversePairs0(int[] nums) { int ans = 0; for (int i = 0; i < nums.length; i++) { for (int j = i + 1; j < nums.length; j++) { if (nums[i] > nums[j]) { ans++; } } } return ans; } public static void main(String[] args) { //5 int i = new Solution().reversePairs(new int[]{7, 5, 6, 4}); System.out.println(i); } } Small Sum class Solution { private int smallSum(int[] arr) { return doSort(arr, 0, arr.length - 1); } private int doSort(int[] arr, int from, int to) { int ans = 0; if (from < to) { int mid = from + ((to - from) >> 1); ans = ans + doSort(arr, from, mid); ans = ans + doSort(arr, mid + 1, to); ans = ans + merge(arr, from, to, mid); } return ans; } private int merge(int[] arr, int from, int to, int mid) { int ans = 0; int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; ) { if (arr[a] < arr[b]) { help[i++] = arr[a++]; ans = ans + (to - b + 1); } else { help[i++] = arr[b++]; } } for (; a <= mid; ) { help[i++] = arr[a++]; } for (; b <= to; ) { help[i++] = arr[b++]; } for (int j = 0; j < help.length; j++) { arr[j + from] = help[j]; } return ans; } private int smallSum0(int[] arr) { int ans = 0; for (int i = 0; i < arr.length; i++) { for (int j = i + 1; j < arr.length; j++) { if (arr[i] < arr[j]) { ans = ans + 1; } } } return ans; } public static void main(String[] args) { int[] arr = {1, 45, 125, 2}; System.out.println(new Solution().smallSum0(arr)); System.out.println(new Solution().smallSum(arr)); } } // Top K Frequent Elements class Solution { public static void main(String[] args) { int[] ints = new Solution().topKFrequent(new int[]{1, 1, 1, 2, 2, 3}, 2); } public int[] topKFrequent(int[] nums, int k) { HashMap<Integer, Integer> num2count = new HashMap<>(); for (int i = 0; i < nums.length; i++) { if (num2count.containsKey(nums[i])) { num2count.put(nums[i], num2count.get(nums[i]) + 1); } else { num2count.put(nums[i], 1); } } PriorityQueue<Integer[]> queue = new PriorityQueue<>((x, y) -> y[0] - x[0]); num2count.forEach((num,count)->{ queue.offer(new Integer[]{count, num}); }); int[] ans = new int[k]; for (int i = 0; i < k; i++) { ans[i] = queue.poll()[1]; } return ans; } } // recursive reverse stack class Solution { public static void reverse(Stack<Integer> stack) { if (stack == null || stack.isEmpty() || stack.size() == 1) { return; } Integer pop = stack.pop(); reverse(stack); insert2bottom(stack, pop); } private static void insert2bottom(Stack<Integer> stack, Integer el) { if (stack.isEmpty()) { stack.push(el); return; } Integer pop = stack.pop(); insert2bottom(stack, el); stack.push(pop); } public static void main(String[] args) { Stack<Integer> stack = new Stack<>(); stack.push(1); stack.push(2); stack.push(3); stack.push(4); stack.push(5); reverse(stack); while (!stack.empty()) { System.out.println(stack.pop()); } } }","title":"Basic Datastructures"},{"location":"data_structure/basic_ds.html#basic-datastructures","text":"","title":"Basic Datastructures"},{"location":"data_structure/basic_ds.html#reverse-linked-list","text":"class Solution { public ListNode reverseList(ListNode head) { ListNode prev = null; while (head != null) { ListNode next = head.next; head.next = prev; prev = head; head = next; } return prev; } } public DoubleNode reverseList(DoubleNode head){ DoubleNode prev=null; while(head!=null){ DoubleNode next=head.next; head.next=prev; head.prev=next; prev=head; head=next; } return prev; }","title":"Reverse Linked List"},{"location":"data_structure/basic_ds.html#remove-linked-list-elements","text":"class Solution { public ListNode removeElements(ListNode head, int val) { if (head == null) { return null; } ListNode curr = head; ListNode prev = null; while (curr != null) { if (curr.val == val) { if (prev != null) { prev.next = curr.next; curr = prev.next; continue; } } prev = curr; curr = curr.next; } while (head != null && head.val == val) { head = head.next; } return head; } }","title":"Remove Linked List Elements"},{"location":"data_structure/basic_ds.html#merge-sort","text":"//recursive class Solution { public int[] sortArray(int[] nums) { if (nums == null || nums.length < 2) { return nums; } doSort(nums, 0, nums.length - 1); return nums; } private void doSort(int[] nums, int from, int to) { if (from < to) { int mid = from + ((to - from) >> 1); doSort(nums, from, mid); doSort(nums, mid + 1, to); merge(nums, from, to, mid); } } private void merge(int[] nums, int from, int to, int mid) { int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; i++) { help[i] = nums[a] < nums[b] ? nums[a++] : nums[b++]; } for (; a <= mid; i++) { help[i] = nums[a++]; } for (; b <= to; i++) { help[i] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[from + j] = help[j]; } } public static void main(String[] args) { int[] nums = {3, 2, 1, 1, 4, 2, 4, 5, 6}; new Solution().sortArray2(nums); System.out.println(Arrays.toString(nums)); } } //iteration class Solution { public int[] sortArray(int[] nums) { if (nums == null || nums.length < 2) { return nums; } int len = nums.length; int step = 1; for (; step <= len; ) { for (int from = 0; from < len; from = from + step * 2) { int to = Math.min(from + step * 2 - 1, len - 1); int mid = from + step - 1; if (mid > len - 1) { mid = from + ((to - from) >> 1); } merge(nums, from, to, mid); } step = step << 1; } return nums; } // public int[] sortArray(int[] nums) { // return doSortArray0(nums, 0, nums.length - 1); // } // // private int[] doSortArray0(int[] nums, int from, int to) { // if (from < to) { // int mid = from + ((to - from) >> 1); // doSortArray0(nums, from, mid); // doSortArray0(nums, mid + 1, to); // merge(nums, from, to, mid); // } // return nums; // } private void merge(int[] nums, int from, int to, int mid) { if (from > to) { System.out.println(123); } int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; i++) { help[i] = nums[a] < nums[b] ? nums[a++] : nums[b++]; } for (; a <= mid; i++) { help[i] = nums[a++]; } for (; b <= to; i++) { help[i] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[j + from] = help[j]; } } public static void main(String[] args) { // [5,1,1,2,0,0] int[] nums = {-96, -91, -90, -87, -85, -84, -84, -78, -74, -74, -72, -71, -69, -68, -63, -58, -56, -55, -46, -46, -45, -44, -44, -30, -28, -28, -25, -24, -24, -22, -20, -20, -13, -13, -12, -11, -10, -9, -8, -6, -5, -3, -2, -2, 2, 2, 8, 10, 10, 11, 12, 13, 14, 16, 21, 23, 25, 25, 26, 26, 28, 29, 29, 30, 34, 35, 35, 37, 45, 47, 48, 50, 50, 51, 52, 54, 55, 56, 57, 57, 63, 64, 65, 65, 72, 73, 80, 85, 86, 86, 91, 92, 92, 93, 95, 98, -39, 77}; new Solution().sortArray(nums); System.out.println(Arrays.toString(nums)); } } //\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9 LCOF class Solution { public int reversePairs(int[] nums) { return doSort(nums, 0, nums.length - 1); } private int doSort(int[] nums, int from, int to) { int ans = 0; if (from < to) { int mid = from + ((to - from) >> 1); ans = ans + doSort(nums, from, mid); ans = ans + doSort(nums, mid + 1, to); ans = ans + merge(nums, from, to, mid); } return ans; } private int merge(int[] nums, int from, int to, int mid) { int ans = 0; int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; ) { if (nums[a] > nums[b]) { ans = ans + (to - b + 1); help[i++] = nums[a++]; } else { // if (nums[a] != nums[b]) { // } help[i++] = nums[b++]; } } for (; a <= mid; ) { help[i++] = nums[a++]; } for (; b <= to; ) { help[i++] = nums[b++]; } for (int j = 0; j < help.length; j++) { nums[j + from] = help[j]; } return ans; } public int reversePairs0(int[] nums) { int ans = 0; for (int i = 0; i < nums.length; i++) { for (int j = i + 1; j < nums.length; j++) { if (nums[i] > nums[j]) { ans++; } } } return ans; } public static void main(String[] args) { //5 int i = new Solution().reversePairs(new int[]{7, 5, 6, 4}); System.out.println(i); } }","title":"Merge Sort"},{"location":"data_structure/basic_ds.html#small-sum","text":"class Solution { private int smallSum(int[] arr) { return doSort(arr, 0, arr.length - 1); } private int doSort(int[] arr, int from, int to) { int ans = 0; if (from < to) { int mid = from + ((to - from) >> 1); ans = ans + doSort(arr, from, mid); ans = ans + doSort(arr, mid + 1, to); ans = ans + merge(arr, from, to, mid); } return ans; } private int merge(int[] arr, int from, int to, int mid) { int ans = 0; int a = from; int b = mid + 1; int[] help = new int[to - from + 1]; int i = 0; for (; a <= mid && b <= to; ) { if (arr[a] < arr[b]) { help[i++] = arr[a++]; ans = ans + (to - b + 1); } else { help[i++] = arr[b++]; } } for (; a <= mid; ) { help[i++] = arr[a++]; } for (; b <= to; ) { help[i++] = arr[b++]; } for (int j = 0; j < help.length; j++) { arr[j + from] = help[j]; } return ans; } private int smallSum0(int[] arr) { int ans = 0; for (int i = 0; i < arr.length; i++) { for (int j = i + 1; j < arr.length; j++) { if (arr[i] < arr[j]) { ans = ans + 1; } } } return ans; } public static void main(String[] args) { int[] arr = {1, 45, 125, 2}; System.out.println(new Solution().smallSum0(arr)); System.out.println(new Solution().smallSum(arr)); } } // Top K Frequent Elements class Solution { public static void main(String[] args) { int[] ints = new Solution().topKFrequent(new int[]{1, 1, 1, 2, 2, 3}, 2); } public int[] topKFrequent(int[] nums, int k) { HashMap<Integer, Integer> num2count = new HashMap<>(); for (int i = 0; i < nums.length; i++) { if (num2count.containsKey(nums[i])) { num2count.put(nums[i], num2count.get(nums[i]) + 1); } else { num2count.put(nums[i], 1); } } PriorityQueue<Integer[]> queue = new PriorityQueue<>((x, y) -> y[0] - x[0]); num2count.forEach((num,count)->{ queue.offer(new Integer[]{count, num}); }); int[] ans = new int[k]; for (int i = 0; i < k; i++) { ans[i] = queue.poll()[1]; } return ans; } } // recursive reverse stack class Solution { public static void reverse(Stack<Integer> stack) { if (stack == null || stack.isEmpty() || stack.size() == 1) { return; } Integer pop = stack.pop(); reverse(stack); insert2bottom(stack, pop); } private static void insert2bottom(Stack<Integer> stack, Integer el) { if (stack.isEmpty()) { stack.push(el); return; } Integer pop = stack.pop(); insert2bottom(stack, el); stack.push(pop); } public static void main(String[] args) { Stack<Integer> stack = new Stack<>(); stack.push(1); stack.push(2); stack.push(3); stack.push(4); stack.push(5); reverse(stack); while (!stack.empty()) { System.out.println(stack.pop()); } } }","title":"Small Sum"},{"location":"data_structure/bit_op.html","text":"Bit OP Summary & Digit1 Digit2 Result 1 1 1 1 0 0 0 0 0 0 1 0 | Digit1 Digit2 Result 1 1 1 1 0 1 0 0 0 0 1 1 ^ (no carry plus one) Digit1 Digit2 Result 1 1 0 1 0 1 0 0 0 0 1 1 a^b=b^a (a^b)^c=a^(b^c) Swap private static void swap(int[] ints, int j, int i) { ints[j] = ints[j] ^ ints[i]; ints[i] = ints[j] ^ ints[i]; ints[j] = ints[j] ^ ints[i]; } Odd Times Num public static int getOdd(int[] arr) { int xor = 0; for (int i : arr) { xor = xor ^ i; } return xor; } Odd Times 2 Num public static int[] get2Odd(int[] arr) { int xor = 0; for (int i : arr) { xor = xor ^ i; } int firstOne = xor & (~xor + 1); int eor = 0; for (int i : arr) { if ((i & firstOne) == firstOne) { eor = eor ^ i; } } return new int[]{eor, eor ^ firstOne}; } M,K public static int getmk(int[] arr, int m, int k) { int[] byts = new int[32]; for (int i : arr) { for (int j = 0; j < 32; j++) { byts[j] = ((i >> j) & 1) + byts[j]; } } int ans = 0; for (int i = 0; i < byts.length; i++) { byts[i] = byts[i] % m == 0 ? 0 : 1; ans = ans | ((byts[i]) << i); } return ans; }","title":"Bit OP"},{"location":"data_structure/bit_op.html#bit-op","text":"","title":"Bit OP"},{"location":"data_structure/bit_op.html#summary","text":"& Digit1 Digit2 Result 1 1 1 1 0 0 0 0 0 0 1 0 | Digit1 Digit2 Result 1 1 1 1 0 1 0 0 0 0 1 1 ^ (no carry plus one) Digit1 Digit2 Result 1 1 0 1 0 1 0 0 0 0 1 1 a^b=b^a (a^b)^c=a^(b^c)","title":"Summary"},{"location":"data_structure/bit_op.html#swap","text":"private static void swap(int[] ints, int j, int i) { ints[j] = ints[j] ^ ints[i]; ints[i] = ints[j] ^ ints[i]; ints[j] = ints[j] ^ ints[i]; }","title":"Swap"},{"location":"data_structure/bit_op.html#odd-times-num","text":"public static int getOdd(int[] arr) { int xor = 0; for (int i : arr) { xor = xor ^ i; } return xor; }","title":"Odd Times Num"},{"location":"data_structure/bit_op.html#odd-times-2-num","text":"public static int[] get2Odd(int[] arr) { int xor = 0; for (int i : arr) { xor = xor ^ i; } int firstOne = xor & (~xor + 1); int eor = 0; for (int i : arr) { if ((i & firstOne) == firstOne) { eor = eor ^ i; } } return new int[]{eor, eor ^ firstOne}; }","title":"Odd Times 2 Num"},{"location":"data_structure/bit_op.html#mk","text":"public static int getmk(int[] arr, int m, int k) { int[] byts = new int[32]; for (int i : arr) { for (int j = 0; j < 32; j++) { byts[j] = ((i >> j) & 1) + byts[j]; } } int ans = 0; for (int i = 0; i < byts.length; i++) { byts[i] = byts[i] % m == 0 ? 0 : 1; ans = ans | ((byts[i]) << i); } return ans; }","title":"M,K"},{"location":"data_structure/linked_list.html","text":"Linked List \u7279\u5f81 \u4e0d\u8fde\u7eed\u7a7a\u95f4 \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee \u901a\u8fc7\u6307\u9488\u786e\u8ba4\u7ebf\u6027\u5173\u7cfb \u6848\u4f8b \u5355\u5411\u94fe\u8868 \u6839\u636e\u4e0b\u6807\u8bfb\u5199 O(n) \u5934\u8bfb\u5199O(1) \u5c3e\u8bfb\u5199O(n) \u53cc\u5411\u94fe\u8868 \u6839\u636e\u4e0b\u6807\u8bfb\u5199 O(n) \u5934\u8bfb\u5199O(1) \u5c3e\u8bfb\u5199O(1) \u5220\u9664\u6307\u5b9a\u8282\u70b9\u66f4\u9ad8\u6548\uff0c\u76f4\u63a5\u901a\u8fc7prev\u6307\u9488\u64cd\u4f5c \u76f8\u6bd4\u5355\u94fe\u8868 \u7a7a\u95f4\u6362\u65f6\u95f4 LRU LinkedHashMap<String, String> map = new LinkedHashMap<String, String>(10, 1, true) { @Override protected boolean removeEldestEntry(Entry<String, String> eldest) { return size() > 3; } }; map.put(\"1\", \"1\"); map.put(\"2\", \"2\"); map.put(\"3\", \"3\"); map.get(\"2\"); map.put(\"4\", \"4\"); map.forEach((x, y) -> { System.out.println(x); }); //3 //2 //4","title":"Linked List"},{"location":"data_structure/linked_list.html#linked-list","text":"","title":"Linked List"},{"location":"data_structure/linked_list.html#_1","text":"\u4e0d\u8fde\u7eed\u7a7a\u95f4 \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee \u901a\u8fc7\u6307\u9488\u786e\u8ba4\u7ebf\u6027\u5173\u7cfb","title":"\u7279\u5f81"},{"location":"data_structure/linked_list.html#_2","text":"","title":"\u6848\u4f8b"},{"location":"data_structure/linked_list.html#_3","text":"\u6839\u636e\u4e0b\u6807\u8bfb\u5199 O(n) \u5934\u8bfb\u5199O(1) \u5c3e\u8bfb\u5199O(n)","title":"\u5355\u5411\u94fe\u8868"},{"location":"data_structure/linked_list.html#_4","text":"\u6839\u636e\u4e0b\u6807\u8bfb\u5199 O(n) \u5934\u8bfb\u5199O(1) \u5c3e\u8bfb\u5199O(1) \u5220\u9664\u6307\u5b9a\u8282\u70b9\u66f4\u9ad8\u6548\uff0c\u76f4\u63a5\u901a\u8fc7prev\u6307\u9488\u64cd\u4f5c \u76f8\u6bd4\u5355\u94fe\u8868 \u7a7a\u95f4\u6362\u65f6\u95f4","title":"\u53cc\u5411\u94fe\u8868"},{"location":"data_structure/linked_list.html#lru","text":"LinkedHashMap<String, String> map = new LinkedHashMap<String, String>(10, 1, true) { @Override protected boolean removeEldestEntry(Entry<String, String> eldest) { return size() > 3; } }; map.put(\"1\", \"1\"); map.put(\"2\", \"2\"); map.put(\"3\", \"3\"); map.get(\"2\"); map.put(\"4\", \"4\"); map.forEach((x, y) -> { System.out.println(x); }); //3 //2 //4","title":"LRU"},{"location":"data_structure/recursive.html","text":"Recursive Call itself \u624b\u6cd5 \u5927\u95ee\u9898\u5206\u89e3\u6210\u5b50\u95ee\u9898\uff0c\u95ee\u9898\u5b9a\u4e49\u4e00\u81f4\uff0c\u89c4\u6a21\u4e0d\u540c \u7ec8\u6b62\u6761\u4ef6 \u5199\u51fa\u9012\u63a8\u516c\u5f0f \u5199\u4ee3\u7801 \u6ce8\u610f \u4e0d\u8981\u4eba\u8111\u5c55\u5f00\u8c03\u7528\u6808","title":"Recursive"},{"location":"data_structure/recursive.html#recursive","text":"Call itself","title":"Recursive"},{"location":"data_structure/recursive.html#_1","text":"\u5927\u95ee\u9898\u5206\u89e3\u6210\u5b50\u95ee\u9898\uff0c\u95ee\u9898\u5b9a\u4e49\u4e00\u81f4\uff0c\u89c4\u6a21\u4e0d\u540c \u7ec8\u6b62\u6761\u4ef6 \u5199\u51fa\u9012\u63a8\u516c\u5f0f \u5199\u4ee3\u7801","title":"\u624b\u6cd5"},{"location":"data_structure/recursive.html#_2","text":"\u4e0d\u8981\u4eba\u8111\u5c55\u5f00\u8c03\u7528\u6808","title":"\u6ce8\u610f"},{"location":"data_structure/sort.html","text":"Sort \u5192\u6ce1\u6392\u5e8f \u4ee3\u7801 vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 0; i < len; ++i) { bool flag = true; for (int j = 0; j < len - i - 1; ++j) { if (nums[j] > nums[j + 1]) { swap(nums, j, j + 1); flag = false; } } if (flag) { break; } } return nums; } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; } \u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u662f\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u4e0d\u53d8\uff09 \u63d2\u5165\u6392\u5e8f \u4ee3\u7801 vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 1; i < len; ++i) { insert(nums, 0, i - 1); } return nums; } /// \u63d2\u5165 /// \\param vector /// \\param from \u5df2\u6392\u5e8f\u533a\u95f4from /// \\param to \u5df2\u6392\u5e8f\u533a\u95f4to void insert(vector<int> &vector, int from, int to) { int newItem = vector[to + 1]; for (int i = to; i >= from; --i) { if (newItem >= vector[i]) { // \u7a33\u5b9a\u6027 vector[i+1] = newItem; break; } vector[i + 1] = vector[i]; } } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; } \u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u662f\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u4e0d\u53d8\uff09 VS \u5192\u6ce1\u6392\u5e8f //\u5192\u6ce1 swap(nums, j, j + 1); //\u63d2\u5165 vector[i + 1] = vector[i]; \u6240\u4ee5\uff0c\u63d2\u5165\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u66f4\u597d \u9009\u62e9\u6392\u5e8f \u4ee3\u7801 vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 0; i < len; ++i) { int index = minValIndex(nums, i); swap(nums, i, index); //\u7a33\u5b9a\u6027 } return nums; } int minValIndex(vector<int> &vector, int from) { auto to = vector.size() - 1; int minIndex = from; for (int i = from + 1; i <= to; ++i) { if (vector[i] < vector[minIndex]) { minIndex = i; } } return minIndex; } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; } \u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u5426\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u6539\u53d8\uff09","title":"Sort"},{"location":"data_structure/sort.html#sort","text":"","title":"Sort"},{"location":"data_structure/sort.html#_1","text":"","title":"\u5192\u6ce1\u6392\u5e8f"},{"location":"data_structure/sort.html#_2","text":"vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 0; i < len; ++i) { bool flag = true; for (int j = 0; j < len - i - 1; ++j) { if (nums[j] > nums[j + 1]) { swap(nums, j, j + 1); flag = false; } } if (flag) { break; } } return nums; } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; }","title":"\u4ee3\u7801"},{"location":"data_structure/sort.html#_3","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u662f\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u4e0d\u53d8\uff09","title":"\u5206\u6790"},{"location":"data_structure/sort.html#_4","text":"","title":"\u63d2\u5165\u6392\u5e8f"},{"location":"data_structure/sort.html#_5","text":"vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 1; i < len; ++i) { insert(nums, 0, i - 1); } return nums; } /// \u63d2\u5165 /// \\param vector /// \\param from \u5df2\u6392\u5e8f\u533a\u95f4from /// \\param to \u5df2\u6392\u5e8f\u533a\u95f4to void insert(vector<int> &vector, int from, int to) { int newItem = vector[to + 1]; for (int i = to; i >= from; --i) { if (newItem >= vector[i]) { // \u7a33\u5b9a\u6027 vector[i+1] = newItem; break; } vector[i + 1] = vector[i]; } } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; }","title":"\u4ee3\u7801"},{"location":"data_structure/sort.html#_6","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u662f\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u4e0d\u53d8\uff09","title":"\u5206\u6790"},{"location":"data_structure/sort.html#vs","text":"//\u5192\u6ce1 swap(nums, j, j + 1); //\u63d2\u5165 vector[i + 1] = vector[i]; \u6240\u4ee5\uff0c\u63d2\u5165\u6392\u5e8f\u6bd4\u5192\u6ce1\u6392\u5e8f\u66f4\u597d","title":"VS \u5192\u6ce1\u6392\u5e8f"},{"location":"data_structure/sort.html#_7","text":"","title":"\u9009\u62e9\u6392\u5e8f"},{"location":"data_structure/sort.html#_8","text":"vector<int> sortArray(vector<int> &nums) { auto len = nums.size(); for (int i = 0; i < len; ++i) { int index = minValIndex(nums, i); swap(nums, i, index); //\u7a33\u5b9a\u6027 } return nums; } int minValIndex(vector<int> &vector, int from) { auto to = vector.size() - 1; int minIndex = from; for (int i = from + 1; i <= to; ++i) { if (vector[i] < vector[minIndex]) { minIndex = i; } } return minIndex; } void swap(vector<int> &nums, int i, int j) { auto tmp = nums[j]; nums[j] = nums[i]; nums[i] = tmp; }","title":"\u4ee3\u7801"},{"location":"data_structure/sort.html#_9","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u7a33\u5b9a\u6027\uff1a\u5426\uff08\u76f8\u7b49\u6570\u636e\u5148\u540e\u987a\u5e8f\u6539\u53d8\uff09","title":"\u5206\u6790"},{"location":"data_structure/union_set.html","text":"Union Set class Solution { public static void main(String[] args) { ArrayList<Integer> integers = new ArrayList<>(Arrays.asList(1,2,3,4,5,6)); UnionSet<Integer> set = new UnionSet<>(integers); System.out.println(set.connect(1, 3)); set.union(1, 3); System.out.println(set.connect(1, 3)); System.out.println(set.connect(1, 4)); set.union(3,4); System.out.println(set.connect(1, 4)); } } class Node<V> { V val; Node<V> parent; public Node(V val) { this.val = val; } } class UnionSet<V> { private HashMap<V, Node<V>> nodes; public UnionSet(List<V> els) { nodes = new HashMap<>(); for (V el : els) { Node<V> node = new Node<>(el); node.parent = node; nodes.put(el, node); } } public void union(V v1, V v2) { Node<V> v1Node = nodes.get(v1); Node<V> v2Node = nodes.get(v2); if (v1Node == null || v2Node == null) { throw new IllegalArgumentException(); } LinkedList<Node<V>> stackV1 = new LinkedList<>(); LinkedList<Node<V>> stackV2 = new LinkedList<>(); Node<V> v1Root = v1Node; while (v1Root.parent != v1Root) { stackV1.push(v1Node); v1Root = v1Root.parent; } Node<V> v2Root = v2Node; while (v2Root.parent != v2Root) { stackV2.push(v2Node); v2Root = v2Root.parent; } if (stackV1.size() < stackV2.size()) { while (!stackV1.isEmpty()) { Node<V> pop = stackV1.pop(); pop.parent = v2Root; } v1Root.parent = v2Root; } else { while (!stackV2.isEmpty()) { Node<V> pop = stackV2.pop(); pop.parent = v1Root; } v2Root.parent = v1Root; } } public boolean connect(V v1, V v2) { return findParent(v1) == findParent(v2); } private Node<V> findParent(V v) { Node<V> vNode = nodes.get(v); if (vNode == null) { return null; } return vNode.parent; } }","title":"Union Set"},{"location":"data_structure/union_set.html#union-set","text":"class Solution { public static void main(String[] args) { ArrayList<Integer> integers = new ArrayList<>(Arrays.asList(1,2,3,4,5,6)); UnionSet<Integer> set = new UnionSet<>(integers); System.out.println(set.connect(1, 3)); set.union(1, 3); System.out.println(set.connect(1, 3)); System.out.println(set.connect(1, 4)); set.union(3,4); System.out.println(set.connect(1, 4)); } } class Node<V> { V val; Node<V> parent; public Node(V val) { this.val = val; } } class UnionSet<V> { private HashMap<V, Node<V>> nodes; public UnionSet(List<V> els) { nodes = new HashMap<>(); for (V el : els) { Node<V> node = new Node<>(el); node.parent = node; nodes.put(el, node); } } public void union(V v1, V v2) { Node<V> v1Node = nodes.get(v1); Node<V> v2Node = nodes.get(v2); if (v1Node == null || v2Node == null) { throw new IllegalArgumentException(); } LinkedList<Node<V>> stackV1 = new LinkedList<>(); LinkedList<Node<V>> stackV2 = new LinkedList<>(); Node<V> v1Root = v1Node; while (v1Root.parent != v1Root) { stackV1.push(v1Node); v1Root = v1Root.parent; } Node<V> v2Root = v2Node; while (v2Root.parent != v2Root) { stackV2.push(v2Node); v2Root = v2Root.parent; } if (stackV1.size() < stackV2.size()) { while (!stackV1.isEmpty()) { Node<V> pop = stackV1.pop(); pop.parent = v2Root; } v1Root.parent = v2Root; } else { while (!stackV2.isEmpty()) { Node<V> pop = stackV2.pop(); pop.parent = v1Root; } v2Root.parent = v1Root; } } public boolean connect(V v1, V v2) { return findParent(v1) == findParent(v2); } private Node<V> findParent(V v) { Node<V> vNode = nodes.get(v); if (vNode == null) { return null; } return vNode.parent; } }","title":"Union Set"},{"location":"design_pattern/adapter.html","text":"Adapter \u5b9a\u4e49 \u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\uff0c\u9002\u914d\u5668\u6a21\u5f0f\u4f7f\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u90a3\u4e9b\u7c7b\u53ef\u4ee5\u4e00\u8d77\u5de5\u4f5c\u3002 \u5b9e\u73b0 \u7ee7\u627for\u7ec4\u5408","title":"Adapter"},{"location":"design_pattern/adapter.html#adapter","text":"","title":"Adapter"},{"location":"design_pattern/adapter.html#_1","text":"\u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\uff0c\u9002\u914d\u5668\u6a21\u5f0f\u4f7f\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u90a3\u4e9b\u7c7b\u53ef\u4ee5\u4e00\u8d77\u5de5\u4f5c\u3002","title":"\u5b9a\u4e49"},{"location":"design_pattern/adapter.html#_2","text":"\u7ee7\u627for\u7ec4\u5408","title":"\u5b9e\u73b0"},{"location":"design_pattern/bridge.html","text":"Bridge \u5b9a\u4e49 \u5c06\u62bd\u8c61\u90e8\u5206\u4e0e\u5b83\u7684\u5b9e\u73b0\u90e8\u5206\u5206\u79bb\uff0c\u4f7f\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u53d8\u5316\u3002 \u52a8\u673a \u8bbe\u60f3\u5982\u679c\u8981\u7ed8\u5236\u77e9\u5f62\u3001\u5706\u5f62\u3001\u692d\u5706\u3001\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u89814\u4e2a\u5f62\u72b6\u7c7b\uff0c\u4f46\u662f\u5982\u679c\u7ed8\u5236\u7684\u56fe\u5f62\u9700\u8981\u5177\u6709\u4e0d\u540c\u7684\u989c\u8272\uff0c\u5982\u7ea2\u8272\u3001\u7eff\u8272\u3001\u84dd\u8272\u7b49\uff0c\u6b64\u65f6\u81f3\u5c11\u6709\u5982\u4e0b\u4e24\u79cd\u8bbe\u8ba1\u65b9\u6848\uff1a \u4e3a\u6bcf\u4e00\u79cd\u5f62\u72b6\u90fd\u63d0\u4f9b\u4e00\u5957\u5404\u79cd\u989c\u8272\u7684\u7248\u672c \u6839\u636e\u5b9e\u9645\u9700\u8981\u5bf9\u5f62\u72b6\u548c\u989c\u8272\u8fdb\u884c\u7ec4\u5408 \u5bf9\u4e8e\u6709\u4e24\u4e2a\u53d8\u5316\u7ef4\u5ea6\uff08\u5373\u4e24\u4e2a\u53d8\u5316\u7684\u539f\u56e0\uff09\u7684\u7cfb\u7edf\uff0c\u91c7\u7528\u65b9\u6848\u4e8c\u6765\u8fdb\u884c\u8bbe\u8ba1\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u66f4\u5c11\uff0c\u4e14\u7cfb\u7edf\u6269\u5c55\u66f4\u4e3a\u65b9\u4fbf\u3002 \u8bbe\u8ba1\u65b9\u6848\u4e8c\u5373\u662f\u6865\u63a5\u6a21\u5f0f\u7684\u5e94\u7528\u3002\u6865\u63a5\u6a21\u5f0f\u5c06\u7ee7\u627f\u5173\u7cfb\u8f6c\u6362\u4e3a\u5173\u8054\u5173\u7cfb\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u51cf\u5c11\u4e86\u4ee3\u7801\u7f16\u5199\u91cf\u3002","title":"Bridge"},{"location":"design_pattern/bridge.html#bridge","text":"","title":"Bridge"},{"location":"design_pattern/bridge.html#_1","text":"\u5c06\u62bd\u8c61\u90e8\u5206\u4e0e\u5b83\u7684\u5b9e\u73b0\u90e8\u5206\u5206\u79bb\uff0c\u4f7f\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u53d8\u5316\u3002","title":"\u5b9a\u4e49"},{"location":"design_pattern/bridge.html#_2","text":"\u8bbe\u60f3\u5982\u679c\u8981\u7ed8\u5236\u77e9\u5f62\u3001\u5706\u5f62\u3001\u692d\u5706\u3001\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u89814\u4e2a\u5f62\u72b6\u7c7b\uff0c\u4f46\u662f\u5982\u679c\u7ed8\u5236\u7684\u56fe\u5f62\u9700\u8981\u5177\u6709\u4e0d\u540c\u7684\u989c\u8272\uff0c\u5982\u7ea2\u8272\u3001\u7eff\u8272\u3001\u84dd\u8272\u7b49\uff0c\u6b64\u65f6\u81f3\u5c11\u6709\u5982\u4e0b\u4e24\u79cd\u8bbe\u8ba1\u65b9\u6848\uff1a \u4e3a\u6bcf\u4e00\u79cd\u5f62\u72b6\u90fd\u63d0\u4f9b\u4e00\u5957\u5404\u79cd\u989c\u8272\u7684\u7248\u672c \u6839\u636e\u5b9e\u9645\u9700\u8981\u5bf9\u5f62\u72b6\u548c\u989c\u8272\u8fdb\u884c\u7ec4\u5408 \u5bf9\u4e8e\u6709\u4e24\u4e2a\u53d8\u5316\u7ef4\u5ea6\uff08\u5373\u4e24\u4e2a\u53d8\u5316\u7684\u539f\u56e0\uff09\u7684\u7cfb\u7edf\uff0c\u91c7\u7528\u65b9\u6848\u4e8c\u6765\u8fdb\u884c\u8bbe\u8ba1\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u66f4\u5c11\uff0c\u4e14\u7cfb\u7edf\u6269\u5c55\u66f4\u4e3a\u65b9\u4fbf\u3002 \u8bbe\u8ba1\u65b9\u6848\u4e8c\u5373\u662f\u6865\u63a5\u6a21\u5f0f\u7684\u5e94\u7528\u3002\u6865\u63a5\u6a21\u5f0f\u5c06\u7ee7\u627f\u5173\u7cfb\u8f6c\u6362\u4e3a\u5173\u8054\u5173\u7cfb\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u51cf\u5c11\u4e86\u4ee3\u7801\u7f16\u5199\u91cf\u3002","title":"\u52a8\u673a"},{"location":"design_pattern/builder.html","text":"Builder VS \u6784\u9020\u5668 \u7c7b\u7684\u5c5e\u6027\u4e4b\u95f4\u6709\u4e00\u5b9a\u7684\u4f9d\u8d56\u5173\u7cfb\u6216\u8005\u7ea6\u675f\u6761\u4ef6 \u53ef\u8bfb\u6027","title":"Builder"},{"location":"design_pattern/builder.html#builder","text":"","title":"Builder"},{"location":"design_pattern/builder.html#vs","text":"\u7c7b\u7684\u5c5e\u6027\u4e4b\u95f4\u6709\u4e00\u5b9a\u7684\u4f9d\u8d56\u5173\u7cfb\u6216\u8005\u7ea6\u675f\u6761\u4ef6 \u53ef\u8bfb\u6027","title":"VS \u6784\u9020\u5668"},{"location":"design_pattern/composite.html","text":"Composite \u5b9a\u4e49 \u5c06\u4e00\u7ec4\u5bf9\u8c61\u7ec4\u7ec7\uff08Compose\uff09\u6210\u6811\u5f62\u7ed3\u6784\uff0c\u4ee5\u8868\u793a\u4e00\u79cd\u201c\u90e8\u5206 - \u6574\u4f53\u201d\u7684\u5c42\u6b21\u7ed3\u6784\u3002 \u7ec4\u5408\u8ba9\u5ba2\u6237\u7aef\uff08\u5728\u5f88\u591a\u8bbe\u8ba1\u6a21\u5f0f\u4e66\u7c4d\u4e2d\uff0c\u201c\u5ba2\u6237\u7aef\u201d\u4ee3\u6307\u4ee3\u7801\u7684\u4f7f\u7528\u8005\u3002\uff09\u53ef\u4ee5\u7edf\u4e00\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u5904\u7406\u903b\u8f91\u3002","title":"Composite"},{"location":"design_pattern/composite.html#composite","text":"","title":"Composite"},{"location":"design_pattern/composite.html#_1","text":"\u5c06\u4e00\u7ec4\u5bf9\u8c61\u7ec4\u7ec7\uff08Compose\uff09\u6210\u6811\u5f62\u7ed3\u6784\uff0c\u4ee5\u8868\u793a\u4e00\u79cd\u201c\u90e8\u5206 - \u6574\u4f53\u201d\u7684\u5c42\u6b21\u7ed3\u6784\u3002 \u7ec4\u5408\u8ba9\u5ba2\u6237\u7aef\uff08\u5728\u5f88\u591a\u8bbe\u8ba1\u6a21\u5f0f\u4e66\u7c4d\u4e2d\uff0c\u201c\u5ba2\u6237\u7aef\u201d\u4ee3\u6307\u4ee3\u7801\u7684\u4f7f\u7528\u8005\u3002\uff09\u53ef\u4ee5\u7edf\u4e00\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u5904\u7406\u903b\u8f91\u3002","title":"\u5b9a\u4e49"},{"location":"design_pattern/decorator.html","text":"Decorator \u5b9a\u4e49 \u52a8\u6001\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23(Responsibility) \u4f5c\u7528 \u88c5\u9970\u6a21\u5f0f\u4e0e\u7ee7\u627f\u5173\u7cfb\u7684\u76ee\u7684\u90fd\u662f\u8981\u6269\u5c55\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u4f46\u662f\u88c5\u9970\u6a21\u5f0f\u53ef\u4ee5\u63d0\u4f9b\u6bd4\u7ee7\u627f\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\uff0c\u53ef\u4ee5\u521b\u9020\u51fa\u5f88\u591a\u4e0d\u540c\u884c\u4e3a\u7684\u7ec4\u5408\u3002\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u5177\u4f53\u88c5\u9970\u7c7b\u6765\u88c5\u9970\u540c\u4e00\u5bf9\u8c61\uff0c\u5f97\u5230\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684\u5bf9\u8c61\u3002 \u5177\u4f53\u6784\u4ef6\u7c7b\u4e0e\u5177\u4f53\u88c5\u9970\u7c7b\u53ef\u4ee5\u72ec\u7acb\u53d8\u5316\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u65b0\u7684\u5177\u4f53\u6784\u4ef6\u7c7b\u548c\u5177\u4f53\u88c5\u9970\u7c7b\uff0c\u5728\u4f7f\u7528\u65f6\u518d\u5bf9\u5176\u8fdb\u884c\u7ec4\u5408\uff0c\u539f\u6709\u4ee3\u7801\u65e0\u987b\u6539\u53d8\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d VS \u4ee3\u7406\u6a21\u5f0f \u88c5\u9970\u53ef\u4ee5 \u88c5\u4e86\u53c8\u88c5\uff0c\u5c42\u5c42\u5305\u88f9\uff1b \u4ee3\u7406\u901a\u5e38\u4e0d\u4f1a\u4ee3\u4e86\u53c8\u4ee3\u3002","title":"Decorator"},{"location":"design_pattern/decorator.html#decorator","text":"","title":"Decorator"},{"location":"design_pattern/decorator.html#_1","text":"\u52a8\u6001\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23(Responsibility)","title":"\u5b9a\u4e49"},{"location":"design_pattern/decorator.html#_2","text":"\u88c5\u9970\u6a21\u5f0f\u4e0e\u7ee7\u627f\u5173\u7cfb\u7684\u76ee\u7684\u90fd\u662f\u8981\u6269\u5c55\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u4f46\u662f\u88c5\u9970\u6a21\u5f0f\u53ef\u4ee5\u63d0\u4f9b\u6bd4\u7ee7\u627f\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\uff0c\u53ef\u4ee5\u521b\u9020\u51fa\u5f88\u591a\u4e0d\u540c\u884c\u4e3a\u7684\u7ec4\u5408\u3002\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u5177\u4f53\u88c5\u9970\u7c7b\u6765\u88c5\u9970\u540c\u4e00\u5bf9\u8c61\uff0c\u5f97\u5230\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684\u5bf9\u8c61\u3002 \u5177\u4f53\u6784\u4ef6\u7c7b\u4e0e\u5177\u4f53\u88c5\u9970\u7c7b\u53ef\u4ee5\u72ec\u7acb\u53d8\u5316\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u65b0\u7684\u5177\u4f53\u6784\u4ef6\u7c7b\u548c\u5177\u4f53\u88c5\u9970\u7c7b\uff0c\u5728\u4f7f\u7528\u65f6\u518d\u5bf9\u5176\u8fdb\u884c\u7ec4\u5408\uff0c\u539f\u6709\u4ee3\u7801\u65e0\u987b\u6539\u53d8\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d","title":"\u4f5c\u7528"},{"location":"design_pattern/decorator.html#vs","text":"\u88c5\u9970\u53ef\u4ee5 \u88c5\u4e86\u53c8\u88c5\uff0c\u5c42\u5c42\u5305\u88f9\uff1b \u4ee3\u7406\u901a\u5e38\u4e0d\u4f1a\u4ee3\u4e86\u53c8\u4ee3\u3002","title":"VS \u4ee3\u7406\u6a21\u5f0f"},{"location":"design_pattern/facade.html","text":"Facade \u5b9a\u4e49 \u95e8\u9762\u6a21\u5f0f\u4e3a\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e00\u7ec4\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e00\u7ec4\u9ad8\u5c42\u63a5\u53e3\u8ba9\u5b50\u7cfb\u7edf\u66f4\u6613\u7528 \u5e94\u7528\u573a\u666f \u63d0\u5347\u6027\u80fd\uff08\u591a\u6b21rpc\u5408\u5e76\u4e3a\u4e00\u6b21rpc\uff09 \u6613\u7528\u6027 \u5206\u5e03\u5f0f\u4e8b\u52a1","title":"Facade"},{"location":"design_pattern/facade.html#facade","text":"","title":"Facade"},{"location":"design_pattern/facade.html#_1","text":"\u95e8\u9762\u6a21\u5f0f\u4e3a\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e00\u7ec4\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e00\u7ec4\u9ad8\u5c42\u63a5\u53e3\u8ba9\u5b50\u7cfb\u7edf\u66f4\u6613\u7528","title":"\u5b9a\u4e49"},{"location":"design_pattern/facade.html#_2","text":"\u63d0\u5347\u6027\u80fd\uff08\u591a\u6b21rpc\u5408\u5e76\u4e3a\u4e00\u6b21rpc\uff09 \u6613\u7528\u6027 \u5206\u5e03\u5f0f\u4e8b\u52a1","title":"\u5e94\u7528\u573a\u666f"},{"location":"design_pattern/factory.html","text":"Factory \u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u4f18\u70b9 \u5b9e\u73b0\u4e86\u5bf9\u8d23\u4efb\u7684\u5206\u5272\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u5de5\u5382\u7c7b\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u3002 \u5ba2\u6237\u7aef\u65e0\u987b\u77e5\u9053\u6240\u521b\u5efa\u7684\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7c7b\u540d\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5177\u4f53\u4ea7\u54c1\u7c7b\u6240\u5bf9\u5e94\u7684\u53c2\u6570\u5373\u53ef\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u7c7b\u540d\uff0c\u53ef\u4ee5\u51cf\u5c11\u4f7f\u7528\u8005\u7684\u8bb0\u5fc6\u91cf\u53ef\u4ee5\u51cf\u5c11\u4f7f\u7528\u8005\u7684\u8bb0\u5fc6\u91cf\u3002 \u7f3a\u70b9 \u8fdd\u53cd\u5f00\u95ed\u539f\u5219 \u8fdd\u53cd\u5355\u4e00\u804c\u8d23 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u4f18\u70b9 \u7b26\u5408\u5f00\u95ed\u539f\u5219 \u7b26\u5408\u5355\u4e00\u804c\u8d23 \u7f3a\u70b9 \u590d\u6742\u4e00\u70b9 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u4f18\u70b9 \u4e00\u4e2a\u5de5\u5382\u8d1f\u8d23\u521b\u5efa\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61 \u7f3a\u70b9 \u590d\u6742\u4e00\u70b9 \u603b\u7ed3 \u5c01\u88c5\u53d8\u5316\uff1a\u521b\u5efa\u903b\u8f91\u6709\u53ef\u80fd\u53d8\u5316\uff0c\u5c01\u88c5\u6210\u5de5\u5382\u7c7b\u4e4b\u540e\uff0c\u521b\u5efa\u903b\u8f91\u7684\u53d8\u66f4\u5bf9\u8c03\u7528\u8005\u900f\u660e\u3002 \u4ee3\u7801\u590d\u7528\uff1a\u521b\u5efa\u4ee3\u7801\u62bd\u79bb\u5230\u72ec\u7acb\u7684\u5de5\u5382\u7c7b\u4e4b\u540e\u53ef\u4ee5\u590d\u7528\u3002 \u9694\u79bb\u590d\u6742\u6027\uff1a\u5c01\u88c5\u590d\u6742\u7684\u521b\u5efa\u903b\u8f91\uff0c\u8c03\u7528\u8005\u65e0\u9700\u4e86\u89e3\u5982\u4f55\u521b\u5efa\u5bf9\u8c61\u3002 \u63a7\u5236\u590d\u6742\u5ea6\uff1a\u5c06\u521b\u5efa\u4ee3\u7801\u62bd\u79bb\u51fa\u6765\uff0c\u8ba9\u539f\u672c\u7684\u51fd\u6570\u6216\u7c7b\u804c\u8d23\u66f4\u5355\u4e00\uff0c\u4ee3\u7801\u66f4\u7b80\u6d01","title":"Factory"},{"location":"design_pattern/factory.html#factory","text":"","title":"Factory"},{"location":"design_pattern/factory.html#_1","text":"","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"design_pattern/factory.html#_2","text":"\u5b9e\u73b0\u4e86\u5bf9\u8d23\u4efb\u7684\u5206\u5272\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u5de5\u5382\u7c7b\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u3002 \u5ba2\u6237\u7aef\u65e0\u987b\u77e5\u9053\u6240\u521b\u5efa\u7684\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7c7b\u540d\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5177\u4f53\u4ea7\u54c1\u7c7b\u6240\u5bf9\u5e94\u7684\u53c2\u6570\u5373\u53ef\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u7c7b\u540d\uff0c\u53ef\u4ee5\u51cf\u5c11\u4f7f\u7528\u8005\u7684\u8bb0\u5fc6\u91cf\u53ef\u4ee5\u51cf\u5c11\u4f7f\u7528\u8005\u7684\u8bb0\u5fc6\u91cf\u3002","title":"\u4f18\u70b9"},{"location":"design_pattern/factory.html#_3","text":"\u8fdd\u53cd\u5f00\u95ed\u539f\u5219 \u8fdd\u53cd\u5355\u4e00\u804c\u8d23","title":"\u7f3a\u70b9"},{"location":"design_pattern/factory.html#_4","text":"","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"},{"location":"design_pattern/factory.html#_5","text":"\u7b26\u5408\u5f00\u95ed\u539f\u5219 \u7b26\u5408\u5355\u4e00\u804c\u8d23","title":"\u4f18\u70b9"},{"location":"design_pattern/factory.html#_6","text":"\u590d\u6742\u4e00\u70b9","title":"\u7f3a\u70b9"},{"location":"design_pattern/factory.html#_7","text":"","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"design_pattern/factory.html#_8","text":"\u4e00\u4e2a\u5de5\u5382\u8d1f\u8d23\u521b\u5efa\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61","title":"\u4f18\u70b9"},{"location":"design_pattern/factory.html#_9","text":"\u590d\u6742\u4e00\u70b9","title":"\u7f3a\u70b9"},{"location":"design_pattern/factory.html#_10","text":"\u5c01\u88c5\u53d8\u5316\uff1a\u521b\u5efa\u903b\u8f91\u6709\u53ef\u80fd\u53d8\u5316\uff0c\u5c01\u88c5\u6210\u5de5\u5382\u7c7b\u4e4b\u540e\uff0c\u521b\u5efa\u903b\u8f91\u7684\u53d8\u66f4\u5bf9\u8c03\u7528\u8005\u900f\u660e\u3002 \u4ee3\u7801\u590d\u7528\uff1a\u521b\u5efa\u4ee3\u7801\u62bd\u79bb\u5230\u72ec\u7acb\u7684\u5de5\u5382\u7c7b\u4e4b\u540e\u53ef\u4ee5\u590d\u7528\u3002 \u9694\u79bb\u590d\u6742\u6027\uff1a\u5c01\u88c5\u590d\u6742\u7684\u521b\u5efa\u903b\u8f91\uff0c\u8c03\u7528\u8005\u65e0\u9700\u4e86\u89e3\u5982\u4f55\u521b\u5efa\u5bf9\u8c61\u3002 \u63a7\u5236\u590d\u6742\u5ea6\uff1a\u5c06\u521b\u5efa\u4ee3\u7801\u62bd\u79bb\u51fa\u6765\uff0c\u8ba9\u539f\u672c\u7684\u51fd\u6570\u6216\u7c7b\u804c\u8d23\u66f4\u5355\u4e00\uff0c\u4ee3\u7801\u66f4\u7b80\u6d01","title":"\u603b\u7ed3"},{"location":"design_pattern/flyweight.html","text":"Flyweight \u5b9a\u4e49 \u91c7\u7528\u5171\u4eab\u6765\u907f\u514d\u5927\u91cf\u62e5\u6709\u76f8\u540c\u5185\u5bb9\u5bf9\u8c61\u7684\u5f00\u9500\u3002\u8fd9\u79cd\u5f00\u9500\u4e2d\u6700\u5e38\u89c1\u3001\u76f4\u89c2\u7684\u5c31\u662f\u5185\u5b58\u7684\u635f\u8017\u3002 \u4f5c\u7528 \u590d\u7528\u5bf9\u8c61\uff0c\u8282\u7701\u5185\u5b58\uff0c\u524d\u63d0\u662f\u4eab\u5143\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61 \u6848\u4f8b Java \u91cc String\uff0cInteger\uff0cLong\uff0cShort\u7b49\u3002","title":"Flyweight"},{"location":"design_pattern/flyweight.html#flyweight","text":"","title":"Flyweight"},{"location":"design_pattern/flyweight.html#_1","text":"\u91c7\u7528\u5171\u4eab\u6765\u907f\u514d\u5927\u91cf\u62e5\u6709\u76f8\u540c\u5185\u5bb9\u5bf9\u8c61\u7684\u5f00\u9500\u3002\u8fd9\u79cd\u5f00\u9500\u4e2d\u6700\u5e38\u89c1\u3001\u76f4\u89c2\u7684\u5c31\u662f\u5185\u5b58\u7684\u635f\u8017\u3002","title":"\u5b9a\u4e49"},{"location":"design_pattern/flyweight.html#_2","text":"\u590d\u7528\u5bf9\u8c61\uff0c\u8282\u7701\u5185\u5b58\uff0c\u524d\u63d0\u662f\u4eab\u5143\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61","title":"\u4f5c\u7528"},{"location":"design_pattern/flyweight.html#_3","text":"Java \u91cc String\uff0cInteger\uff0cLong\uff0cShort\u7b49\u3002","title":"\u6848\u4f8b"},{"location":"design_pattern/prototype.html","text":"Prototype \u5b9a\u4e49 \u5982\u679c\u5bf9\u8c61\u7684\u521b\u5efa\u6210\u672c\u6bd4\u8f83\u5927\uff0c\u800c\u540c\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5dee\u522b\u4e0d\u5927\uff08\u5927\u90e8\u5206\u5b57\u6bb5\u90fd\u76f8\u540c\uff09\uff0c \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5bf9\u5df2\u6709\u5bf9\u8c61\uff08\u539f\u578b\uff09\u8fdb\u884c\u590d\u5236\uff08\u6216\u8005\u53eb\u62f7\u8d1d\uff09\u7684\u65b9\u5f0f\uff0c\u6765\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u4ee5\u8fbe\u5230 \u8282\u7701\u521b\u5efa\u65f6\u95f4 \u7684\u76ee\u7684\u3002 \u8fd9\u79cd\u57fa\u4e8e\u539f\u578b\u6765\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f\u5c31\u53eb\u4f5c\u539f\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7b80\u79f0\u539f\u578b\u6a21\u5f0f\u3002 \u5b9e\u73b0 \u6d45\u62f7\u8d1d \u6df1\u62f7\u8d1d","title":"Prototype"},{"location":"design_pattern/prototype.html#prototype","text":"","title":"Prototype"},{"location":"design_pattern/prototype.html#_1","text":"\u5982\u679c\u5bf9\u8c61\u7684\u521b\u5efa\u6210\u672c\u6bd4\u8f83\u5927\uff0c\u800c\u540c\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5dee\u522b\u4e0d\u5927\uff08\u5927\u90e8\u5206\u5b57\u6bb5\u90fd\u76f8\u540c\uff09\uff0c \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5bf9\u5df2\u6709\u5bf9\u8c61\uff08\u539f\u578b\uff09\u8fdb\u884c\u590d\u5236\uff08\u6216\u8005\u53eb\u62f7\u8d1d\uff09\u7684\u65b9\u5f0f\uff0c\u6765\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u4ee5\u8fbe\u5230 \u8282\u7701\u521b\u5efa\u65f6\u95f4 \u7684\u76ee\u7684\u3002 \u8fd9\u79cd\u57fa\u4e8e\u539f\u578b\u6765\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f\u5c31\u53eb\u4f5c\u539f\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7b80\u79f0\u539f\u578b\u6a21\u5f0f\u3002","title":"\u5b9a\u4e49"},{"location":"design_pattern/prototype.html#_2","text":"\u6d45\u62f7\u8d1d \u6df1\u62f7\u8d1d","title":"\u5b9e\u73b0"},{"location":"design_pattern/proxy.html","text":"Proxy \u5b9a\u4e49 \u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u5bf9\u771f\u5b9e\u5bf9\u8c61\u7684\u64cd\u4f5c\u6216\u8005\u5c06\u65b0\u7684\u5bf9\u8c61\u4f5c\u4e3a\u771f\u5b9e\u5bf9\u8c61\u7684\u4e00\u4e2a\u66ff\u8eab \u5b9e\u73b0 \u9759\u6001\u4ee3\u7406\uff1a\u7ec4\u5408 or \u7ee7\u627f \u52a8\u6001\u4ee3\u7406\uff1ajdk\u52a8\u6001\u4ee3\u7406 or cglib\u4ee3\u7406 \u5e94\u7528\u573a\u666f \u4e1a\u52a1\u7cfb\u7edf\u975e\u529f\u80fd\u6027\u9700\u6c42\uff08\u5982\u7f13\u5b58\uff0c\u65e5\u5fd7\uff0c\u76d1\u63a7\uff09","title":"Proxy"},{"location":"design_pattern/proxy.html#proxy","text":"","title":"Proxy"},{"location":"design_pattern/proxy.html#_1","text":"\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u5bf9\u771f\u5b9e\u5bf9\u8c61\u7684\u64cd\u4f5c\u6216\u8005\u5c06\u65b0\u7684\u5bf9\u8c61\u4f5c\u4e3a\u771f\u5b9e\u5bf9\u8c61\u7684\u4e00\u4e2a\u66ff\u8eab","title":"\u5b9a\u4e49"},{"location":"design_pattern/proxy.html#_2","text":"\u9759\u6001\u4ee3\u7406\uff1a\u7ec4\u5408 or \u7ee7\u627f \u52a8\u6001\u4ee3\u7406\uff1ajdk\u52a8\u6001\u4ee3\u7406 or cglib\u4ee3\u7406","title":"\u5b9e\u73b0"},{"location":"design_pattern/proxy.html#_3","text":"\u4e1a\u52a1\u7cfb\u7edf\u975e\u529f\u80fd\u6027\u9700\u6c42\uff08\u5982\u7f13\u5b58\uff0c\u65e5\u5fd7\uff0c\u76d1\u63a7\uff09","title":"\u5e94\u7528\u573a\u666f"},{"location":"design_pattern/singleton.html","text":"Singleton \u5b9a\u4e49 \u4e00\u4e2a\u7c7b\u53ea\u5141\u8bb8\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff08\u6216\u8005\u53eb\u5b9e\u4f8b\uff09\uff0c\u90a3\u8fd9\u4e2a\u7c7b\u5c31\u662f\u4e00\u4e2a\u5355\u4f8b\u7c7b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u53eb\u4f5c\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u4f18\u70b9 \u63d0\u4f9b\u4e86\u5bf9\u552f\u4e00\u5b9e\u4f8b\u7684\u53d7\u63a7\u8bbf\u95ee\u3002 \u7531\u4e8e\u5728\u7cfb\u7edf\u5185\u5b58\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u4ee5\u8282\u7ea6\u7cfb\u7edf\u8d44\u6e90\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u9891\u7e41\u521b\u5efa\u548c\u9500\u6bc1\u7684\u5bf9\u8c61\uff0c\u5355\u4f8b\u6a21\u5f0f\u65e0\u7591\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\u3002 \u5141\u8bb8\u53ef\u53d8\u6570\u76ee\u7684\u5b9e\u4f8b\u3002\u53ef\u57fa\u4e8e\u5355\u4f8b\u6a21\u5f0f\u8fdb\u884c\u6269\u5c55\uff0c\u4f7f\u7528\u4e0e\u5355\u4f8b\u63a7\u5236\u76f8\u4f3c\u7684\u65b9\u6cd5\u6765\u83b7\u5f97\u6307\u5b9a\u4e2a\u6570\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff08\u591a\u4f8b\uff09\u3002 \u7f3a\u70b9 \u7531\u4e8e\u5355\u4f8b\u6a21\u5f0f\u4e2d\u6ca1\u6709\u62bd\u8c61\u5c42\uff0c\u56e0\u6b64\u5355\u4f8b\u7c7b\u7684\u6269\u5c55\u6709\u5f88\u5927\u7684\u56f0\u96be\u3002 \u5355\u4f8b\u7c7b\u7684\u804c\u8d23\u8fc7\u91cd\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fdd\u80cc\u4e86\u201c\u5355\u4e00\u804c\u8d23\u539f\u5219\u201d\u3002\u56e0\u4e3a\u5355\u4f8b\u7c7b\u65e2\u5145\u5f53\u4e86\u5de5\u5382\u89d2\u8272\uff0c\u63d0\u4f9b\u4e86\u5de5\u5382\u65b9\u6cd5\uff0c\u540c\u65f6\u53c8\u5145\u5f53\u4e86\u4ea7\u54c1\u89d2\u8272\uff0c\u5305\u542b\u4e00\u4e9b\u4e1a\u52a1\u65b9\u6cd5\uff0c\u5c06\u4ea7\u54c1\u7684\u521b\u5efa\u548c\u4ea7\u54c1\u7684\u672c\u8eab\u7684\u529f\u80fd\u878d\u5408\u5230\u4e00\u8d77\u3002 \u5b9e\u73b0 \u997f\u6c49\u5f0f\uff08\u9759\u6001\u5b9e\u4f8b\u3002\u4e8b\u5b9e\u4e0a\u4e5f\u662f\u61d2\u6c49\u7684\uff0c\u53ea\u8981\u4e0d\u52a0\u8f7d\u6b64\u7c7b\uff09 \u61d2\u6c49\u5f0f \u53cc\u91cd\u68c0\u6d4b \u9759\u6001\u5185\u90e8\u7c7b \u63a8\u8350\u997f\u6c49\u5f0f\uff0c\u7b80\u5355\u5b9e\u7528\u3002","title":"Singleton"},{"location":"design_pattern/singleton.html#singleton","text":"","title":"Singleton"},{"location":"design_pattern/singleton.html#_1","text":"\u4e00\u4e2a\u7c7b\u53ea\u5141\u8bb8\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff08\u6216\u8005\u53eb\u5b9e\u4f8b\uff09\uff0c\u90a3\u8fd9\u4e2a\u7c7b\u5c31\u662f\u4e00\u4e2a\u5355\u4f8b\u7c7b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u53eb\u4f5c\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f","title":"\u5b9a\u4e49"},{"location":"design_pattern/singleton.html#_2","text":"\u63d0\u4f9b\u4e86\u5bf9\u552f\u4e00\u5b9e\u4f8b\u7684\u53d7\u63a7\u8bbf\u95ee\u3002 \u7531\u4e8e\u5728\u7cfb\u7edf\u5185\u5b58\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u4ee5\u8282\u7ea6\u7cfb\u7edf\u8d44\u6e90\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u9891\u7e41\u521b\u5efa\u548c\u9500\u6bc1\u7684\u5bf9\u8c61\uff0c\u5355\u4f8b\u6a21\u5f0f\u65e0\u7591\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\u3002 \u5141\u8bb8\u53ef\u53d8\u6570\u76ee\u7684\u5b9e\u4f8b\u3002\u53ef\u57fa\u4e8e\u5355\u4f8b\u6a21\u5f0f\u8fdb\u884c\u6269\u5c55\uff0c\u4f7f\u7528\u4e0e\u5355\u4f8b\u63a7\u5236\u76f8\u4f3c\u7684\u65b9\u6cd5\u6765\u83b7\u5f97\u6307\u5b9a\u4e2a\u6570\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff08\u591a\u4f8b\uff09\u3002","title":"\u4f18\u70b9"},{"location":"design_pattern/singleton.html#_3","text":"\u7531\u4e8e\u5355\u4f8b\u6a21\u5f0f\u4e2d\u6ca1\u6709\u62bd\u8c61\u5c42\uff0c\u56e0\u6b64\u5355\u4f8b\u7c7b\u7684\u6269\u5c55\u6709\u5f88\u5927\u7684\u56f0\u96be\u3002 \u5355\u4f8b\u7c7b\u7684\u804c\u8d23\u8fc7\u91cd\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fdd\u80cc\u4e86\u201c\u5355\u4e00\u804c\u8d23\u539f\u5219\u201d\u3002\u56e0\u4e3a\u5355\u4f8b\u7c7b\u65e2\u5145\u5f53\u4e86\u5de5\u5382\u89d2\u8272\uff0c\u63d0\u4f9b\u4e86\u5de5\u5382\u65b9\u6cd5\uff0c\u540c\u65f6\u53c8\u5145\u5f53\u4e86\u4ea7\u54c1\u89d2\u8272\uff0c\u5305\u542b\u4e00\u4e9b\u4e1a\u52a1\u65b9\u6cd5\uff0c\u5c06\u4ea7\u54c1\u7684\u521b\u5efa\u548c\u4ea7\u54c1\u7684\u672c\u8eab\u7684\u529f\u80fd\u878d\u5408\u5230\u4e00\u8d77\u3002","title":"\u7f3a\u70b9"},{"location":"design_pattern/singleton.html#_4","text":"\u997f\u6c49\u5f0f\uff08\u9759\u6001\u5b9e\u4f8b\u3002\u4e8b\u5b9e\u4e0a\u4e5f\u662f\u61d2\u6c49\u7684\uff0c\u53ea\u8981\u4e0d\u52a0\u8f7d\u6b64\u7c7b\uff09 \u61d2\u6c49\u5f0f \u53cc\u91cd\u68c0\u6d4b \u9759\u6001\u5185\u90e8\u7c7b \u63a8\u8350\u997f\u6c49\u5f0f\uff0c\u7b80\u5355\u5b9e\u7528\u3002","title":"\u5b9e\u73b0"},{"location":"design_pattern/visitor.html","text":"\u8bbf\u95ee\u8005\u6a21\u5f0f \u4f5c\u7528 \u8981\u5c06\u6570\u636e\u7ed3\u6784\u4e0e\u6570\u636e\u64cd\u4f5c\u5206\u79bb\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u5bf9\u8c61\u7ed3\u6784\u4e2d\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u5f88\u5c11\u6539\u53d8\uff0c\u4f46\u7ecf\u5e38\u9700\u8981\u5728\u6b64\u5bf9\u8c61\u7ed3\u6784\u4e0a\u5b9a\u4e49\u65b0\u7684\u64cd\u4f5c\u3002 \u9700\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7ed3\u6784\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u5f88\u591a\u4e0d\u540c\u7684\u5e76\u4e14\u4e0d\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u800c\u9700\u8981\u907f\u514d\u8ba9\u8fd9\u4e9b\u64cd\u4f5c\"\u6c61\u67d3\"\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5728\u589e\u52a0\u65b0\u64cd\u4f5c\u65f6\u4fee\u6539\u8fd9\u4e9b\u7c7b\u3002 \u4ee3\u7801 //\u62bd\u8c61\u5143\u7d20 public interface Element { void accept(ElementVisitor visitor); } //\u5177\u4f53\u5143\u7d20-\u8f66\u8f6e @Data @AllArgsConstructor public class Wheel implements Element { private String name; @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u8f66\u8eab public class Body implements Element { @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u5f15\u64ce public class Engine implements Element { @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u6574\u8f66 public class Car implements Element { public void accept(final ElementVisitor visitor) { visitor.visit(this); } } //\u62bd\u8c61\u8bbf\u95ee\u8005 public interface ElementVisitor { void visit(Body body); void visit(Engine engine); void visit(Wheel wheel); void visit(Car car); } //\u5177\u4f53\u7684\u4e00\u4e2a\u8bbf\u95ee\u8005\uff0c\u7eaf\u6253\u5370 @Slf4j public class DoElementVisitor implements ElementVisitor { @Override public void visit(Body body) { log.info(\"Moving my body\"); } @Override public void visit(Engine engine) { log.info(\"Starting my engine\"); } @Override public void visit(Wheel wheel) { log.info(\"Kicking my \" + wheel.getName() + \" wheel\"); } @Override public void visit(Car car) { log.info(\"Starting my car\"); } } //\u5355\u72ec\u8fd8\u5b9a\u4e49\u5bf9\u8c61\u7ed3\u6784\uff0c\u5176\u5b9e\u5b8c\u5168\u5c31\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5c31\u53ef\u4ee5 @Data public class ElementStructure { private List<Element> list = Lists.newArrayList(); public void addElement(Element element){ list.add(element); } public void accept(ElementVisitor visitor) { for (Element elem : list) { elem.accept(visitor); } } } public class ClientWithVisitor { public static void main(String[] args) { ElementStructure structure = new ElementStructure(); structure.addElement(new Wheel(\"front left\")); structure.addElement(new Wheel(\"front right\")); structure.addElement(new Wheel(\"back left\")); structure.addElement(new Wheel(\"back right\")); structure.addElement(new Body()); structure.addElement(new Engine()); structure.addElement(new Car()); structure.accept(new DoElementVisitor()); } } @Slf4j public class ClientWithoutVisitor { public static void main(String[] args) { ElementStructure structure = new ElementStructure(); structure.addElement(new Wheel(\"front left\")); structure.addElement(new Wheel(\"front right\")); structure.addElement(new Wheel(\"back left\")); structure.addElement(new Wheel(\"back right\")); structure.addElement(new Body()); structure.addElement(new Engine()); structure.addElement(new Car()); structure.getList().forEach(e -> { if (e instanceof Body) { log.info(\"Moving my body\"); } else if (e instanceof Engine) { log.info(\"Starting my engine\"); } else if (e instanceof Car) { log.info(\"Starting my car\"); } else if (e instanceof Wheel) { log.info(\"Kicking my \" + ((Wheel)e).getName() + \" wheel\"); } }); } } \u603b\u7ed3 \u5c01\u88c5\u53d8\u4e0e\u4e0d\u53d8 ElementVisitor \u8981\u4fee\u6539\uff0c\u8fdd\u53cd\u5f00\u95ed\u539f\u5219 \u6dfb\u52a0\u65b0\u7684ElementVisitor\u5b9e\u73b0\u7c7b\uff0c\u53ef\u6dfb\u52a0\u65b0\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219 \u53c2\u8003 net.sf.jsqlparser.statement.select.FromItem","title":"Visitor"},{"location":"design_pattern/visitor.html#_1","text":"","title":"\u8bbf\u95ee\u8005\u6a21\u5f0f"},{"location":"design_pattern/visitor.html#_2","text":"\u8981\u5c06\u6570\u636e\u7ed3\u6784\u4e0e\u6570\u636e\u64cd\u4f5c\u5206\u79bb\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u5bf9\u8c61\u7ed3\u6784\u4e2d\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u5f88\u5c11\u6539\u53d8\uff0c\u4f46\u7ecf\u5e38\u9700\u8981\u5728\u6b64\u5bf9\u8c61\u7ed3\u6784\u4e0a\u5b9a\u4e49\u65b0\u7684\u64cd\u4f5c\u3002 \u9700\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7ed3\u6784\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u5f88\u591a\u4e0d\u540c\u7684\u5e76\u4e14\u4e0d\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u800c\u9700\u8981\u907f\u514d\u8ba9\u8fd9\u4e9b\u64cd\u4f5c\"\u6c61\u67d3\"\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5728\u589e\u52a0\u65b0\u64cd\u4f5c\u65f6\u4fee\u6539\u8fd9\u4e9b\u7c7b\u3002","title":"\u4f5c\u7528"},{"location":"design_pattern/visitor.html#_3","text":"//\u62bd\u8c61\u5143\u7d20 public interface Element { void accept(ElementVisitor visitor); } //\u5177\u4f53\u5143\u7d20-\u8f66\u8f6e @Data @AllArgsConstructor public class Wheel implements Element { private String name; @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u8f66\u8eab public class Body implements Element { @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u5f15\u64ce public class Engine implements Element { @Override public void accept(ElementVisitor visitor) { visitor.visit(this); } } //\u5177\u4f53\u5143\u7d20-\u6574\u8f66 public class Car implements Element { public void accept(final ElementVisitor visitor) { visitor.visit(this); } } //\u62bd\u8c61\u8bbf\u95ee\u8005 public interface ElementVisitor { void visit(Body body); void visit(Engine engine); void visit(Wheel wheel); void visit(Car car); } //\u5177\u4f53\u7684\u4e00\u4e2a\u8bbf\u95ee\u8005\uff0c\u7eaf\u6253\u5370 @Slf4j public class DoElementVisitor implements ElementVisitor { @Override public void visit(Body body) { log.info(\"Moving my body\"); } @Override public void visit(Engine engine) { log.info(\"Starting my engine\"); } @Override public void visit(Wheel wheel) { log.info(\"Kicking my \" + wheel.getName() + \" wheel\"); } @Override public void visit(Car car) { log.info(\"Starting my car\"); } } //\u5355\u72ec\u8fd8\u5b9a\u4e49\u5bf9\u8c61\u7ed3\u6784\uff0c\u5176\u5b9e\u5b8c\u5168\u5c31\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5c31\u53ef\u4ee5 @Data public class ElementStructure { private List<Element> list = Lists.newArrayList(); public void addElement(Element element){ list.add(element); } public void accept(ElementVisitor visitor) { for (Element elem : list) { elem.accept(visitor); } } } public class ClientWithVisitor { public static void main(String[] args) { ElementStructure structure = new ElementStructure(); structure.addElement(new Wheel(\"front left\")); structure.addElement(new Wheel(\"front right\")); structure.addElement(new Wheel(\"back left\")); structure.addElement(new Wheel(\"back right\")); structure.addElement(new Body()); structure.addElement(new Engine()); structure.addElement(new Car()); structure.accept(new DoElementVisitor()); } } @Slf4j public class ClientWithoutVisitor { public static void main(String[] args) { ElementStructure structure = new ElementStructure(); structure.addElement(new Wheel(\"front left\")); structure.addElement(new Wheel(\"front right\")); structure.addElement(new Wheel(\"back left\")); structure.addElement(new Wheel(\"back right\")); structure.addElement(new Body()); structure.addElement(new Engine()); structure.addElement(new Car()); structure.getList().forEach(e -> { if (e instanceof Body) { log.info(\"Moving my body\"); } else if (e instanceof Engine) { log.info(\"Starting my engine\"); } else if (e instanceof Car) { log.info(\"Starting my car\"); } else if (e instanceof Wheel) { log.info(\"Kicking my \" + ((Wheel)e).getName() + \" wheel\"); } }); } }","title":"\u4ee3\u7801"},{"location":"design_pattern/visitor.html#_4","text":"\u5c01\u88c5\u53d8\u4e0e\u4e0d\u53d8 ElementVisitor \u8981\u4fee\u6539\uff0c\u8fdd\u53cd\u5f00\u95ed\u539f\u5219 \u6dfb\u52a0\u65b0\u7684ElementVisitor\u5b9e\u73b0\u7c7b\uff0c\u53ef\u6dfb\u52a0\u65b0\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219","title":"\u603b\u7ed3"},{"location":"design_pattern/visitor.html#_5","text":"net.sf.jsqlparser.statement.select.FromItem","title":"\u53c2\u8003"},{"location":"elasticsearch/index.html","text":"Elasticsearch \u4e3b\u8981\u4ef7\u503c \u5168\u6587\u68c0\u7d22 docker-compose\u5feb\u901f\u4e0a\u624b version: '3.3' services: elasticsearch: image: elasticsearch:7.8.0 container_name: elasticsearch restart: always ports: - 9200:9200 environment: discovery.type: single-node TZ: Asia/Shanghai #volumes: # - ./elasticsearch/logs:/usr/share/elasticsearch/logs # - ./elasticsearch/data:/usr/share/elasticsearch/data # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml ulimits: memlock: soft: -1 hard: -1 Elasticsearch\u67b6\u6784 \u5199\u4e00\u81f4\u6027 one\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u53ea\u8981\u6709\u4e00\u4e2aprimary shard\u662factive\u6d3b\u8dc3\u53ef\u7528\u7684\uff0c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u6267\u884c\u3002 all\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u8981\u6c42\u5fc5\u987b\u6240\u6709\u7684primary shard\u548creplica shard\u90fd\u662f\u6d3b\u8dc3\u7684\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u8fd9\u4e2a\u5199\u64cd\u4f5c\u3002 quorum\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u5199\u4e4b\u524d\u5fc5\u987b\u786e\u4fdd\u5927\u591a\u6570\uff08 (primary + number_of_replicas) / 2 + 1 \uff09shard\u90fd\u53ef\u7528\uff0c\u5f53\u4e0d\u6ee1\u8db3\u201c\u5927\u591a\u6570\u201d\u8fd9\u4e2a\u6761\u4ef6\u65f6\uff0c\u53ef\u8bbe\u7f6etimeout\u3002 \u8def\u7531 \u5199 \u901a\u8fc7 hash(document_id)%num_of_primary_shards\u51b3\u5b9a\u5199\u5230\u7279\u5b9ashard\u3002 client\u53ef\u80fd\u8bf7\u6c42\u81f3\u968f\u673aprimary shard\uff0c\u8be5shard\u4e3acoordinate shard\uff0c\u4ee3\u7406\u8bf7\u6c42\u3002 \u8bfb \u4e0e\u5199\u7c7b\u4f3c\uff0c\u4e0d\u8fc7replica shard\u53ef\u63d0\u4f9b\u8bfb\u80fd\u529b\u3002 \u5e76\u53d1 Elasticsearch\u5185\u90e8\u91c7\u7528\u4e86\u7248\u672c\u53f7\u673a\u5236\u5bf9document\u7684\u5e76\u53d1\u4fee\u6539\u8fdb\u884c\u63a7\u5236 \u3002\u6240\u8c13\u7248\u672c\u53f7\uff0c\u672c\u8d28\u662f\u4e00\u79cd\u4e50\u89c2\u9501\u3002 \u5012\u6392\u7d22\u5f15 \u5047\u8bbe\u6211\u4eec\u5411\u67d0\u4e2a\u7d22\u5f15\u91cc\u5199\u5165\u4e86\u4e0b\u9762\u4e24\u6761document\uff1a The quick brown fox jumped over the lazy dog Quick brown foxes leap over lazy dogs in summer Term Doc_1 Doc_2 Quick X The X brown X X \u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u60f3\u641c\u7d22 quick brown \uff0c\u6211\u4eec\u53ea\u9700\u8981\u67e5\u627e\u5305\u542b\u6bcf\u4e2a\u8bcd\u6761\u7684\u6587\u6863\uff1a Term Doc_1 Doc_2 Quick X brown X X Total 2 1 \u4e24\u4e2a\u6587\u6863\u90fd\u5339\u914d\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\u6587\u6863\u6bd4\u7b2c\u4e8c\u4e2a\u5339\u914d\u5ea6\u66f4\u9ad8\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4ec5\u8ba1\u7b97\u5339\u914d\u8bcd\u6761\u6570\u91cf\u7684\u7b80\u5355 \u76f8\u4f3c\u6027\u7b97\u6cd5 \uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u5bf9\u4e8e\u6211\u4eec\u67e5\u8be2\u7684\u76f8\u5173\u6027\u6765\u8bb2\uff0c\u7b2c\u4e00\u4e2a\u6587\u6863\u6bd4\u7b2c\u4e8c\u4e2a\u6587\u6863\u66f4\u4f73\u3002","title":"Elasticsearch"},{"location":"elasticsearch/index.html#elasticsearch","text":"","title":"Elasticsearch"},{"location":"elasticsearch/index.html#_1","text":"\u5168\u6587\u68c0\u7d22","title":"\u4e3b\u8981\u4ef7\u503c"},{"location":"elasticsearch/index.html#docker-compose","text":"version: '3.3' services: elasticsearch: image: elasticsearch:7.8.0 container_name: elasticsearch restart: always ports: - 9200:9200 environment: discovery.type: single-node TZ: Asia/Shanghai #volumes: # - ./elasticsearch/logs:/usr/share/elasticsearch/logs # - ./elasticsearch/data:/usr/share/elasticsearch/data # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml ulimits: memlock: soft: -1 hard: -1","title":"docker-compose\u5feb\u901f\u4e0a\u624b"},{"location":"elasticsearch/index.html#elasticsearch_1","text":"","title":"Elasticsearch\u67b6\u6784"},{"location":"elasticsearch/index.html#_2","text":"one\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u53ea\u8981\u6709\u4e00\u4e2aprimary shard\u662factive\u6d3b\u8dc3\u53ef\u7528\u7684\uff0c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u6267\u884c\u3002 all\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u8981\u6c42\u5fc5\u987b\u6240\u6709\u7684primary shard\u548creplica shard\u90fd\u662f\u6d3b\u8dc3\u7684\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u8fd9\u4e2a\u5199\u64cd\u4f5c\u3002 quorum\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u4e8edocument\u7684\u5199\u64cd\u4f5c\uff08\u589e\u5220\u6539\uff09\uff0c\u5199\u4e4b\u524d\u5fc5\u987b\u786e\u4fdd\u5927\u591a\u6570\uff08 (primary + number_of_replicas) / 2 + 1 \uff09shard\u90fd\u53ef\u7528\uff0c\u5f53\u4e0d\u6ee1\u8db3\u201c\u5927\u591a\u6570\u201d\u8fd9\u4e2a\u6761\u4ef6\u65f6\uff0c\u53ef\u8bbe\u7f6etimeout\u3002","title":"\u5199\u4e00\u81f4\u6027"},{"location":"elasticsearch/index.html#_3","text":"","title":"\u8def\u7531"},{"location":"elasticsearch/index.html#_4","text":"\u901a\u8fc7 hash(document_id)%num_of_primary_shards\u51b3\u5b9a\u5199\u5230\u7279\u5b9ashard\u3002 client\u53ef\u80fd\u8bf7\u6c42\u81f3\u968f\u673aprimary shard\uff0c\u8be5shard\u4e3acoordinate shard\uff0c\u4ee3\u7406\u8bf7\u6c42\u3002","title":"\u5199"},{"location":"elasticsearch/index.html#_5","text":"\u4e0e\u5199\u7c7b\u4f3c\uff0c\u4e0d\u8fc7replica shard\u53ef\u63d0\u4f9b\u8bfb\u80fd\u529b\u3002","title":"\u8bfb"},{"location":"elasticsearch/index.html#_6","text":"Elasticsearch\u5185\u90e8\u91c7\u7528\u4e86\u7248\u672c\u53f7\u673a\u5236\u5bf9document\u7684\u5e76\u53d1\u4fee\u6539\u8fdb\u884c\u63a7\u5236 \u3002\u6240\u8c13\u7248\u672c\u53f7\uff0c\u672c\u8d28\u662f\u4e00\u79cd\u4e50\u89c2\u9501\u3002","title":"\u5e76\u53d1"},{"location":"elasticsearch/index.html#_7","text":"\u5047\u8bbe\u6211\u4eec\u5411\u67d0\u4e2a\u7d22\u5f15\u91cc\u5199\u5165\u4e86\u4e0b\u9762\u4e24\u6761document\uff1a The quick brown fox jumped over the lazy dog Quick brown foxes leap over lazy dogs in summer Term Doc_1 Doc_2 Quick X The X brown X X \u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u60f3\u641c\u7d22 quick brown \uff0c\u6211\u4eec\u53ea\u9700\u8981\u67e5\u627e\u5305\u542b\u6bcf\u4e2a\u8bcd\u6761\u7684\u6587\u6863\uff1a Term Doc_1 Doc_2 Quick X brown X X Total 2 1 \u4e24\u4e2a\u6587\u6863\u90fd\u5339\u914d\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\u6587\u6863\u6bd4\u7b2c\u4e8c\u4e2a\u5339\u914d\u5ea6\u66f4\u9ad8\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4ec5\u8ba1\u7b97\u5339\u914d\u8bcd\u6761\u6570\u91cf\u7684\u7b80\u5355 \u76f8\u4f3c\u6027\u7b97\u6cd5 \uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u5bf9\u4e8e\u6211\u4eec\u67e5\u8be2\u7684\u76f8\u5173\u6027\u6765\u8bb2\uff0c\u7b2c\u4e00\u4e2a\u6587\u6863\u6bd4\u7b2c\u4e8c\u4e2a\u6587\u6863\u66f4\u4f73\u3002","title":"\u5012\u6392\u7d22\u5f15"},{"location":"jvm/class_loader.html","text":"class Loader \u53cc\u4eb2\u59d4\u6d3e \u9012\u5f52\u8c03\u7528\u7236\u7c7b\u7c7b\u52a0\u8f7d\u5668\uff0c\u82e5\u672a\u52a0\u8f7d\uff0c\u5219\u81ea\u5df1\u52a0\u8f7d\u3002 \u4f5c\u7528\uff1a \u4fdd\u8bc1\u4e86JVM\u63d0\u4f9b\u7684\u6838\u5fc3\u7c7b\u4e0d\u88ab\u7be1\u6539\uff0c\u4fdd\u8bc1class\u6267\u884c\u5b89\u5168 \u9632\u6b62\u91cd\u590d\u52a0\u8f7d\u540c\u4e00\u4e2aclass \u52a0\u8f7d\u6d41\u7a0b","title":"Class Loader"},{"location":"jvm/class_loader.html#class-loader","text":"","title":"class Loader"},{"location":"jvm/class_loader.html#_1","text":"\u9012\u5f52\u8c03\u7528\u7236\u7c7b\u7c7b\u52a0\u8f7d\u5668\uff0c\u82e5\u672a\u52a0\u8f7d\uff0c\u5219\u81ea\u5df1\u52a0\u8f7d\u3002 \u4f5c\u7528\uff1a \u4fdd\u8bc1\u4e86JVM\u63d0\u4f9b\u7684\u6838\u5fc3\u7c7b\u4e0d\u88ab\u7be1\u6539\uff0c\u4fdd\u8bc1class\u6267\u884c\u5b89\u5168 \u9632\u6b62\u91cd\u590d\u52a0\u8f7d\u540c\u4e00\u4e2aclass","title":"\u53cc\u4eb2\u59d4\u6d3e"},{"location":"jvm/class_loader.html#_2","text":"","title":"\u52a0\u8f7d\u6d41\u7a0b"},{"location":"jvm/gc.html","text":"GC \u7406\u8bba \u5783\u573e\u5b9a\u4f4d \u53ef\u8fbe\u6027\u7b97\u6cd5 GC ROOT \u865a\u62df\u673a\u6808\uff08\u6808\u5e27\u4e2d\u7684\u672c\u5730\u53d8\u91cf\u8868\uff09\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u7c7b\u9759\u6001\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d JNI\uff08\u5373\u4e00\u822c\u8bf4\u7684 Native \u65b9\u6cd5\uff09\u5f15\u7528\u7684\u5bf9\u8c61 \u56de\u6536\u7b97\u6cd5 \u590d\u5236\uff08Copy\uff09 \u4f18\u70b9\uff1a\u65e0\u5185\u5b58\u788e\u7247 \u7f3a\u70b9\uff1a\u901f\u5ea6\u582a\u5fe7\uff1b\u6d6a\u8d39\u5185\u5b58 \u6807\u8bb0\u6e05\u9664\uff08Mark Sweep\uff09 \u4f18\u70b9\uff1a\u901f\u5ea6\u5feb \u7f3a\u70b9\uff1a\u5185\u5b58\u788e\u7247 \u6807\u8bb0\u6574\u7406\uff08Mark Compact\uff09 \u4f18\u70b9\uff1a\u65e0\u5185\u5b58\u788e\u7247 \u7f3a\u70b9\uff1a\u901f\u5ea6\u6162 \u5206\u4ee3\u6536\u96c6\u7b97\u6cd5 \u7efc\u5408 \u590d\u5236 \u3001 \u6807\u8bb0\u6e05\u9664 \u3001 \u6807\u8bb0\u6574\u7406 \u7b97\u6cd5\u5404\u81ea\u4f18\u70b9\uff0c\u6839\u636e\u5bf9\u8c61 \u751f\u547d\u5468\u671f \u7279\u70b9\u91c7\u7528\u4e0d\u540c\u7b97\u6cd5\u3002 \u65b0\u751f\u4ee3: Eden:S0:S1 \u9ed8\u8ba4 8:1:1 \uff0c\u91c7\u7528 \u590d\u5236 \u7b97\u6cd5\u3002 \u5f53\u65b0\u751f\u4ee3\u5c06\u6ee1\u65f6\uff0c\u89e6\u53d1 Minor GC \uff0c\u53ea\u6709\u5f88\u5c11\u5bf9\u8c61\u5b58\u6d3b\uff0c\u590d\u5236\u5230s1,\u5bf9\u8c61\u5e74\u9f84+1\uff0c \u4ea4\u6362s0\u3001s1\u3002 \u5bf9\u8c61\u4f55\u65f6\u664b\u5347\u8001\u5e74\u4ee3\uff1f \u5f53\u5bf9\u8c61\u7684\u5e74\u9f84\u8fbe\u5230\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684\u9608\u503c\uff08\u9ed8\u8ba415\uff09\uff0c\u5219\u4f1a\u4eceS0\uff08\u6216S1\uff09\u664b\u5347\u5230\u8001\u5e74\u4ee3 \u5927\u5bf9\u8c61\uff0c\u5f53\u67d0\u4e2a\u5bf9\u8c61\u5206\u914d\u9700\u8981\u5927\u91cf\u7684\u8fde\u7eed\u5185\u5b58\u65f6\uff0c\u4f1a\u76f4\u63a5\u5206\u914d\u5728\u8001\u5e74\u4ee3\uff0c\u51cf\u5c11minor gc\u5f00\u9500\u3002 \u5728 S0\uff08\u6216S1\uff09 \u533a\u76f8\u540c\u5e74\u9f84\u7684\u5bf9\u8c61\u5927\u5c0f\u4e4b\u548c\u5927\u4e8e S0\uff08\u6216S1\uff09\u7a7a\u95f4\u4e00\u534a\u4ee5\u4e0a\u65f6\uff0c\u5219\u5e74\u9f84\u5927\u4e8e\u7b49\u4e8e\u8be5\u5e74\u9f84\u7684\u5bf9\u8c61\u4e5f\u4f1a\u664b\u5347\u5230\u8001\u5e74\u4ee3\u3002 \u5b9e\u73b0 \u65b0\u751f\u4ee3\uff1aSerial, ParNew, ParallelScavenge \u8001\u5e74\u4ee3\uff1aCMS\uff0cSerial Old, Parallel Old \u65b0\u8001\u751f\u4ee3\uff1aG1 Serial \u5355\u7ebf\u7a0b\uff0cclient\u6a21\u5f0f\u4f7f\u7528\u3002 ParNew \u591a\u7ebf\u7a0b\uff0c\u4e0e Serial \u5171\u7528\u4e00\u5957\u4ee3\u7801\u3002 ParallelScavenge \u591a\u7ebf\u7a0b\u3002 \u63d0\u4f9b\u4e86\u53c2\u6570\u6765\u7cbe\u786e\u63a7\u5236\u541e\u5410\u91cf\uff1a \u63a7\u5236\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u7684 -XX:MaxGCPauseMillis \u8bbe\u7f6e\u541e\u5410\u91cf\u5927\u5c0f\u7684 -XX:GCTimeRatio\uff08\u9ed8\u8ba499%\uff09 \u81ea\u9002\u5e94\u7b56\u7565\uff1aXX:UseAdaptiveSizePolicy\uff0c\u5f00\u542f\u8fd9\u4e2a\u53c2\u6570\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u624b\u5de5\u6307\u5b9a\u65b0\u751f\u4ee3\u5927\u5c0f,Eden \u4e0e Survivor \u6bd4\u4f8b\uff08SurvivorRatio\uff09\u7b49\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u597d\u57fa\u672c\u7684\u5806\u5927\u5c0f\uff08-Xmx \u8bbe\u7f6e\u6700\u5927\u5806\uff09,\u4ee5\u53ca\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u4e0e\u541e\u5410\u91cf\u5927\u5c0f\uff0c\u865a\u62df\u673a\u5c31\u4f1a\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd0\u884c\u60c5\u51b5\u6536\u96c6\u76d1\u63a7\u4fe1\u606f\uff0c\u52a8\u6001\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u4ee5\u5c3d\u53ef\u80fd\u5730\u8fbe\u5230\u6211\u4eec\u8bbe\u5b9a\u7684\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u6216\u541e\u5410\u91cf\u5927\u5c0f\u8fd9\u4e24\u4e2a\u6307\u6807\u3002 Serial Old \u5355\u7ebf\u7a0b\uff0cclient\u6a21\u5f0f\u4f7f\u7528\u3002 Parallel Old \u591a\u7ebf\u7a0b\uff0c\u6807\u8bb0\u6574\u7406, \u76f8\u5bf9\u4e8e Parallel Scavenge \u6536\u96c6\u5668\u7684\u8001\u5e74\u4ee3\u7248\u672c\uff0c\u4ed6\u4eec\u90fd\u662f\u4e3a\u4e86 \u541e\u5410\u91cf\u4f18\u5148 \u3002 CMS \u591a\u7ebf\u7a0b\uff0c\u4ee5\u5b9e\u73b0 \u6700\u77ed STW \u65f6\u95f4 \u4e3a\u76ee\u6807\u7684\u6536\u96c6\u5668 G1\uff08Garbage First\uff09 //todo","title":"GC"},{"location":"jvm/gc.html#gc","text":"","title":"GC"},{"location":"jvm/gc.html#_1","text":"","title":"\u7406\u8bba"},{"location":"jvm/gc.html#_2","text":"\u53ef\u8fbe\u6027\u7b97\u6cd5","title":"\u5783\u573e\u5b9a\u4f4d"},{"location":"jvm/gc.html#gc-root","text":"\u865a\u62df\u673a\u6808\uff08\u6808\u5e27\u4e2d\u7684\u672c\u5730\u53d8\u91cf\u8868\uff09\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u7c7b\u9759\u6001\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61 \u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61 \u672c\u5730\u65b9\u6cd5\u6808\u4e2d JNI\uff08\u5373\u4e00\u822c\u8bf4\u7684 Native \u65b9\u6cd5\uff09\u5f15\u7528\u7684\u5bf9\u8c61","title":"GC ROOT"},{"location":"jvm/gc.html#_3","text":"","title":"\u56de\u6536\u7b97\u6cd5"},{"location":"jvm/gc.html#copy","text":"\u4f18\u70b9\uff1a\u65e0\u5185\u5b58\u788e\u7247 \u7f3a\u70b9\uff1a\u901f\u5ea6\u582a\u5fe7\uff1b\u6d6a\u8d39\u5185\u5b58","title":"\u590d\u5236\uff08Copy\uff09"},{"location":"jvm/gc.html#mark-sweep","text":"\u4f18\u70b9\uff1a\u901f\u5ea6\u5feb \u7f3a\u70b9\uff1a\u5185\u5b58\u788e\u7247","title":"\u6807\u8bb0\u6e05\u9664\uff08Mark Sweep\uff09"},{"location":"jvm/gc.html#mark-compact","text":"\u4f18\u70b9\uff1a\u65e0\u5185\u5b58\u788e\u7247 \u7f3a\u70b9\uff1a\u901f\u5ea6\u6162","title":"\u6807\u8bb0\u6574\u7406\uff08Mark Compact\uff09"},{"location":"jvm/gc.html#_4","text":"\u7efc\u5408 \u590d\u5236 \u3001 \u6807\u8bb0\u6e05\u9664 \u3001 \u6807\u8bb0\u6574\u7406 \u7b97\u6cd5\u5404\u81ea\u4f18\u70b9\uff0c\u6839\u636e\u5bf9\u8c61 \u751f\u547d\u5468\u671f \u7279\u70b9\u91c7\u7528\u4e0d\u540c\u7b97\u6cd5\u3002 \u65b0\u751f\u4ee3: Eden:S0:S1 \u9ed8\u8ba4 8:1:1 \uff0c\u91c7\u7528 \u590d\u5236 \u7b97\u6cd5\u3002 \u5f53\u65b0\u751f\u4ee3\u5c06\u6ee1\u65f6\uff0c\u89e6\u53d1 Minor GC \uff0c\u53ea\u6709\u5f88\u5c11\u5bf9\u8c61\u5b58\u6d3b\uff0c\u590d\u5236\u5230s1,\u5bf9\u8c61\u5e74\u9f84+1\uff0c \u4ea4\u6362s0\u3001s1\u3002 \u5bf9\u8c61\u4f55\u65f6\u664b\u5347\u8001\u5e74\u4ee3\uff1f \u5f53\u5bf9\u8c61\u7684\u5e74\u9f84\u8fbe\u5230\u4e86\u6211\u4eec\u8bbe\u5b9a\u7684\u9608\u503c\uff08\u9ed8\u8ba415\uff09\uff0c\u5219\u4f1a\u4eceS0\uff08\u6216S1\uff09\u664b\u5347\u5230\u8001\u5e74\u4ee3 \u5927\u5bf9\u8c61\uff0c\u5f53\u67d0\u4e2a\u5bf9\u8c61\u5206\u914d\u9700\u8981\u5927\u91cf\u7684\u8fde\u7eed\u5185\u5b58\u65f6\uff0c\u4f1a\u76f4\u63a5\u5206\u914d\u5728\u8001\u5e74\u4ee3\uff0c\u51cf\u5c11minor gc\u5f00\u9500\u3002 \u5728 S0\uff08\u6216S1\uff09 \u533a\u76f8\u540c\u5e74\u9f84\u7684\u5bf9\u8c61\u5927\u5c0f\u4e4b\u548c\u5927\u4e8e S0\uff08\u6216S1\uff09\u7a7a\u95f4\u4e00\u534a\u4ee5\u4e0a\u65f6\uff0c\u5219\u5e74\u9f84\u5927\u4e8e\u7b49\u4e8e\u8be5\u5e74\u9f84\u7684\u5bf9\u8c61\u4e5f\u4f1a\u664b\u5347\u5230\u8001\u5e74\u4ee3\u3002","title":"\u5206\u4ee3\u6536\u96c6\u7b97\u6cd5"},{"location":"jvm/gc.html#_5","text":"\u65b0\u751f\u4ee3\uff1aSerial, ParNew, ParallelScavenge \u8001\u5e74\u4ee3\uff1aCMS\uff0cSerial Old, Parallel Old \u65b0\u8001\u751f\u4ee3\uff1aG1","title":"\u5b9e\u73b0"},{"location":"jvm/gc.html#serial","text":"\u5355\u7ebf\u7a0b\uff0cclient\u6a21\u5f0f\u4f7f\u7528\u3002","title":"Serial"},{"location":"jvm/gc.html#parnew","text":"\u591a\u7ebf\u7a0b\uff0c\u4e0e Serial \u5171\u7528\u4e00\u5957\u4ee3\u7801\u3002","title":"ParNew"},{"location":"jvm/gc.html#parallelscavenge","text":"\u591a\u7ebf\u7a0b\u3002 \u63d0\u4f9b\u4e86\u53c2\u6570\u6765\u7cbe\u786e\u63a7\u5236\u541e\u5410\u91cf\uff1a \u63a7\u5236\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u7684 -XX:MaxGCPauseMillis \u8bbe\u7f6e\u541e\u5410\u91cf\u5927\u5c0f\u7684 -XX:GCTimeRatio\uff08\u9ed8\u8ba499%\uff09 \u81ea\u9002\u5e94\u7b56\u7565\uff1aXX:UseAdaptiveSizePolicy\uff0c\u5f00\u542f\u8fd9\u4e2a\u53c2\u6570\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u624b\u5de5\u6307\u5b9a\u65b0\u751f\u4ee3\u5927\u5c0f,Eden \u4e0e Survivor \u6bd4\u4f8b\uff08SurvivorRatio\uff09\u7b49\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e\u597d\u57fa\u672c\u7684\u5806\u5927\u5c0f\uff08-Xmx \u8bbe\u7f6e\u6700\u5927\u5806\uff09,\u4ee5\u53ca\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u4e0e\u541e\u5410\u91cf\u5927\u5c0f\uff0c\u865a\u62df\u673a\u5c31\u4f1a\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd0\u884c\u60c5\u51b5\u6536\u96c6\u76d1\u63a7\u4fe1\u606f\uff0c\u52a8\u6001\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u4ee5\u5c3d\u53ef\u80fd\u5730\u8fbe\u5230\u6211\u4eec\u8bbe\u5b9a\u7684\u6700\u5927\u5783\u573e\u6536\u96c6\u65f6\u95f4\u6216\u541e\u5410\u91cf\u5927\u5c0f\u8fd9\u4e24\u4e2a\u6307\u6807\u3002","title":"ParallelScavenge"},{"location":"jvm/gc.html#serial-old","text":"\u5355\u7ebf\u7a0b\uff0cclient\u6a21\u5f0f\u4f7f\u7528\u3002","title":"Serial Old"},{"location":"jvm/gc.html#parallel-old","text":"\u591a\u7ebf\u7a0b\uff0c\u6807\u8bb0\u6574\u7406, \u76f8\u5bf9\u4e8e Parallel Scavenge \u6536\u96c6\u5668\u7684\u8001\u5e74\u4ee3\u7248\u672c\uff0c\u4ed6\u4eec\u90fd\u662f\u4e3a\u4e86 \u541e\u5410\u91cf\u4f18\u5148 \u3002","title":"Parallel Old"},{"location":"jvm/gc.html#cms","text":"\u591a\u7ebf\u7a0b\uff0c\u4ee5\u5b9e\u73b0 \u6700\u77ed STW \u65f6\u95f4 \u4e3a\u76ee\u6807\u7684\u6536\u96c6\u5668","title":"CMS"},{"location":"jvm/gc.html#g1garbage-first","text":"//todo","title":"G1\uff08Garbage First\uff09"},{"location":"jvm/memory.html","text":"Memory Hotspot 1.6 Method Area Hotspot 1.8 Method Area","title":"Memory"},{"location":"jvm/memory.html#memory","text":"","title":"Memory"},{"location":"jvm/memory.html#hotspot-16-method-area","text":"","title":"Hotspot 1.6 Method Area"},{"location":"jvm/memory.html#hotspot-18-method-area","text":"","title":"Hotspot 1.8 Method Area"},{"location":"kafka/architecture.html","text":"Architecture \u6027\u80fd \u4e3b\u4eceReactor\u6a21\u578b \u5206\u533a\uff0c\u63d0\u9ad8\u5e76\u53d1\u5ea6 \u987a\u5e8f\u5199 \u96f6\u62f7\u8d1d \u652f\u6301\u591adisk driver \u9875\u7f13\u5b58 \u53ef\u7528\u6027 \u591a\u526f\u672c Leader-follow fail over \u53ef\u6269\u5c55\u6027 Topic\u5206\u7247","title":"Architecture"},{"location":"kafka/architecture.html#architecture","text":"","title":"Architecture"},{"location":"kafka/architecture.html#_1","text":"\u4e3b\u4eceReactor\u6a21\u578b \u5206\u533a\uff0c\u63d0\u9ad8\u5e76\u53d1\u5ea6 \u987a\u5e8f\u5199 \u96f6\u62f7\u8d1d \u652f\u6301\u591adisk driver \u9875\u7f13\u5b58","title":"\u6027\u80fd"},{"location":"kafka/architecture.html#_2","text":"\u591a\u526f\u672c Leader-follow fail over","title":"\u53ef\u7528\u6027"},{"location":"kafka/architecture.html#_3","text":"Topic\u5206\u7247","title":"\u53ef\u6269\u5c55\u6027"},{"location":"kafka/semantics.html","text":"Semantics Producer At most once request.required.acks=0 At least once Kafka\u9ed8\u8ba4 request.required.acks=1 At exactly once enable.idempotence=true \u539f\u7406\uff1a Producer\u4f1a\u4e3a\u6bcf\u4e00\u4e2a topic,partition \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684seq\u3002 Broker\u4e5f\u4f1a\u4e3a\u6bcf\u4e2a pid,topic,partition \u8bb0\u5f55\u4e0b\u6700\u65b0\u7684seq\u3002 \u5f53req_seq == message_seq+1\u65f6\uff0cMessage Queue\u624d\u4f1a\u63a5\u53d7\u8be5\u6d88\u606f\u3002\u56e0\u4e3a\uff1a \u6d88\u606f\u7684seq\u6bd4Message Queue\u7684seq\u5927\u4e00\u4ee5\u4e0a\uff0c\u8bf4\u660e\u4e2d\u95f4\u6709\u6570\u636e\u8fd8\u6ca1\u5199\u5165\uff0c\u5373\u4e71\u5e8f\u4e86\u3002 \u6d88\u606f\u7684seq\u6bd4Message Queue\u7684seq\u5c0f\uff0c\u90a3\u4e48\u8bf4\u660e\u8be5\u6d88\u606f\u5df2\u88ab\u4fdd\u5b58\u3002 Consumer At most once consumer\u76f4\u63a5\u786e\u8ba4\uff0c\u4e0d\u7ba1\u6d88\u606f\u662f\u5426\u5904\u7406 consumer.poll(); consumer.commit(); processMsg(message); At least once consumer.poll(); processMsg(message); consumer.commit(); \u4f1a\u51fa\u73b0\u91cd\u590d\u6d88\u606f At exactly once \u5728 At least once \u57fa\u7840\u4e0a\uff0c processMsg(message); \u5e42\u7b49\u5904\u7406\u5373\u53ef","title":"Semantics"},{"location":"kafka/semantics.html#semantics","text":"","title":"Semantics"},{"location":"kafka/semantics.html#producer","text":"","title":"Producer"},{"location":"kafka/semantics.html#at-most-once","text":"request.required.acks=0","title":"At most once"},{"location":"kafka/semantics.html#at-least-once","text":"Kafka\u9ed8\u8ba4 request.required.acks=1","title":"At least once"},{"location":"kafka/semantics.html#at-exactly-once","text":"enable.idempotence=true \u539f\u7406\uff1a Producer\u4f1a\u4e3a\u6bcf\u4e00\u4e2a topic,partition \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684seq\u3002 Broker\u4e5f\u4f1a\u4e3a\u6bcf\u4e2a pid,topic,partition \u8bb0\u5f55\u4e0b\u6700\u65b0\u7684seq\u3002 \u5f53req_seq == message_seq+1\u65f6\uff0cMessage Queue\u624d\u4f1a\u63a5\u53d7\u8be5\u6d88\u606f\u3002\u56e0\u4e3a\uff1a \u6d88\u606f\u7684seq\u6bd4Message Queue\u7684seq\u5927\u4e00\u4ee5\u4e0a\uff0c\u8bf4\u660e\u4e2d\u95f4\u6709\u6570\u636e\u8fd8\u6ca1\u5199\u5165\uff0c\u5373\u4e71\u5e8f\u4e86\u3002 \u6d88\u606f\u7684seq\u6bd4Message Queue\u7684seq\u5c0f\uff0c\u90a3\u4e48\u8bf4\u660e\u8be5\u6d88\u606f\u5df2\u88ab\u4fdd\u5b58\u3002","title":"At exactly once"},{"location":"kafka/semantics.html#consumer","text":"","title":"Consumer"},{"location":"kafka/semantics.html#at-most-once_1","text":"consumer\u76f4\u63a5\u786e\u8ba4\uff0c\u4e0d\u7ba1\u6d88\u606f\u662f\u5426\u5904\u7406 consumer.poll(); consumer.commit(); processMsg(message);","title":"At most once"},{"location":"kafka/semantics.html#at-least-once_1","text":"consumer.poll(); processMsg(message); consumer.commit(); \u4f1a\u51fa\u73b0\u91cd\u590d\u6d88\u606f","title":"At least once"},{"location":"kafka/semantics.html#at-exactly-once_1","text":"\u5728 At least once \u57fa\u7840\u4e0a\uff0c processMsg(message); \u5e42\u7b49\u5904\u7406\u5373\u53ef","title":"At exactly once"},{"location":"misc/%E5%84%92%E9%87%8A%E9%81%93.html","text":"\u5112 \u5112\u5b66\u4ee5\u4ec1\u4e49\u793c\u667a\u4fe1\u4e3a\u4e2d\u5fc3\uff0c\u5b54\u5b50\u6b7b\u4e86\u4ee5\u540e\uff0c\u4ed6\u7684\u5f1f\u5b50\u4eec\u6839\u636e\u8001\u5e08\u751f\u524d\u7684\u8bed\u5f55\uff0c\u7f16\u64b0\u4e86\u300a\u8bba\u8bed\u300b\uff0c\u5f00\u521b\u4e86\u5112\u5bb6\u5b66\u6d3e\u3002\u4ec1\u7231\u662f\u8fd9\u4e2a\u5b66\u8bf4\u7684\u7cbe\u9ad3\u3002 \u5f3a\u8c03\u4fee\u8eab\u9f50\u5bb6\u4e4b\u56fd\u5e73\u5929\u4e0b\uff0c\u4ec1\u793c\u5b89\u90a6\uff0c\u4e09\u7eb2\u4e94\u5e38\u7b49\u3002\u5112\u5bb6\u8bb2\u4e2d\u5eb8\uff0c\u5b54\u5b50\u6700\u770b\u91cd\u5bbd\u6055\u3001\u4ec1\u7231\u3001\u793c\u5c1a\u5f80\u6765\u7b49\u3002 \u5112\u5bb6\u7684\u7cbe\u795e\u8bb2\u7a76\u201c\u62ff\u5f97\u8d77\u201d\uff0c \u4e3b\u5f20\u7acb\u5fb7\u3001\u7acb\u529f\u3001\u7acb\u8a00\u3001\u5e72\u4e8b\u3001\u79ef\u6781\u6709\u4e3a\u3002\u5112\u5bb6\u8bb2\u7a76\u9759\u5fc3\u4fee\u70bc\u3001\u4fee\u5fc3\u517b\u6027\u3002\u9759\u5fc3\uff0c\u5b81\u9759\u4ee5\u81f4\u8fdc\u3002\u5112\u5bb6\u8981\u6211\u4eec\u627f\u62c5\u91cd\u4efb\uff0c\u800c\u9053\u5bb6\u8981\u6211\u4eec\u4e3e\u91cd\u82e5\u8f7b\u3002 \u91ca \u4f5b\u5bb6\u5206\u4e3a\u4e24\u7c7b\uff1a\u5c0f\u4e58\u4f5b\u6cd5\u8bb2\u7a76\u201c\u51fa\u4e16\u201d\uff0c\u5927\u4e58\u4f5b\u6559\u8bb2\u7a76\u201c\u5165\u4e16\u201d\uff0c\u6cd5\u95e8\u4e0d\u540c\u4fee\u4e3a\u4e0d\u540c\uff0c\u4f46\u591a\u662f\u6b8a\u9014\u540c\u5f52!\u4f5b\u5bb6\u7684\u7cbe\u9ad3\u662f\u201c\u56e0\u7f18\u201d\uff0c\u5373\u56e0\u679c\u3001\u62a5\u5e94\u3002 \u4f5b\u5bb6\u7cbe\u795e\u662f\u201c\u653e\u5f97\u4e0b\u201d\u3002\u770b\u7834\uff0c\u653e\u4e0b\u3002\u7528\u4e00\u4e2a\u5b57\u6765\u8bf4\uff0c\u5c31\u662f\u7a7a\u3002\u6240\u8c13\u201c\u51e1\u6240\u6709\u50cf\uff0c\u7686\u662f\u865a\u5984\u3002\u201d\u4f5b\u5bb6\u5021\u5bfc\uff1a\u65e2\u51fa\u4e16\uff0c\u4e5f\u5165\u4e16\u3002\u5165\u4e16\uff0c\u4e3a\u4e86\u633d\u6551\u4f17\u751f\uff0c \u51fa\u4e16\u5219\u662f\u6559\u4e00\u5207\u4f17\u751f\uff0c\u8ba4\u8bc6\u751f\u547d\u5b87\u5b99\u7684\u771f\u8c1b\uff0c\u8131\u79bb\u82e6\u6d77\uff0c\u5230\u8fbe\u5f7c\u5cb8\u3002 \u9053 \u9053\u5bb6\u7528\u6734\u7d20\u7684\u9634\u9633\u89c2\u770b\u5f85\u4e16\u754c\uff0c\u63d0\u5021\u201c\u65e0\u4e3a\u800c\u6cbb\u201d\uff0c\u5f3a\u8c03\u201c\u60f3\u5f97\u5f00\u201d\u3002\u4e3b\u5f20\u5b81\u9759\u3001\u6de1\u6cca\u3001\u5f20\u5f1b\u6709\u5ea6\uff0c\u76f8\u4e92\u914d\u5408\uff0c\u5404\u5f97\u5176\u6240\u3002 \u5021\u5bfc\uff1a\u201c\u5929\u6709\u5929\u9053\u3001\u5730\u6709\u5730\u7406\u3001\u4eba\u6709\u4eba\u8bba\u3001\u7269\u6709\u7269\u6027\u201d\u7684\u6cd5\u5219\uff0c\u5c31\u662f\u8bf4\uff1a\u201c\u6709\u5929\u9053\uff0c\u65e5\u6708\u661f\u8fb0\u662f\u8fd0\u52a8\u7684\uff0c\u6709\u5730\u7406\uff0c\u5c71\u6cb3\u6c5f\u6d77\u662f\u53ef\u5faa\u73af\u7684\uff0c \u6709\u4eba\u4f26\uff0c\u5c31\u8981\u6709\u5c0a\u5351\u548c\u957f\u5e7c\u3002","title":"\u5112\u91ca\u9053"},{"location":"misc/%E5%84%92%E9%87%8A%E9%81%93.html#_1","text":"\u5112\u5b66\u4ee5\u4ec1\u4e49\u793c\u667a\u4fe1\u4e3a\u4e2d\u5fc3\uff0c\u5b54\u5b50\u6b7b\u4e86\u4ee5\u540e\uff0c\u4ed6\u7684\u5f1f\u5b50\u4eec\u6839\u636e\u8001\u5e08\u751f\u524d\u7684\u8bed\u5f55\uff0c\u7f16\u64b0\u4e86\u300a\u8bba\u8bed\u300b\uff0c\u5f00\u521b\u4e86\u5112\u5bb6\u5b66\u6d3e\u3002\u4ec1\u7231\u662f\u8fd9\u4e2a\u5b66\u8bf4\u7684\u7cbe\u9ad3\u3002 \u5f3a\u8c03\u4fee\u8eab\u9f50\u5bb6\u4e4b\u56fd\u5e73\u5929\u4e0b\uff0c\u4ec1\u793c\u5b89\u90a6\uff0c\u4e09\u7eb2\u4e94\u5e38\u7b49\u3002\u5112\u5bb6\u8bb2\u4e2d\u5eb8\uff0c\u5b54\u5b50\u6700\u770b\u91cd\u5bbd\u6055\u3001\u4ec1\u7231\u3001\u793c\u5c1a\u5f80\u6765\u7b49\u3002 \u5112\u5bb6\u7684\u7cbe\u795e\u8bb2\u7a76\u201c\u62ff\u5f97\u8d77\u201d\uff0c \u4e3b\u5f20\u7acb\u5fb7\u3001\u7acb\u529f\u3001\u7acb\u8a00\u3001\u5e72\u4e8b\u3001\u79ef\u6781\u6709\u4e3a\u3002\u5112\u5bb6\u8bb2\u7a76\u9759\u5fc3\u4fee\u70bc\u3001\u4fee\u5fc3\u517b\u6027\u3002\u9759\u5fc3\uff0c\u5b81\u9759\u4ee5\u81f4\u8fdc\u3002\u5112\u5bb6\u8981\u6211\u4eec\u627f\u62c5\u91cd\u4efb\uff0c\u800c\u9053\u5bb6\u8981\u6211\u4eec\u4e3e\u91cd\u82e5\u8f7b\u3002","title":"\u5112"},{"location":"misc/%E5%84%92%E9%87%8A%E9%81%93.html#_2","text":"\u4f5b\u5bb6\u5206\u4e3a\u4e24\u7c7b\uff1a\u5c0f\u4e58\u4f5b\u6cd5\u8bb2\u7a76\u201c\u51fa\u4e16\u201d\uff0c\u5927\u4e58\u4f5b\u6559\u8bb2\u7a76\u201c\u5165\u4e16\u201d\uff0c\u6cd5\u95e8\u4e0d\u540c\u4fee\u4e3a\u4e0d\u540c\uff0c\u4f46\u591a\u662f\u6b8a\u9014\u540c\u5f52!\u4f5b\u5bb6\u7684\u7cbe\u9ad3\u662f\u201c\u56e0\u7f18\u201d\uff0c\u5373\u56e0\u679c\u3001\u62a5\u5e94\u3002 \u4f5b\u5bb6\u7cbe\u795e\u662f\u201c\u653e\u5f97\u4e0b\u201d\u3002\u770b\u7834\uff0c\u653e\u4e0b\u3002\u7528\u4e00\u4e2a\u5b57\u6765\u8bf4\uff0c\u5c31\u662f\u7a7a\u3002\u6240\u8c13\u201c\u51e1\u6240\u6709\u50cf\uff0c\u7686\u662f\u865a\u5984\u3002\u201d\u4f5b\u5bb6\u5021\u5bfc\uff1a\u65e2\u51fa\u4e16\uff0c\u4e5f\u5165\u4e16\u3002\u5165\u4e16\uff0c\u4e3a\u4e86\u633d\u6551\u4f17\u751f\uff0c \u51fa\u4e16\u5219\u662f\u6559\u4e00\u5207\u4f17\u751f\uff0c\u8ba4\u8bc6\u751f\u547d\u5b87\u5b99\u7684\u771f\u8c1b\uff0c\u8131\u79bb\u82e6\u6d77\uff0c\u5230\u8fbe\u5f7c\u5cb8\u3002","title":"\u91ca"},{"location":"misc/%E5%84%92%E9%87%8A%E9%81%93.html#_3","text":"\u9053\u5bb6\u7528\u6734\u7d20\u7684\u9634\u9633\u89c2\u770b\u5f85\u4e16\u754c\uff0c\u63d0\u5021\u201c\u65e0\u4e3a\u800c\u6cbb\u201d\uff0c\u5f3a\u8c03\u201c\u60f3\u5f97\u5f00\u201d\u3002\u4e3b\u5f20\u5b81\u9759\u3001\u6de1\u6cca\u3001\u5f20\u5f1b\u6709\u5ea6\uff0c\u76f8\u4e92\u914d\u5408\uff0c\u5404\u5f97\u5176\u6240\u3002 \u5021\u5bfc\uff1a\u201c\u5929\u6709\u5929\u9053\u3001\u5730\u6709\u5730\u7406\u3001\u4eba\u6709\u4eba\u8bba\u3001\u7269\u6709\u7269\u6027\u201d\u7684\u6cd5\u5219\uff0c\u5c31\u662f\u8bf4\uff1a\u201c\u6709\u5929\u9053\uff0c\u65e5\u6708\u661f\u8fb0\u662f\u8fd0\u52a8\u7684\uff0c\u6709\u5730\u7406\uff0c\u5c71\u6cb3\u6c5f\u6d77\u662f\u53ef\u5faa\u73af\u7684\uff0c \u6709\u4eba\u4f26\uff0c\u5c31\u8981\u6709\u5c0a\u5351\u548c\u957f\u5e7c\u3002","title":"\u9053"},{"location":"mysql/explain.html","text":"Explain","title":"Explain"},{"location":"mysql/explain.html#explain","text":"","title":"Explain"},{"location":"mysql/transaction.html","text":"Transaction(InnoDB) \u6982\u8ff0 \u539f\u5b50\u6027 \u5b9e\u73b0\u539f\u7406\uff1a undo log \u3002\uff08undo log\u5728 MVVC \u4e5f\u6709\u4f5c\u7528\uff09 \u9694\u79bb\u6027 SQL\u6807\u51c6 \u4e2d\u5b9a\u4e49\u4e86\u56db\u79cd\u9694\u79bb\u7ea7\u522b: \u9694\u79bb\u7ea7\u522b \u810f\u8bfb \u4e0d\u53ef\u91cd\u590d\u8bfb \u5e7b\u8bfb Read Uncommitted 1 1 1 Read Committed 0 1 1 Repeatable Read 0 0 1 Serializable 0 0 0 InnoDB\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u662fRR\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728SQL\u6807\u51c6\u4e2d\uff0cRR\u662f\u65e0\u6cd5\u907f\u514d\u5e7b\u8bfb\u95ee\u9898\u7684\uff0c\u4f46\u662fInnoDB\u5b9e\u73b0\u7684RR\u907f\u514d\u4e86\u5e7b\u8bfb\u95ee\u9898\u3002 \u5e76\u53d1 \u9694\u79bb\u6027\u4e8b\u5b9e\u4e0a\u662f\u6570\u636e\u5e93\u5bf9 \u5e76\u53d1 \u89e3\u51b3\u65b9\u6848\u7684\u5c01\u88c5\uff08 STM \u662f\u9501\u673a\u5236\u7684\u66ff\u4ee3\uff09\u3002 Serializable\u9694\u79bb\u7ea7\u522b\u4e0b\u4f7f\u7528 \u8bfb\u5199\u9501 \uff0c \u8bfb\u8bfb\u5e76\u53d1 \uff0c \u8bfb\u5199\u4e92\u65a5 \u3002 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5e76\u53d1\u5ea6\uff0cRepeatable Read\uff0cRead Committed \u9694\u79bb\u7ea7\u522b\u4e0b\u4f7f\u7528 MVVC \u6280\u672f\u5b9e\u73b0 \u8bfb\u5199\u5e76\u53d1 \u3002 MVVC\uff08Multi-Version Concurrency Control\uff09 \u6301\u4e45\u6027 \u5b9e\u73b0\u539f\u7406\uff1a redo log \u3002\u76ee\u7684\uff1a\u968f\u673aio ==> \u987a\u5e8fio \u4e00\u81f4\u6027 \u4e00\u81f4\u6027\u662f\u6307\u4e8b\u52a1\u6267\u884c\u7ed3\u675f\u540e\uff0c\u5b8c\u6574\u6027\u7ea6\u675f\u6ca1\u6709\u88ab\u7834\u574f\uff0c\u4e8b\u52a1\u6267\u884c\u7684\u524d\u540e\u90fd\u662f\u5408\u6cd5\u7684\u6570\u636e\u72b6\u6001\u3002 \u5b8c\u6574\u6027\u7ea6\u675f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u5b9e\u4f53\u5b8c\u6574\u6027 \uff08\u5982\u884c\u7684\u4e3b\u952e\u5b58\u5728\u4e14\u552f\u4e00\uff09\u3001 \u5217\u5b8c\u6574\u6027 \uff08\u5982\u5b57\u6bb5\u7684\u7c7b\u578b\u3001\u5927\u5c0f\u3001\u957f\u5ea6\u8981\u7b26\u5408\u8981\u6c42\uff09\u3001 \u5916\u952e\u7ea6\u675f \u3001 \u7528\u6237\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027 \uff08\u5982\u8f6c\u8d26\u524d\u540e\uff0c\u4e24\u4e2a\u8d26\u6237\u4f59\u989d\u7684\u548c\u5e94\u8be5\u4e0d\u53d8\uff09\u3002 i.e.\uff0c \u4e00\u81f4\u6027\u662f\u4e8b\u52a1\u8ffd\u6c42\u7684\u6700\u7ec8\u76ee\u6807 \uff1a\u539f\u5b50\u6027\u3001\u6301\u4e45\u6027\u548c\u9694\u79bb\u6027\uff0c\u90fd\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5e93\u72b6\u6001\u7684\u4e00\u81f4\u6027\u3002 \u6b64\u5916\uff0c\u9664\u4e86\u6570\u636e\u5e93\u5c42\u9762\u7684\u4fdd\u969c\uff0c\u4e00\u81f4\u6027\u7684\u5b9e\u73b0\u4e5f\u9700\u8981\u5e94\u7528\u5c42\u9762\u8fdb\u884c\u4fdd\u969c\u3002 \u5b9e\u73b0\u4e00\u81f4\u6027\u7684\u63aa\u65bd\u5305\u62ec\uff1a \u4fdd\u8bc1\u539f\u5b50\u6027\u3001\u6301\u4e45\u6027\u548c\u9694\u79bb\u6027\uff0c\u5982\u679c\u8fd9\u4e9b\u7279\u6027\u65e0\u6cd5\u4fdd\u8bc1\uff0c\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u4e5f\u65e0\u6cd5\u4fdd\u8bc1 \u6570\u636e\u5e93\u672c\u8eab\u63d0\u4f9b\u4fdd\u969c\uff0c\u4f8b\u5982\u4e0d\u5141\u8bb8\u5411\u6574\u5f62\u5217\u63d2\u5165\u5b57\u7b26\u4e32\u503c\u3001\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7\u5217\u7684\u9650\u5236\u7b49 \u5e94\u7528\u5c42\u9762\u8fdb\u884c\u4fdd\u969c\uff0c\u4f8b\u5982\u5982\u679c\u8f6c\u8d26\u64cd\u4f5c\u53ea\u6263\u9664\u8f6c\u8d26\u8005\u7684\u4f59\u989d\uff0c\u800c\u6ca1\u6709\u589e\u52a0\u63a5\u6536\u8005\u7684\u4f59\u989d\uff0c\u65e0\u8bba\u6570\u636e\u5e93\u5b9e\u73b0\u7684\u591a\u4e48\u5b8c\u7f8e\uff0c\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u72b6\u6001\u7684\u4e00\u81f4","title":"Transaction"},{"location":"mysql/transaction.html#transactioninnodb","text":"","title":"Transaction(InnoDB)"},{"location":"mysql/transaction.html#_1","text":"","title":"\u6982\u8ff0"},{"location":"mysql/transaction.html#_2","text":"\u5b9e\u73b0\u539f\u7406\uff1a undo log \u3002\uff08undo log\u5728 MVVC \u4e5f\u6709\u4f5c\u7528\uff09","title":"\u539f\u5b50\u6027"},{"location":"mysql/transaction.html#_3","text":"SQL\u6807\u51c6 \u4e2d\u5b9a\u4e49\u4e86\u56db\u79cd\u9694\u79bb\u7ea7\u522b: \u9694\u79bb\u7ea7\u522b \u810f\u8bfb \u4e0d\u53ef\u91cd\u590d\u8bfb \u5e7b\u8bfb Read Uncommitted 1 1 1 Read Committed 0 1 1 Repeatable Read 0 0 1 Serializable 0 0 0 InnoDB\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u662fRR\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728SQL\u6807\u51c6\u4e2d\uff0cRR\u662f\u65e0\u6cd5\u907f\u514d\u5e7b\u8bfb\u95ee\u9898\u7684\uff0c\u4f46\u662fInnoDB\u5b9e\u73b0\u7684RR\u907f\u514d\u4e86\u5e7b\u8bfb\u95ee\u9898\u3002","title":"\u9694\u79bb\u6027"},{"location":"mysql/transaction.html#_4","text":"\u9694\u79bb\u6027\u4e8b\u5b9e\u4e0a\u662f\u6570\u636e\u5e93\u5bf9 \u5e76\u53d1 \u89e3\u51b3\u65b9\u6848\u7684\u5c01\u88c5\uff08 STM \u662f\u9501\u673a\u5236\u7684\u66ff\u4ee3\uff09\u3002 Serializable\u9694\u79bb\u7ea7\u522b\u4e0b\u4f7f\u7528 \u8bfb\u5199\u9501 \uff0c \u8bfb\u8bfb\u5e76\u53d1 \uff0c \u8bfb\u5199\u4e92\u65a5 \u3002 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5e76\u53d1\u5ea6\uff0cRepeatable Read\uff0cRead Committed \u9694\u79bb\u7ea7\u522b\u4e0b\u4f7f\u7528 MVVC \u6280\u672f\u5b9e\u73b0 \u8bfb\u5199\u5e76\u53d1 \u3002","title":"\u5e76\u53d1"},{"location":"mysql/transaction.html#mvvcmulti-version-concurrency-control","text":"","title":"MVVC\uff08Multi-Version Concurrency Control\uff09"},{"location":"mysql/transaction.html#_5","text":"\u5b9e\u73b0\u539f\u7406\uff1a redo log \u3002\u76ee\u7684\uff1a\u968f\u673aio ==> \u987a\u5e8fio","title":"\u6301\u4e45\u6027"},{"location":"mysql/transaction.html#_6","text":"\u4e00\u81f4\u6027\u662f\u6307\u4e8b\u52a1\u6267\u884c\u7ed3\u675f\u540e\uff0c\u5b8c\u6574\u6027\u7ea6\u675f\u6ca1\u6709\u88ab\u7834\u574f\uff0c\u4e8b\u52a1\u6267\u884c\u7684\u524d\u540e\u90fd\u662f\u5408\u6cd5\u7684\u6570\u636e\u72b6\u6001\u3002 \u5b8c\u6574\u6027\u7ea6\u675f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u5b9e\u4f53\u5b8c\u6574\u6027 \uff08\u5982\u884c\u7684\u4e3b\u952e\u5b58\u5728\u4e14\u552f\u4e00\uff09\u3001 \u5217\u5b8c\u6574\u6027 \uff08\u5982\u5b57\u6bb5\u7684\u7c7b\u578b\u3001\u5927\u5c0f\u3001\u957f\u5ea6\u8981\u7b26\u5408\u8981\u6c42\uff09\u3001 \u5916\u952e\u7ea6\u675f \u3001 \u7528\u6237\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027 \uff08\u5982\u8f6c\u8d26\u524d\u540e\uff0c\u4e24\u4e2a\u8d26\u6237\u4f59\u989d\u7684\u548c\u5e94\u8be5\u4e0d\u53d8\uff09\u3002 i.e.\uff0c \u4e00\u81f4\u6027\u662f\u4e8b\u52a1\u8ffd\u6c42\u7684\u6700\u7ec8\u76ee\u6807 \uff1a\u539f\u5b50\u6027\u3001\u6301\u4e45\u6027\u548c\u9694\u79bb\u6027\uff0c\u90fd\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5e93\u72b6\u6001\u7684\u4e00\u81f4\u6027\u3002 \u6b64\u5916\uff0c\u9664\u4e86\u6570\u636e\u5e93\u5c42\u9762\u7684\u4fdd\u969c\uff0c\u4e00\u81f4\u6027\u7684\u5b9e\u73b0\u4e5f\u9700\u8981\u5e94\u7528\u5c42\u9762\u8fdb\u884c\u4fdd\u969c\u3002 \u5b9e\u73b0\u4e00\u81f4\u6027\u7684\u63aa\u65bd\u5305\u62ec\uff1a \u4fdd\u8bc1\u539f\u5b50\u6027\u3001\u6301\u4e45\u6027\u548c\u9694\u79bb\u6027\uff0c\u5982\u679c\u8fd9\u4e9b\u7279\u6027\u65e0\u6cd5\u4fdd\u8bc1\uff0c\u4e8b\u52a1\u7684\u4e00\u81f4\u6027\u4e5f\u65e0\u6cd5\u4fdd\u8bc1 \u6570\u636e\u5e93\u672c\u8eab\u63d0\u4f9b\u4fdd\u969c\uff0c\u4f8b\u5982\u4e0d\u5141\u8bb8\u5411\u6574\u5f62\u5217\u63d2\u5165\u5b57\u7b26\u4e32\u503c\u3001\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7\u5217\u7684\u9650\u5236\u7b49 \u5e94\u7528\u5c42\u9762\u8fdb\u884c\u4fdd\u969c\uff0c\u4f8b\u5982\u5982\u679c\u8f6c\u8d26\u64cd\u4f5c\u53ea\u6263\u9664\u8f6c\u8d26\u8005\u7684\u4f59\u989d\uff0c\u800c\u6ca1\u6709\u589e\u52a0\u63a5\u6536\u8005\u7684\u4f59\u989d\uff0c\u65e0\u8bba\u6570\u636e\u5e93\u5b9e\u73b0\u7684\u591a\u4e48\u5b8c\u7f8e\uff0c\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u72b6\u6001\u7684\u4e00\u81f4","title":"\u4e00\u81f4\u6027"},{"location":"network/architecture.html","text":"Architecture \u6570\u636e\u94fe\u8def\u5c42 \u4ee5\u592a\u7f51\u534f\u8bae \u6570\u636e\u7ed3\u6784\u56fe\uff1a MTU:1500 \u5934\u5b57\u6bb5\uff1a \u901a\u8fc7mac\u5730\u5740\u901a\u4fe1\uff0c\u5bf9\u65b9mac\u5730\u5740\u901a\u8fc7 arp \u534f\u8bae\u83b7\u53d6: \u5f53\u6e90ip\u8ddf\u76ee\u7684ip\u5728\u540c\u4e00\u4e2a\u5b50\u7f51\uff0c\u53ef\u901a\u8fc7 ARP \u83b7\u53d6mac \u5f53\u4e0d\u5728\u540c\u4e00\u5b50\u7f51\uff0c\u76f4\u63a5\u53d1\u7ed9 \u7f51\u5173 \u7f51\u7edc\u5c42 IPv4\u534f\u8bae \u6570\u636e\u7ed3\u6784\u56fe\uff1a \u5934\u5b57\u6bb5\uff1a ARP\u534f\u8bae \u4f20\u8f93\u5c42 TCP \u53ef\u9760\uff0c\u9762\u5411\u8fde\u63a5 UDP \u4e0d\u53ef\u9760","title":"Architecture"},{"location":"network/architecture.html#architecture","text":"","title":"Architecture"},{"location":"network/architecture.html#_1","text":"","title":"\u6570\u636e\u94fe\u8def\u5c42"},{"location":"network/architecture.html#_2","text":"\u6570\u636e\u7ed3\u6784\u56fe\uff1a MTU:1500 \u5934\u5b57\u6bb5\uff1a \u901a\u8fc7mac\u5730\u5740\u901a\u4fe1\uff0c\u5bf9\u65b9mac\u5730\u5740\u901a\u8fc7 arp \u534f\u8bae\u83b7\u53d6: \u5f53\u6e90ip\u8ddf\u76ee\u7684ip\u5728\u540c\u4e00\u4e2a\u5b50\u7f51\uff0c\u53ef\u901a\u8fc7 ARP \u83b7\u53d6mac \u5f53\u4e0d\u5728\u540c\u4e00\u5b50\u7f51\uff0c\u76f4\u63a5\u53d1\u7ed9 \u7f51\u5173","title":"\u4ee5\u592a\u7f51\u534f\u8bae"},{"location":"network/architecture.html#_3","text":"","title":"\u7f51\u7edc\u5c42"},{"location":"network/architecture.html#ipv4","text":"\u6570\u636e\u7ed3\u6784\u56fe\uff1a \u5934\u5b57\u6bb5\uff1a","title":"IPv4\u534f\u8bae"},{"location":"network/architecture.html#arp","text":"","title":"ARP\u534f\u8bae"},{"location":"network/architecture.html#_4","text":"","title":"\u4f20\u8f93\u5c42"},{"location":"network/architecture.html#tcp","text":"\u53ef\u9760\uff0c\u9762\u5411\u8fde\u63a5","title":"TCP"},{"location":"network/architecture.html#udp","text":"\u4e0d\u53ef\u9760","title":"UDP"},{"location":"network/tcp.html","text":"TCP \u4ea4\u4e92\uff1a \u72b6\u6001\u8f6c\u79fb\uff1a \u6848\u4f8b\uff1a","title":"TCP"},{"location":"network/tcp.html#tcp","text":"\u4ea4\u4e92\uff1a \u72b6\u6001\u8f6c\u79fb\uff1a \u6848\u4f8b\uff1a","title":"TCP"},{"location":"network/tcp.html#_1","text":"","title":""},{"location":"redis/architecture.html","text":"Architecture \u57fa\u672c\u5b9e\u73b0 \u6027\u80fd \u7cbe\u81f4\u7684key,val\u6570\u636e\u673a\u6784 reactor\u5355\u7ebf\u7a0b\u6a21\u578b \u53ef\u7528\u6027 \u6301\u4e45\u5316\u5907\u4efdrdb,aof \u4e3b\u4ece\u540c\u6b65\uff08\u8bfb\u5199\u5206\u79bb\uff09\uff0c\u54e8\u5175 \u53ef\u6269\u5c55 redis cluster Key\u6570\u636e\u7ed3\u6784 \u7c7b\u4f3cJava\u91cc\u9762 HashMap \u3002 \u6269\u5bb9\uff08rehash\uff09\u65f6,\u4e3a\u9632\u6b62\u4e00\u6b21\u6027\u5927\u91cf\u62f7\u8d1d\u5bfc\u81f4redis\u670d\u52a1\u505c\u987f\uff0c\u91c7\u7528 \u6e10\u8fdb\u5f0frehash \uff0c\u5206\u6279\u62f7\u8d1d\u3002 Val\u6570\u636e\u7ed3\u6784 String \u7b80\u5355\u52a8\u6001\u5b57\u7b26\u4e32 List \u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u5217\u8868\u4e2d\u4fdd\u5b58\u7684\u5355\u4e2a\u6570\u636e\uff08\u6709\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\uff09\u5c0f\u4e8e 64 \u5b57\u8282 \u5217\u8868\u4e2d\u6570\u636e\u4e2a\u6570\u5c11\u4e8e 512 \u4e2a \u4f18\u70b9\uff1a \u7701\u5185\u5b58 \u6570\u636e\u91cf\u5c0f\u65f6\uff0c\u8bfb\u5199\u65f6\u95f4\u590d\u6742\u5ea6\u5c1a\u53ef\u63a5\u53d7 \u53cc\u5411\u5faa\u73af\u94fe\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6 Hash \u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u5b57\u5178\u4e2d\u4fdd\u5b58\u7684\u952e\u548c\u503c\u5c0f\u4e8e 64 \u5b57\u8282 \u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u4e2a\u6570\u8981\u5c0f\u4e8e 512 \u4e2a \u54c8\u5e0c\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6 Set \u6709\u5e8f\u6570\u7ec4 \u6761\u4ef6\uff1a \u5b58\u50a8\u7684\u6570\u636e\u90fd\u662f\u6574\u6570 \u5b58\u50a8\u7684\u6570\u636e\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7 512 \u4e2a \u54c8\u5e0c\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u6709\u5e8f\u6570\u7ec4\u6761\u4ef6\u65f6 ZSet \u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u6240\u6709\u6570\u636e\u7684\u5927\u5c0f\u90fd\u8981\u5c0f\u4e8e 64 \u5b57\u8282 \u5143\u7d20\u4e2a\u6570\u8981\u5c0f\u4e8e 128 \u4e2a \u8df3\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6","title":"Architecture"},{"location":"redis/architecture.html#architecture","text":"","title":"Architecture"},{"location":"redis/architecture.html#_1","text":"","title":"\u57fa\u672c\u5b9e\u73b0"},{"location":"redis/architecture.html#_2","text":"\u7cbe\u81f4\u7684key,val\u6570\u636e\u673a\u6784 reactor\u5355\u7ebf\u7a0b\u6a21\u578b","title":"\u6027\u80fd"},{"location":"redis/architecture.html#_3","text":"\u6301\u4e45\u5316\u5907\u4efdrdb,aof \u4e3b\u4ece\u540c\u6b65\uff08\u8bfb\u5199\u5206\u79bb\uff09\uff0c\u54e8\u5175","title":"\u53ef\u7528\u6027"},{"location":"redis/architecture.html#_4","text":"redis cluster","title":"\u53ef\u6269\u5c55"},{"location":"redis/architecture.html#key","text":"\u7c7b\u4f3cJava\u91cc\u9762 HashMap \u3002 \u6269\u5bb9\uff08rehash\uff09\u65f6,\u4e3a\u9632\u6b62\u4e00\u6b21\u6027\u5927\u91cf\u62f7\u8d1d\u5bfc\u81f4redis\u670d\u52a1\u505c\u987f\uff0c\u91c7\u7528 \u6e10\u8fdb\u5f0frehash \uff0c\u5206\u6279\u62f7\u8d1d\u3002","title":"Key\u6570\u636e\u7ed3\u6784"},{"location":"redis/architecture.html#val","text":"","title":"Val\u6570\u636e\u7ed3\u6784"},{"location":"redis/architecture.html#string","text":"\u7b80\u5355\u52a8\u6001\u5b57\u7b26\u4e32","title":"String"},{"location":"redis/architecture.html#list","text":"\u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u5217\u8868\u4e2d\u4fdd\u5b58\u7684\u5355\u4e2a\u6570\u636e\uff08\u6709\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\uff09\u5c0f\u4e8e 64 \u5b57\u8282 \u5217\u8868\u4e2d\u6570\u636e\u4e2a\u6570\u5c11\u4e8e 512 \u4e2a \u4f18\u70b9\uff1a \u7701\u5185\u5b58 \u6570\u636e\u91cf\u5c0f\u65f6\uff0c\u8bfb\u5199\u65f6\u95f4\u590d\u6742\u5ea6\u5c1a\u53ef\u63a5\u53d7 \u53cc\u5411\u5faa\u73af\u94fe\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6","title":"List"},{"location":"redis/architecture.html#hash","text":"\u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u5b57\u5178\u4e2d\u4fdd\u5b58\u7684\u952e\u548c\u503c\u5c0f\u4e8e 64 \u5b57\u8282 \u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u4e2a\u6570\u8981\u5c0f\u4e8e 512 \u4e2a \u54c8\u5e0c\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6","title":"Hash"},{"location":"redis/architecture.html#set","text":"\u6709\u5e8f\u6570\u7ec4 \u6761\u4ef6\uff1a \u5b58\u50a8\u7684\u6570\u636e\u90fd\u662f\u6574\u6570 \u5b58\u50a8\u7684\u6570\u636e\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7 512 \u4e2a \u54c8\u5e0c\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u6709\u5e8f\u6570\u7ec4\u6761\u4ef6\u65f6","title":"Set"},{"location":"redis/architecture.html#zset","text":"\u538b\u7f29\u5217\u8868 \u6761\u4ef6\uff1a \u6240\u6709\u6570\u636e\u7684\u5927\u5c0f\u90fd\u8981\u5c0f\u4e8e 64 \u5b57\u8282 \u5143\u7d20\u4e2a\u6570\u8981\u5c0f\u4e8e 128 \u4e2a \u8df3\u8868 \u6761\u4ef6\uff1a \u4e0d\u6ee1\u8db3\u538b\u7f29\u5217\u8868\u6761\u4ef6\u65f6","title":"ZSet"},{"location":"redis/cluster.html","text":"Cluster \u5206\u7247\uff0c\u6c34\u5e73\u6269\u5c55 \u6d41\u7a0b i.e. Range Based \u5206\u7247 key===CRC16===>16bit====16bit%16384====>x slot slot \u4e0eN\u4e2a\u5b9e\u4f8b\u6620\u5c04\uff1a 16384 slot/N","title":"Cluster"},{"location":"redis/cluster.html#cluster","text":"\u5206\u7247\uff0c\u6c34\u5e73\u6269\u5c55","title":"Cluster"},{"location":"redis/cluster.html#_1","text":"i.e. Range Based \u5206\u7247 key===CRC16===>16bit====16bit%16384====>x slot slot \u4e0eN\u4e2a\u5b9e\u4f8b\u6620\u5c04\uff1a 16384 slot/N","title":"\u6d41\u7a0b"},{"location":"redis/leader_follower.html","text":"Leader Follower \u6d41\u7a0b\u56fe \u57fa\u672c\u6d41\u7a0b\uff1a \u5168\u91cf\u590d\u5236 \u57fa\u4e8e\u957f\u8fde\u63a5\u547d\u4ee4\u4f20\u64ad \u4e3b\u4ece\u7ea7\u8054\u6a21\u5f0f \u597d\u5904\uff1a \u51cf\u5c11\u4e3b\u5e93\u751f\u6210RDB(cpu)\u3001\u4f20\u8f93RDB(\u7f51\u7edcio)\u538b\u529b\u3002 \u589e\u91cf\u590d\u5236 \u89e6\u53d1\u6761\u4ef6\uff1a \u5f53\u4ece\u5e93\u4e0e\u4e3b\u5e93\u65ad\u5f00\u8fde\u63a5 \u5b9e\u73b0: \u73af\u5f62\u7f13\u51b2 \u6ce8\uff1a \u5982\u679c\u8981\u590d\u5236\u5185\u5bb9\u5728\u7f13\u51b2\u533a\u4e2d\u5df2\u7ecf\u88ab\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u518d\u505a\u589e\u91cf\u590d\u5236\u4e86\uff0c\u800c\u662f\u8fdb\u884c\u5168\u91cf\u590d\u5236\u3002","title":"Leader Follower"},{"location":"redis/leader_follower.html#leader-follower","text":"","title":"Leader Follower"},{"location":"redis/leader_follower.html#_1","text":"\u57fa\u672c\u6d41\u7a0b\uff1a \u5168\u91cf\u590d\u5236 \u57fa\u4e8e\u957f\u8fde\u63a5\u547d\u4ee4\u4f20\u64ad","title":"\u6d41\u7a0b\u56fe"},{"location":"redis/leader_follower.html#_2","text":"\u597d\u5904\uff1a \u51cf\u5c11\u4e3b\u5e93\u751f\u6210RDB(cpu)\u3001\u4f20\u8f93RDB(\u7f51\u7edcio)\u538b\u529b\u3002","title":"\u4e3b\u4ece\u7ea7\u8054\u6a21\u5f0f"},{"location":"redis/leader_follower.html#_3","text":"\u89e6\u53d1\u6761\u4ef6\uff1a \u5f53\u4ece\u5e93\u4e0e\u4e3b\u5e93\u65ad\u5f00\u8fde\u63a5 \u5b9e\u73b0: \u73af\u5f62\u7f13\u51b2 \u6ce8\uff1a \u5982\u679c\u8981\u590d\u5236\u5185\u5bb9\u5728\u7f13\u51b2\u533a\u4e2d\u5df2\u7ecf\u88ab\u8986\u76d6\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u518d\u505a\u589e\u91cf\u590d\u5236\u4e86\uff0c\u800c\u662f\u8fdb\u884c\u5168\u91cf\u590d\u5236\u3002","title":"\u589e\u91cf\u590d\u5236"},{"location":"redis/persistence.html","text":"Persistence AOF \u5199\u56de\u7b56\u7565 \u6a21\u5f0f \u662f\u5426\u963b\u585e \u7279\u70b9 Always \u662f \u6027\u80fd\u5dee\uff0c\u53ef\u9760\u6027\u597d Everysec \u5237\u76d8\u7531\u5b50\u8fdb\u7a0b\u6267\u884c\uff0c\u4e0d\u76f4\u63a5\u963b\u585e\u4e3b\u8fdb\u7a0b\uff0c\u4f46\u5237\u76d8\u5b8c\u6210\u7684\u5feb\u6162\u4f1a\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u963b\u585e\u65f6\u957f \u6027\u80fd\uff0c\u53ef\u9760\u6027tradeoff No \u662f \u6027\u80fd\u597d,\u53ef\u9760\u6027\u5dee AOF\u91cd\u5199 \u5b50\u8fdb\u7a0b\u6267\u884cAOF\u91cd\u5199\uff0c\u597d\u5904\uff1a \u5b50\u8fdb\u7a0b\u8fdb\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002 \u5b50\u8fdb\u7a0b\u5e26\u6709\u4e3b\u8fdb\u7a0b\u7684\u6570\u636e\u526f\u672c\uff0c\u4f7f\u7528\u5b50\u8fdb\u7a0b\u800c\u4e0d\u662f\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u5b50\u8fdb\u7a0b\u5728\u8fdb\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c \u4e3b\u8fdb\u7a0b\u8fd8\u9700\u8981\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\uff0c \u800c\u65b0\u7684\u547d\u4ee4\u53ef\u80fd\u5bf9\u73b0\u6709\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c \u8fd9\u4f1a\u8ba9\u5f53\u524d\u6570\u636e\u5e93\u7684\u6570\u636e\u548c\u91cd\u5199\u540e\u7684 AOF \u6587\u4ef6\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u5f53\u5b50\u8fdb\u7a0b\u5728\u6267\u884c AOF \u91cd\u5199\u65f6\uff0c \u4e3b\u8fdb\u7a0b\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u4e09\u4e2a\u5de5\u4f5c\uff1a \u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002 \u5c06\u5199\u547d\u4ee4\u8ffd\u52a0\u5230\u73b0\u6709\u7684 AOF \u6587\u4ef6\u4e2d\u3002 \u5c06\u5199\u547d\u4ee4\u8ffd\u52a0\u5230 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u3002 \u8fd9\u6837\u4e00\u6765\u53ef\u4ee5\u4fdd\u8bc1\uff1a \u73b0\u6709\u7684 AOF \u529f\u80fd\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u5373\u4f7f\u5728 AOF \u91cd\u5199\u671f\u95f4\u53d1\u751f\u505c\u673a\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u6570\u636e\u4e22\u5931\u3002 \u6240\u6709\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u4fee\u6539\u7684\u547d\u4ee4\u90fd\u4f1a\u88ab\u8bb0\u5f55\u5230 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u3002 \u5f53\u5b50\u8fdb\u7a0b\u5b8c\u6210 AOF \u91cd\u5199\u4e4b\u540e\uff0c \u5b83\u4f1a\u5411\u7236\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2a\u5b8c\u6210\u4fe1\u53f7\uff0c \u7236\u8fdb\u7a0b\u5728\u63a5\u5230\u5b8c\u6210\u4fe1\u53f7\u4e4b\u540e\uff0c \u4f1a\u8c03\u7528\u4e00\u4e2a\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c \u5e76\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\uff1a \u5c06 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u7684\u5185\u5bb9\u5168\u90e8\u5199\u5165\u5230\u65b0 AOF \u6587\u4ef6\u4e2d\u3002 \u5bf9\u65b0\u7684 AOF \u6587\u4ef6\u8fdb\u884c\u6539\u540d\uff0c\u8986\u76d6\u539f\u6709\u7684 AOF \u6587\u4ef6\u3002 \u5199\u5165\u7f13\u5b58 \u548c \u6539\u540d\u64cd\u4f5c \u4f1a\u9020\u6210\u4e3b\u8fdb\u7a0b\u963b\u585e\uff0c \u5728\u5176\u4ed6\u65f6\u5019\uff0c AOF \u540e\u53f0\u91cd\u5199\u90fd\u4e0d\u4f1a\u5bf9\u4e3b\u8fdb\u7a0b\u9020\u6210\u963b\u585e\uff0c \u8fd9\u5c06 AOF \u91cd\u5199\u5bf9\u6027\u80fd\u9020\u6210\u7684\u5f71\u54cd\u964d\u5230\u4e86\u6700\u4f4e\u3002 RDB \u5185\u5b58\u5feb\u7167\uff0cfork\u5b50\u8fdb\u7a0b\uff0c\u4e0d\u963b\u585e\u4e3b\u8fdb\u7a0b\u3002 RDB-AOF \u6df7\u5408\u6301\u4e45\u5316 \uff1a RDB \u6301\u4e45\u5316\u80fd\u591f\u5feb\u901f\u5730\u50a8\u5b58\u548c\u6062\u590d\u6570\u636e\uff0c \u4f46\u662f\u5728\u670d\u52a1\u5668\u505c\u673a\u65f6\u5374\u4f1a\u4e22\u5931\u5927\u91cf\u6570\u636e AOF \u6301\u4e45\u5316\u80fd\u591f\u6709\u6548\u5730\u63d0\u9ad8\u6570\u636e\u7684\u5b89\u5168\u6027\uff0c \u4f46\u662f\u5728\u50a8\u5b58\u548c\u6062\u590d\u6570\u636e\u65b9\u9762\u5374\u8981\u8017\u8d39\u5927\u91cf\u7684\u65f6\u95f4 \u901a\u8fc7 aof-use-rdb-preamble yes # yes\uff1a\u5f00\u542f\uff0cno\uff1a\u5173\u95ed \u5f00\u542f\u6df7\u5408\u6301\u4e45\u5316\u540e\uff0cfork\u51fa\u7684\u5b50\u8fdb\u7a0b\u5148\u5c06\u5171\u4eab\u7684\u5185\u5b58\u526f\u672c\u5168\u91cf\u7684\u4ee5RDB\u65b9\u5f0f\u5199\u5165aof\u6587\u4ef6\uff0c\u7136\u540e\u5728\u5c06aof_rewrite_buf\u91cd\u5199\u7f13\u51b2\u533a\u7684\u589e\u91cf\u547d\u4ee4\u4ee5AOF\u65b9\u5f0f\u5199\u5165\u5230\u6587\u4ef6\uff0c\u5199\u5165\u5b8c\u6210\u540e\u901a\u77e5\u4e3b\u8fdb\u7a0b\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u5c06\u65b0\u7684\u542b\u6709RDB\u683c\u5f0f\u548cAOF\u683c\u5f0f\u7684AOF\u6587\u4ef6\u66ff\u6362\u65e7\u7684\u7684AOF\u6587\u4ef6\u3002 \u7b80\u5355\u7684\u8bf4\uff1a\u65b0\u7684AOF\u6587\u4ef6\u524d\u534a\u6bb5\u662fRDB\u683c\u5f0f\u7684\u5168\u91cf\u6570\u636e\u540e\u534a\u6bb5\u662fAOF\u683c\u5f0f\u7684\u589e\u91cf\u6570\u636e","title":"Persistence"},{"location":"redis/persistence.html#persistence","text":"","title":"Persistence"},{"location":"redis/persistence.html#aof","text":"","title":"AOF"},{"location":"redis/persistence.html#_1","text":"\u6a21\u5f0f \u662f\u5426\u963b\u585e \u7279\u70b9 Always \u662f \u6027\u80fd\u5dee\uff0c\u53ef\u9760\u6027\u597d Everysec \u5237\u76d8\u7531\u5b50\u8fdb\u7a0b\u6267\u884c\uff0c\u4e0d\u76f4\u63a5\u963b\u585e\u4e3b\u8fdb\u7a0b\uff0c\u4f46\u5237\u76d8\u5b8c\u6210\u7684\u5feb\u6162\u4f1a\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u963b\u585e\u65f6\u957f \u6027\u80fd\uff0c\u53ef\u9760\u6027tradeoff No \u662f \u6027\u80fd\u597d,\u53ef\u9760\u6027\u5dee","title":"\u5199\u56de\u7b56\u7565"},{"location":"redis/persistence.html#aof_1","text":"\u5b50\u8fdb\u7a0b\u6267\u884cAOF\u91cd\u5199\uff0c\u597d\u5904\uff1a \u5b50\u8fdb\u7a0b\u8fdb\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002 \u5b50\u8fdb\u7a0b\u5e26\u6709\u4e3b\u8fdb\u7a0b\u7684\u6570\u636e\u526f\u672c\uff0c\u4f7f\u7528\u5b50\u8fdb\u7a0b\u800c\u4e0d\u662f\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u5b50\u8fdb\u7a0b\u5728\u8fdb\u884c AOF \u91cd\u5199\u671f\u95f4\uff0c \u4e3b\u8fdb\u7a0b\u8fd8\u9700\u8981\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\uff0c \u800c\u65b0\u7684\u547d\u4ee4\u53ef\u80fd\u5bf9\u73b0\u6709\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c \u8fd9\u4f1a\u8ba9\u5f53\u524d\u6570\u636e\u5e93\u7684\u6570\u636e\u548c\u91cd\u5199\u540e\u7684 AOF \u6587\u4ef6\u4e2d\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u5f53\u5b50\u8fdb\u7a0b\u5728\u6267\u884c AOF \u91cd\u5199\u65f6\uff0c \u4e3b\u8fdb\u7a0b\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u4e09\u4e2a\u5de5\u4f5c\uff1a \u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002 \u5c06\u5199\u547d\u4ee4\u8ffd\u52a0\u5230\u73b0\u6709\u7684 AOF \u6587\u4ef6\u4e2d\u3002 \u5c06\u5199\u547d\u4ee4\u8ffd\u52a0\u5230 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u3002 \u8fd9\u6837\u4e00\u6765\u53ef\u4ee5\u4fdd\u8bc1\uff1a \u73b0\u6709\u7684 AOF \u529f\u80fd\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u5373\u4f7f\u5728 AOF \u91cd\u5199\u671f\u95f4\u53d1\u751f\u505c\u673a\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u6570\u636e\u4e22\u5931\u3002 \u6240\u6709\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u4fee\u6539\u7684\u547d\u4ee4\u90fd\u4f1a\u88ab\u8bb0\u5f55\u5230 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u3002 \u5f53\u5b50\u8fdb\u7a0b\u5b8c\u6210 AOF \u91cd\u5199\u4e4b\u540e\uff0c \u5b83\u4f1a\u5411\u7236\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2a\u5b8c\u6210\u4fe1\u53f7\uff0c \u7236\u8fdb\u7a0b\u5728\u63a5\u5230\u5b8c\u6210\u4fe1\u53f7\u4e4b\u540e\uff0c \u4f1a\u8c03\u7528\u4e00\u4e2a\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c \u5e76\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\uff1a \u5c06 AOF \u91cd\u5199\u7f13\u5b58\u4e2d\u7684\u5185\u5bb9\u5168\u90e8\u5199\u5165\u5230\u65b0 AOF \u6587\u4ef6\u4e2d\u3002 \u5bf9\u65b0\u7684 AOF \u6587\u4ef6\u8fdb\u884c\u6539\u540d\uff0c\u8986\u76d6\u539f\u6709\u7684 AOF \u6587\u4ef6\u3002 \u5199\u5165\u7f13\u5b58 \u548c \u6539\u540d\u64cd\u4f5c \u4f1a\u9020\u6210\u4e3b\u8fdb\u7a0b\u963b\u585e\uff0c \u5728\u5176\u4ed6\u65f6\u5019\uff0c AOF \u540e\u53f0\u91cd\u5199\u90fd\u4e0d\u4f1a\u5bf9\u4e3b\u8fdb\u7a0b\u9020\u6210\u963b\u585e\uff0c \u8fd9\u5c06 AOF \u91cd\u5199\u5bf9\u6027\u80fd\u9020\u6210\u7684\u5f71\u54cd\u964d\u5230\u4e86\u6700\u4f4e\u3002","title":"AOF\u91cd\u5199"},{"location":"redis/persistence.html#rdb","text":"\u5185\u5b58\u5feb\u7167\uff0cfork\u5b50\u8fdb\u7a0b\uff0c\u4e0d\u963b\u585e\u4e3b\u8fdb\u7a0b\u3002 RDB-AOF \u6df7\u5408\u6301\u4e45\u5316 \uff1a RDB \u6301\u4e45\u5316\u80fd\u591f\u5feb\u901f\u5730\u50a8\u5b58\u548c\u6062\u590d\u6570\u636e\uff0c \u4f46\u662f\u5728\u670d\u52a1\u5668\u505c\u673a\u65f6\u5374\u4f1a\u4e22\u5931\u5927\u91cf\u6570\u636e AOF \u6301\u4e45\u5316\u80fd\u591f\u6709\u6548\u5730\u63d0\u9ad8\u6570\u636e\u7684\u5b89\u5168\u6027\uff0c \u4f46\u662f\u5728\u50a8\u5b58\u548c\u6062\u590d\u6570\u636e\u65b9\u9762\u5374\u8981\u8017\u8d39\u5927\u91cf\u7684\u65f6\u95f4 \u901a\u8fc7 aof-use-rdb-preamble yes # yes\uff1a\u5f00\u542f\uff0cno\uff1a\u5173\u95ed \u5f00\u542f\u6df7\u5408\u6301\u4e45\u5316\u540e\uff0cfork\u51fa\u7684\u5b50\u8fdb\u7a0b\u5148\u5c06\u5171\u4eab\u7684\u5185\u5b58\u526f\u672c\u5168\u91cf\u7684\u4ee5RDB\u65b9\u5f0f\u5199\u5165aof\u6587\u4ef6\uff0c\u7136\u540e\u5728\u5c06aof_rewrite_buf\u91cd\u5199\u7f13\u51b2\u533a\u7684\u589e\u91cf\u547d\u4ee4\u4ee5AOF\u65b9\u5f0f\u5199\u5165\u5230\u6587\u4ef6\uff0c\u5199\u5165\u5b8c\u6210\u540e\u901a\u77e5\u4e3b\u8fdb\u7a0b\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u5c06\u65b0\u7684\u542b\u6709RDB\u683c\u5f0f\u548cAOF\u683c\u5f0f\u7684AOF\u6587\u4ef6\u66ff\u6362\u65e7\u7684\u7684AOF\u6587\u4ef6\u3002 \u7b80\u5355\u7684\u8bf4\uff1a\u65b0\u7684AOF\u6587\u4ef6\u524d\u534a\u6bb5\u662fRDB\u683c\u5f0f\u7684\u5168\u91cf\u6570\u636e\u540e\u534a\u6bb5\u662fAOF\u683c\u5f0f\u7684\u589e\u91cf\u6570\u636e","title":"RDB"},{"location":"redis/sentinel.html","text":"Sentinel \u6545\u969c\u8f6c\u79fb \u6d41\u7a0b\u56fe \u76d1\u63a7 N/2+1 \u4e2a\u8282\u70b9\u54e8\u5175\u96c6\u7fa4\u4e2d\uff0c\u5f53\u4e00\u534a\u8282\u70b9\u901a\u8fc7ping pong\u5224\u5b9a\u4e3b\u4ece\u5e93\u4e0b\u7ebf\uff0c\u5219\u786e\u8ba4\u4e0b\u7ebf\u3002 \u54e8\u5175\u4e4b\u95f4\u901a\u8fc7 pub/sub \u673a\u5236 \u76f8\u4e92\u53d1\u73b0 \uff0c \u4fe1\u606f\u540c\u6b65 \u3002 \u9009\u4e3e \u7b5b\u9009\uff0c\u6839\u636e\u5728\u7ebf\u72b6\u6001\uff0c\u5386\u53f2\u7f51\u7edc\u72b6\u6001\u53bb\u6389\u4e0d\u7b26\u5408\u7684\u4ece\u5e93 \u6309\u7167 \u4f18\u5148\u7ea7\u3001\u590d\u5236\u8fdb\u5ea6\u3001ID\u53f7\u9009\u4e3e \u901a\u77e5 pub/sub \u4e8b\u4ef6\u901a\u77e5","title":"Sentinel"},{"location":"redis/sentinel.html#sentinel","text":"\u6545\u969c\u8f6c\u79fb","title":"Sentinel"},{"location":"redis/sentinel.html#_1","text":"","title":"\u6d41\u7a0b\u56fe"},{"location":"redis/sentinel.html#_2","text":"N/2+1 \u4e2a\u8282\u70b9\u54e8\u5175\u96c6\u7fa4\u4e2d\uff0c\u5f53\u4e00\u534a\u8282\u70b9\u901a\u8fc7ping pong\u5224\u5b9a\u4e3b\u4ece\u5e93\u4e0b\u7ebf\uff0c\u5219\u786e\u8ba4\u4e0b\u7ebf\u3002 \u54e8\u5175\u4e4b\u95f4\u901a\u8fc7 pub/sub \u673a\u5236 \u76f8\u4e92\u53d1\u73b0 \uff0c \u4fe1\u606f\u540c\u6b65 \u3002","title":"\u76d1\u63a7"},{"location":"redis/sentinel.html#_3","text":"\u7b5b\u9009\uff0c\u6839\u636e\u5728\u7ebf\u72b6\u6001\uff0c\u5386\u53f2\u7f51\u7edc\u72b6\u6001\u53bb\u6389\u4e0d\u7b26\u5408\u7684\u4ece\u5e93 \u6309\u7167 \u4f18\u5148\u7ea7\u3001\u590d\u5236\u8fdb\u5ea6\u3001ID\u53f7\u9009\u4e3e","title":"\u9009\u4e3e"},{"location":"redis/sentinel.html#_4","text":"pub/sub \u4e8b\u4ef6\u901a\u77e5","title":"\u901a\u77e5"},{"location":"skywalking/index.html","text":"Skywalking \u4e3b\u8981\u4ef7\u503c \u670d\u52a1\u95f4\u8c03\u7528\u94fe\u8def\u8ffd\u8e2a \u5e94\u7528\u6027\u80fd\u68c0\u6d4b \u5feb\u901f\u4f7f\u7528 docker-compose\u7b80\u5355\u90e8\u7f72 version: '3.3' services: elasticsearch: image: elasticsearch:7.8.0 container_name: elasticsearch restart: always ports: - 9200:9200 environment: discovery.type: single-node TZ: Asia/Shanghai #volumes: # - ./elasticsearch/logs:/usr/share/elasticsearch/logs # - ./elasticsearch/data:/usr/share/elasticsearch/data # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml ulimits: memlock: soft: -1 hard: -1 oap: image: apache/skywalking-oap-server:8.0.1-es7 container_name: oap depends_on: - elasticsearch links: - elasticsearch restart: always ports: - 11800:11800 - 12800:12800 environment: SW_STORAGE: elasticsearch7 # \u6307\u5b9aES\u7248\u672c SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200 TZ: Asia/Shanghai # volumes: # - ./config/alarm-settings.yml:/skywalking/config/alarm-settings.yml ui: image: apache/skywalking-ui:8.0.1 container_name: ui depends_on: - oap links: - oap restart: always ports: - 8080:8080 environment: SW_OAP_ADDRESS: oap:12800 TZ: Asia/Shanghai IDEA\u63a5\u5165\u4f7f\u7528 \u4e0b\u8f7dos\u5bf9\u5e94skywalking agent\uff0chttps://skywalking.apache.org/downloads/ vm\u53c2\u6570\u914d\u7f6e -Dskywalking.agent.service_name=[SVC_NAME] -Dskywalking.collector.backend_service=[host:port] -javaagent:/path of your agent/skywalking-agent.jar \u7ecf\u5178\u67b6\u6784","title":"Skywalking"},{"location":"skywalking/index.html#skywalking","text":"","title":"Skywalking"},{"location":"skywalking/index.html#_1","text":"\u670d\u52a1\u95f4\u8c03\u7528\u94fe\u8def\u8ffd\u8e2a \u5e94\u7528\u6027\u80fd\u68c0\u6d4b","title":"\u4e3b\u8981\u4ef7\u503c"},{"location":"skywalking/index.html#_2","text":"","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"skywalking/index.html#docker-compose","text":"version: '3.3' services: elasticsearch: image: elasticsearch:7.8.0 container_name: elasticsearch restart: always ports: - 9200:9200 environment: discovery.type: single-node TZ: Asia/Shanghai #volumes: # - ./elasticsearch/logs:/usr/share/elasticsearch/logs # - ./elasticsearch/data:/usr/share/elasticsearch/data # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml ulimits: memlock: soft: -1 hard: -1 oap: image: apache/skywalking-oap-server:8.0.1-es7 container_name: oap depends_on: - elasticsearch links: - elasticsearch restart: always ports: - 11800:11800 - 12800:12800 environment: SW_STORAGE: elasticsearch7 # \u6307\u5b9aES\u7248\u672c SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200 TZ: Asia/Shanghai # volumes: # - ./config/alarm-settings.yml:/skywalking/config/alarm-settings.yml ui: image: apache/skywalking-ui:8.0.1 container_name: ui depends_on: - oap links: - oap restart: always ports: - 8080:8080 environment: SW_OAP_ADDRESS: oap:12800 TZ: Asia/Shanghai","title":"docker-compose\u7b80\u5355\u90e8\u7f72"},{"location":"skywalking/index.html#idea","text":"\u4e0b\u8f7dos\u5bf9\u5e94skywalking agent\uff0chttps://skywalking.apache.org/downloads/ vm\u53c2\u6570\u914d\u7f6e -Dskywalking.agent.service_name=[SVC_NAME] -Dskywalking.collector.backend_service=[host:port] -javaagent:/path of your agent/skywalking-agent.jar","title":"IDEA\u63a5\u5165\u4f7f\u7528"},{"location":"skywalking/index.html#_3","text":"","title":"\u7ecf\u5178\u67b6\u6784"},{"location":"system_design/distributed_app_crawler.html","text":"Distributed App Crawler \u67b6\u6784\u56fe \u80cc\u666f \u67d0\u6f6e\u978bapp\u5b9a\u65f6\u62a2\u8d2d\uff0c\u6838\u5fc3\u62a2\u8d2d\u903b\u8f91\u4f7f\u7528\u79c1\u6709\u7f51\u7edc\u534f\u8bae\uff0c\u5206\u6790\u6210\u672c\u8fc7\u9ad8\u3002\u4e3a\u7b80\u5316\u65b9\u6848\uff0c\u91c7\u7528appium\u5206\u5e03\u5f0f\u6a21\u62df\u4eba\u5de5\u62a2\u8d2d\u3002 \u9700\u6c42 \u534a\u5c0f\u65f6\u5185\u9884\u7ea62w\u8d26\u53f7 \u65b9\u6848 \u8d26\u53f7\u6765\u6e90\u53ca\u514d\u767b \u624b\u673a\u63a5\u7801 \u767b\u5f55\u540e\uff0c\u4fdd\u5b58app\u72b6\u6001\u6301\u4e45\u5316\u76f8\u5173\u6587\u4ef6 \u4e0b\u6b21\u767b\u5f55\u76f4\u63a5\u66ff\u6362\u76f8\u5173\u6587\u4ef6 \u8eab\u4efd\u8bc1\u6765\u6e90 \u8eab\u4efd\u8bc1\u751f\u6210\u5668 \uff0c\u4e0d\u4fb5\u72af\u9690\u79c1 \u4ee3\u7406 tcp\u4ee3\u7406 \u5206\u5e03\u5f0f\u8c03\u5ea6\u6a21\u578b","title":"Distributed App Crawler"},{"location":"system_design/distributed_app_crawler.html#distributed-app-crawler","text":"","title":"Distributed App Crawler"},{"location":"system_design/distributed_app_crawler.html#_1","text":"","title":"\u67b6\u6784\u56fe"},{"location":"system_design/distributed_app_crawler.html#_2","text":"\u67d0\u6f6e\u978bapp\u5b9a\u65f6\u62a2\u8d2d\uff0c\u6838\u5fc3\u62a2\u8d2d\u903b\u8f91\u4f7f\u7528\u79c1\u6709\u7f51\u7edc\u534f\u8bae\uff0c\u5206\u6790\u6210\u672c\u8fc7\u9ad8\u3002\u4e3a\u7b80\u5316\u65b9\u6848\uff0c\u91c7\u7528appium\u5206\u5e03\u5f0f\u6a21\u62df\u4eba\u5de5\u62a2\u8d2d\u3002","title":"\u80cc\u666f"},{"location":"system_design/distributed_app_crawler.html#_3","text":"\u534a\u5c0f\u65f6\u5185\u9884\u7ea62w\u8d26\u53f7","title":"\u9700\u6c42"},{"location":"system_design/distributed_app_crawler.html#_4","text":"","title":"\u65b9\u6848"},{"location":"system_design/distributed_app_crawler.html#_5","text":"\u624b\u673a\u63a5\u7801 \u767b\u5f55\u540e\uff0c\u4fdd\u5b58app\u72b6\u6001\u6301\u4e45\u5316\u76f8\u5173\u6587\u4ef6 \u4e0b\u6b21\u767b\u5f55\u76f4\u63a5\u66ff\u6362\u76f8\u5173\u6587\u4ef6","title":"\u8d26\u53f7\u6765\u6e90\u53ca\u514d\u767b"},{"location":"system_design/distributed_app_crawler.html#_6","text":"\u8eab\u4efd\u8bc1\u751f\u6210\u5668 \uff0c\u4e0d\u4fb5\u72af\u9690\u79c1","title":"\u8eab\u4efd\u8bc1\u6765\u6e90"},{"location":"system_design/distributed_app_crawler.html#_7","text":"tcp\u4ee3\u7406","title":"\u4ee3\u7406"},{"location":"system_design/distributed_app_crawler.html#_8","text":"","title":"\u5206\u5e03\u5f0f\u8c03\u5ea6\u6a21\u578b"},{"location":"system_design/distributed_system.html","text":"Distributed System \u5ea6\u91cf\u6307\u6807 \u6027\u80fd\uff08Performance\uff09 \u6027\u80fd\u7684\u5ea6\u91cf\u6307\u6807: \u541e\u5410\u91cf:\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u5355\u4f4d\u65f6\u95f4\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf\u3002\u6bd4\u5982tps,qps \u65f6\u5ef6:\u4ece\u7528\u6237\u4f7f\u7528\u4f53\u9a8c\u7684\u89d2\u5ea6\u6765\u770b\uff0c200ms \u662f\u7b2c\u4e00\u4e2a\u5206\u754c\u70b9\uff1a200ms \u4e4b\u5185\uff0c\u7528\u6237\u662f\u611f\u89c9\u4e0d\u5230\u5ef6\u8fdf\u7684\uff0c\u5c31\u50cf\u662f\u77ac\u65f6\u53d1\u751f\u7684\u4e00\u6837\u3002\u800c 1s \u662f\u53e6\u5916\u4e00\u4e2a\u5206\u754c\u70b9\uff1a\u63a5\u53e3\u7684\u54cd\u5e94\u65f6\u95f4\u5728 1s \u4e4b\u5185\u65f6\uff0c\u867d\u7136\u7528\u6237\u53ef\u4ee5\u611f\u53d7\u5230\u4e00\u4e9b\u5ef6\u8fdf\uff0c\u4f46\u5374\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u8d85\u8fc7 1s \u4e4b\u540e\u7528\u6237\u5c31\u4f1a\u6709\u660e\u663e\u7b49\u5f85\u7684\u611f\u89c9\uff0c\u7b49\u5f85\u65f6\u95f4\u8d8a\u957f\uff0c\u7528\u6237\u7684\u4f7f\u7528\u4f53\u9a8c\u5c31\u8d8a\u5dee\u3002\u6240\u4ee5\uff0c\u5065\u5eb7\u7cfb\u7edf\u7684 99 \u5206\u4f4d\u503c\u7684\u54cd\u5e94\u65f6\u95f4\u901a\u5e38\u9700\u8981\u63a7\u5236\u5728 200ms \u4e4b\u5185\uff0c\u800c\u4e0d\u8d85\u8fc7 1s \u7684\u8bf7\u6c42\u5360\u6bd4\u8981\u5728 99.99% \u4ee5\u4e0a\u3002 \u6ce8\uff1a\u541e\u5410\u91cf\u4e0e\u65f6\u5ef6 \u975e\u6b63\u4ea4 \u65b9\u6848\uff1a \u63d0\u5347\u5e76\u884c\u80fd\u529b \u51cf\u5c11\u5355\u6b21\u4efb\u52a1\u54cd\u5e94\u65f6\u95f4\uff08\u7f13\u5b58\uff1a\u63d0\u9ad8 \u8bfb \u6027\u80fd\uff0c\u6d88\u606f\u961f\u5217\uff1a\u63d0\u9ad8 \u5199 \u6027\u80fd\uff09 \u53ef\u6269\u5c55\u6027\uff08Scalability\uff09 \u6c34\u5e73\u6269\u5c55 \u6709\u72b6\u6001 \uff1a\u5982\u5b58\u50a8\u5c42\uff0c\u53ef\u901a\u8fc7\u5206\u7247\uff08\u6309\u4e1a\u52a1\u3001\u6570\u636e\u91cf\u7b49\u7ef4\u5ea6\uff09 \u65e0\u72b6\u6001 \uff1a\u5982\u4e1a\u52a1\u5c42\uff0c\u53ef\u901a\u8fc7\u62c6\u5206\u66f4\u7ec6\u7c92\u5ea6\u7684\u6269\u5c55\uff08\u6309\u5206\u5c42\u3001\u4e1a\u52a1\uff09 \u5782\u76f4\u6269\u5c55 \u5806\u673a\u5668 \u53ef\u7528\u6027\uff08Availability\uff09 \u901a\u5e38\u6765\u8bb2\uff0c\u4e00\u4e2a\u9ad8\u5e76\u53d1\u5927\u6d41\u91cf\u7684\u7cfb\u7edf\uff0c\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u6bd4\u7cfb\u7edf\u6027\u80fd\u4f4e\u66f4\u635f\u4f24\u7528\u6237\u7684\u4f7f\u7528\u4f53\u9a8c\u3002 \u65b9\u6848\uff1a \u7cfb\u7edf\u8bbe\u8ba1 \uff1a \u526f\u672c\uff1a failover\uff08\u6545\u969c\u8f6c\u79fb\uff09\uff1a \u5bf9\u7b49\u8282\u70b9\uff0c\u8d1f\u8f7d\u5747\u8861 \u4e0d\u5bf9\u7b49\u8282\u70b9\uff0c\u9009\u4e3e \u8d85\u65f6\u63a7\u5236\uff1a \u901a\u8fc7\u6536\u96c6\u7cfb\u7edf\u4e4b\u95f4\u7684\u8c03\u7528\u65e5\u5fd7\uff0c\u7edf\u8ba1\u6bd4\u5982\u8bf4 99% \u7684\u54cd\u5e94\u65f6\u95f4\u662f\u600e\u6837\u7684\uff0c\u7136\u540e\u4f9d\u636e\u8fd9\u4e2a\u65f6\u95f4\u6765\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4 \u964d\u7ea7\uff1a \u4fdd\u8bc1\u6838\u5fc3\u670d\u52a1\u7684\u7a33\u5b9a\u800c\u727a\u7272\u975e\u6838\u5fc3\u670d\u52a1\u7684\u505a\u6cd5 \u9650\u6d41\uff1a \u5bf9\u5e76\u53d1\u7684\u8bf7\u6c42\u8fdb\u884c\u9650\u901f\u6765\u4fdd\u62a4\u7cfb\u7edf \u8fd0\u7ef4 \uff1a \u7070\u5ea6\u53d1\u5e03\u3001\u6545\u969c\u6f14\u7ec3 \u4e00\u81f4\u6027\uff08Consistency\uff09 \u4e3a\u4e86\u63d0\u5347 \u53ef\u7528\u6027 \uff0c\u4e0d\u53ef\u907f\u514d\u4f7f\u7528\u526f\u672c\u673a\u5236\uff0c\u4ece\u800c\u5f15\u53d1\u4e00\u81f4\u6027\u95ee\u9898\u3002 \u603b\u7ed3 \u56e0\u679c\u5173\u7cfb\uff1a \u9ad8\u53ef\u6269\u5c55\u6027=>\u9ad8\u6027\u80fd\uff08\u63d0\u5347\u541e\u5410\u91cf\uff0c\u51cf\u5c11\u5ef6\u8fdf\uff09 \u53ef\u7528\u6027\u9700\u4e00\u81f4\u6027\u652f\u6301","title":"Distributed System"},{"location":"system_design/distributed_system.html#distributed-system","text":"","title":"Distributed System"},{"location":"system_design/distributed_system.html#_1","text":"","title":"\u5ea6\u91cf\u6307\u6807"},{"location":"system_design/distributed_system.html#performance","text":"\u6027\u80fd\u7684\u5ea6\u91cf\u6307\u6807: \u541e\u5410\u91cf:\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u5355\u4f4d\u65f6\u95f4\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf\u3002\u6bd4\u5982tps,qps \u65f6\u5ef6:\u4ece\u7528\u6237\u4f7f\u7528\u4f53\u9a8c\u7684\u89d2\u5ea6\u6765\u770b\uff0c200ms \u662f\u7b2c\u4e00\u4e2a\u5206\u754c\u70b9\uff1a200ms \u4e4b\u5185\uff0c\u7528\u6237\u662f\u611f\u89c9\u4e0d\u5230\u5ef6\u8fdf\u7684\uff0c\u5c31\u50cf\u662f\u77ac\u65f6\u53d1\u751f\u7684\u4e00\u6837\u3002\u800c 1s \u662f\u53e6\u5916\u4e00\u4e2a\u5206\u754c\u70b9\uff1a\u63a5\u53e3\u7684\u54cd\u5e94\u65f6\u95f4\u5728 1s \u4e4b\u5185\u65f6\uff0c\u867d\u7136\u7528\u6237\u53ef\u4ee5\u611f\u53d7\u5230\u4e00\u4e9b\u5ef6\u8fdf\uff0c\u4f46\u5374\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u8d85\u8fc7 1s \u4e4b\u540e\u7528\u6237\u5c31\u4f1a\u6709\u660e\u663e\u7b49\u5f85\u7684\u611f\u89c9\uff0c\u7b49\u5f85\u65f6\u95f4\u8d8a\u957f\uff0c\u7528\u6237\u7684\u4f7f\u7528\u4f53\u9a8c\u5c31\u8d8a\u5dee\u3002\u6240\u4ee5\uff0c\u5065\u5eb7\u7cfb\u7edf\u7684 99 \u5206\u4f4d\u503c\u7684\u54cd\u5e94\u65f6\u95f4\u901a\u5e38\u9700\u8981\u63a7\u5236\u5728 200ms \u4e4b\u5185\uff0c\u800c\u4e0d\u8d85\u8fc7 1s \u7684\u8bf7\u6c42\u5360\u6bd4\u8981\u5728 99.99% \u4ee5\u4e0a\u3002 \u6ce8\uff1a\u541e\u5410\u91cf\u4e0e\u65f6\u5ef6 \u975e\u6b63\u4ea4 \u65b9\u6848\uff1a \u63d0\u5347\u5e76\u884c\u80fd\u529b \u51cf\u5c11\u5355\u6b21\u4efb\u52a1\u54cd\u5e94\u65f6\u95f4\uff08\u7f13\u5b58\uff1a\u63d0\u9ad8 \u8bfb \u6027\u80fd\uff0c\u6d88\u606f\u961f\u5217\uff1a\u63d0\u9ad8 \u5199 \u6027\u80fd\uff09","title":"\u6027\u80fd\uff08Performance\uff09"},{"location":"system_design/distributed_system.html#scalability","text":"","title":"\u53ef\u6269\u5c55\u6027\uff08Scalability\uff09"},{"location":"system_design/distributed_system.html#_2","text":"\u6709\u72b6\u6001 \uff1a\u5982\u5b58\u50a8\u5c42\uff0c\u53ef\u901a\u8fc7\u5206\u7247\uff08\u6309\u4e1a\u52a1\u3001\u6570\u636e\u91cf\u7b49\u7ef4\u5ea6\uff09 \u65e0\u72b6\u6001 \uff1a\u5982\u4e1a\u52a1\u5c42\uff0c\u53ef\u901a\u8fc7\u62c6\u5206\u66f4\u7ec6\u7c92\u5ea6\u7684\u6269\u5c55\uff08\u6309\u5206\u5c42\u3001\u4e1a\u52a1\uff09","title":"\u6c34\u5e73\u6269\u5c55"},{"location":"system_design/distributed_system.html#_3","text":"\u5806\u673a\u5668","title":"\u5782\u76f4\u6269\u5c55"},{"location":"system_design/distributed_system.html#availability","text":"\u901a\u5e38\u6765\u8bb2\uff0c\u4e00\u4e2a\u9ad8\u5e76\u53d1\u5927\u6d41\u91cf\u7684\u7cfb\u7edf\uff0c\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u6bd4\u7cfb\u7edf\u6027\u80fd\u4f4e\u66f4\u635f\u4f24\u7528\u6237\u7684\u4f7f\u7528\u4f53\u9a8c\u3002 \u65b9\u6848\uff1a \u7cfb\u7edf\u8bbe\u8ba1 \uff1a \u526f\u672c\uff1a failover\uff08\u6545\u969c\u8f6c\u79fb\uff09\uff1a \u5bf9\u7b49\u8282\u70b9\uff0c\u8d1f\u8f7d\u5747\u8861 \u4e0d\u5bf9\u7b49\u8282\u70b9\uff0c\u9009\u4e3e \u8d85\u65f6\u63a7\u5236\uff1a \u901a\u8fc7\u6536\u96c6\u7cfb\u7edf\u4e4b\u95f4\u7684\u8c03\u7528\u65e5\u5fd7\uff0c\u7edf\u8ba1\u6bd4\u5982\u8bf4 99% \u7684\u54cd\u5e94\u65f6\u95f4\u662f\u600e\u6837\u7684\uff0c\u7136\u540e\u4f9d\u636e\u8fd9\u4e2a\u65f6\u95f4\u6765\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4 \u964d\u7ea7\uff1a \u4fdd\u8bc1\u6838\u5fc3\u670d\u52a1\u7684\u7a33\u5b9a\u800c\u727a\u7272\u975e\u6838\u5fc3\u670d\u52a1\u7684\u505a\u6cd5 \u9650\u6d41\uff1a \u5bf9\u5e76\u53d1\u7684\u8bf7\u6c42\u8fdb\u884c\u9650\u901f\u6765\u4fdd\u62a4\u7cfb\u7edf \u8fd0\u7ef4 \uff1a \u7070\u5ea6\u53d1\u5e03\u3001\u6545\u969c\u6f14\u7ec3","title":"\u53ef\u7528\u6027\uff08Availability\uff09"},{"location":"system_design/distributed_system.html#consistency","text":"\u4e3a\u4e86\u63d0\u5347 \u53ef\u7528\u6027 \uff0c\u4e0d\u53ef\u907f\u514d\u4f7f\u7528\u526f\u672c\u673a\u5236\uff0c\u4ece\u800c\u5f15\u53d1\u4e00\u81f4\u6027\u95ee\u9898\u3002","title":"\u4e00\u81f4\u6027\uff08Consistency\uff09"},{"location":"system_design/distributed_system.html#_4","text":"\u56e0\u679c\u5173\u7cfb\uff1a \u9ad8\u53ef\u6269\u5c55\u6027=>\u9ad8\u6027\u80fd\uff08\u63d0\u5347\u541e\u5410\u91cf\uff0c\u51cf\u5c11\u5ef6\u8fdf\uff09 \u53ef\u7528\u6027\u9700\u4e00\u81f4\u6027\u652f\u6301","title":"\u603b\u7ed3"}]}